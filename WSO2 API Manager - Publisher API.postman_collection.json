{
	"info": {
		"_postman_id": "de44605d-71c9-4445-b136-f33b6e7607b2",
		"name": "WSO2 API Manager - Publisher API",
		"description": "This document specifies a **RESTful API** for WSO2 **API Manager** - Publisher.\n\nIt is written with [swagger 2](http://swagger.io/).\n\n\nContact Support:\n Name: WSO2\n Email: architecture@wso2.com",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "apis",
			"item": [
				{
					"name": "{api Id}",
					"item": [
						{
							"name": "swagger",
							"item": [
								{
									"name": "Get API Definition",
									"request": {
										"method": "GET",
										"header": [
											{
												"description": "Media types acceptable for the response. Default is JSON.\n",
												"key": "Accept",
												"value": "JSON"
											},
											{
												"description": "Validator for conditional requests; based on the ETag of the formerly retrieved\nvariant of the resourec.\n",
												"key": "If-None-Match",
												"value": "<string>"
											},
											{
												"description": "Validator for conditional requests; based on Last Modified header of the\nformerly retrieved variant of the resource.\n",
												"key": "If-Modified-Since",
												"value": "<string>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/apis/:apiId/swagger",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"apis",
												":apiId",
												"swagger"
											],
											"variable": [
												{
													"id": "b5d64a9a-420f-4e9d-ae48-3e32172e2648",
													"key": "apiId",
													"value": "<string>",
													"type": "string",
													"description": "(Required) **API ID** consisting of the **UUID** of the API.\nThe combination of the provider of the API, name of the API and the version is also accepted as a valid API ID.\nShould be formatted as **provider-name-version**.\n"
												}
											]
										},
										"description": "Get the swagger of an API\n"
									},
									"response": [
										{
											"name": "Not Acceptable.\nThe requested media type is not supported\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Media types acceptable for the response. Default is JSON.\n",
														"key": "Accept",
														"value": "JSON"
													},
													{
														"description": "Validator for conditional requests; based on the ETag of the formerly retrieved\nvariant of the resourec.\n",
														"key": "If-None-Match",
														"value": "<string>"
													},
													{
														"description": "Validator for conditional requests; based on Last Modified header of the\nformerly retrieved variant of the resource.\n",
														"key": "If-Modified-Since",
														"value": "<string>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/apis/:apiId/swagger",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"apis",
														":apiId",
														"swagger"
													],
													"variable": [
														{
															"key": "apiId"
														}
													]
												}
											},
											"status": "Not Acceptable",
											"code": 406,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -68757475,\n \"message\": \"voluptate culpa qui minim consectetur\",\n \"description\": \"eu laboris minim\",\n \"moreInfo\": \"et\",\n \"error\": [\n  {\n   \"code\": \"velit et\",\n   \"message\": \"nulla labore deserunt non sed\"\n  },\n  {\n   \"code\": \"qui cupidatat officia\",\n   \"message\": \"cupidatat esse\"\n  }\n ]\n}"
										},
										{
											"name": "Not Found.\nRequested API does not exist.\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Media types acceptable for the response. Default is JSON.\n",
														"key": "Accept",
														"value": "JSON"
													},
													{
														"description": "Validator for conditional requests; based on the ETag of the formerly retrieved\nvariant of the resourec.\n",
														"key": "If-None-Match",
														"value": "<string>"
													},
													{
														"description": "Validator for conditional requests; based on Last Modified header of the\nformerly retrieved variant of the resource.\n",
														"key": "If-Modified-Since",
														"value": "<string>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/apis/:apiId/swagger",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"apis",
														":apiId",
														"swagger"
													],
													"variable": [
														{
															"key": "apiId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -68757475,\n \"message\": \"voluptate culpa qui minim consectetur\",\n \"description\": \"eu laboris minim\",\n \"moreInfo\": \"et\",\n \"error\": [\n  {\n   \"code\": \"velit et\",\n   \"message\": \"nulla labore deserunt non sed\"\n  },\n  {\n   \"code\": \"qui cupidatat officia\",\n   \"message\": \"cupidatat esse\"\n  }\n ]\n}"
										},
										{
											"name": "OK.\nRequested swagger document of the API is returned\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Media types acceptable for the response. Default is JSON.\n",
														"key": "Accept",
														"value": "JSON"
													},
													{
														"description": "Validator for conditional requests; based on the ETag of the formerly retrieved\nvariant of the resourec.\n",
														"key": "If-None-Match",
														"value": "<string>"
													},
													{
														"description": "Validator for conditional requests; based on Last Modified header of the\nformerly retrieved variant of the resource.\n",
														"key": "If-Modified-Since",
														"value": "<string>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/apis/:apiId/swagger",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"apis",
														":apiId",
														"swagger"
													],
													"variable": [
														{
															"key": "apiId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "ETag",
													"value": "dolore reprehenderi",
													"description": "Entity Tag of the response resource. Used by caches, or in conditional requests.\n"
												},
												{
													"key": "Last-Modified",
													"value": "dolore reprehenderi",
													"description": "Date and time the resource has been modifed the last time.\nUsed by caches, or in conditional requests.\n"
												},
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Not Modified.\nEmpty body because the client has already the latest version of the requested resource.\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Media types acceptable for the response. Default is JSON.\n",
														"key": "Accept",
														"value": "JSON"
													},
													{
														"description": "Validator for conditional requests; based on the ETag of the formerly retrieved\nvariant of the resourec.\n",
														"key": "If-None-Match",
														"value": "<string>"
													},
													{
														"description": "Validator for conditional requests; based on Last Modified header of the\nformerly retrieved variant of the resource.\n",
														"key": "If-Modified-Since",
														"value": "<string>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/apis/:apiId/swagger",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"apis",
														":apiId",
														"swagger"
													],
													"variable": [
														{
															"key": "apiId"
														}
													]
												}
											},
											"status": "Not Modified",
											"code": 304,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Update API Definition",
									"request": {
										"method": "PUT",
										"header": [
											{
												"description": "(Required) Media type of the entity in the body. Default is JSON.\n",
												"key": "Content-Type",
												"value": "JSON"
											},
											{
												"description": "Validator for conditional requests; based on ETag.\n",
												"key": "If-Match",
												"value": "<string>"
											},
											{
												"description": "Validator for conditional requests; based on Last Modified header.\n",
												"key": "If-Unmodified-Since",
												"value": "<string>"
											},
											{
												"key": "Content-Type",
												"value": "multipart/form-data"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "apiDefinition",
													"value": "<string>",
													"description": "Swagger definition of the API",
													"type": "text"
												}
											],
											"options": {
												"formdata": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/apis/:apiId/swagger",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"apis",
												":apiId",
												"swagger"
											],
											"variable": [
												{
													"id": "f9a5b7b5-5ab7-4dbc-bec8-38d9a05dea86",
													"key": "apiId",
													"value": "<string>",
													"type": "string",
													"description": "(Required) **API ID** consisting of the **UUID** of the API.\nThe combination of the provider of the API, name of the API and the version is also accepted as a valid API ID.\nShould be formatted as **provider-name-version**.\n"
												}
											]
										},
										"description": "Update an existing swagger definition of an API\n"
									},
									"response": [
										{
											"name": "Forbidden.\nThe request must be conditional but no condition has been specified.\n",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "(Required) Media type of the entity in the body. Default is JSON.\n",
														"key": "Content-Type",
														"value": "JSON"
													},
													{
														"description": "Validator for conditional requests; based on ETag.\n",
														"key": "If-Match",
														"value": "<string>"
													},
													{
														"description": "Validator for conditional requests; based on Last Modified header.\n",
														"key": "If-Unmodified-Since",
														"value": "<string>"
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "apiDefinition",
															"value": "<string>",
															"description": {
																"content": "Swagger definition of the API",
																"type": "text/plain"
															},
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/apis/:apiId/swagger",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"apis",
														":apiId",
														"swagger"
													],
													"variable": [
														{
															"key": "apiId"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -68757475,\n \"message\": \"voluptate culpa qui minim consectetur\",\n \"description\": \"eu laboris minim\",\n \"moreInfo\": \"et\",\n \"error\": [\n  {\n   \"code\": \"velit et\",\n   \"message\": \"nulla labore deserunt non sed\"\n  },\n  {\n   \"code\": \"qui cupidatat officia\",\n   \"message\": \"cupidatat esse\"\n  }\n ]\n}"
										},
										{
											"name": "Bad Request.\nInvalid request or validation error\n",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "(Required) Media type of the entity in the body. Default is JSON.\n",
														"key": "Content-Type",
														"value": "JSON"
													},
													{
														"description": "Validator for conditional requests; based on ETag.\n",
														"key": "If-Match",
														"value": "<string>"
													},
													{
														"description": "Validator for conditional requests; based on Last Modified header.\n",
														"key": "If-Unmodified-Since",
														"value": "<string>"
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "apiDefinition",
															"value": "<string>",
															"description": {
																"content": "Swagger definition of the API",
																"type": "text/plain"
															},
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/apis/:apiId/swagger",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"apis",
														":apiId",
														"swagger"
													],
													"variable": [
														{
															"key": "apiId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -68757475,\n \"message\": \"voluptate culpa qui minim consectetur\",\n \"description\": \"eu laboris minim\",\n \"moreInfo\": \"et\",\n \"error\": [\n  {\n   \"code\": \"velit et\",\n   \"message\": \"nulla labore deserunt non sed\"\n  },\n  {\n   \"code\": \"qui cupidatat officia\",\n   \"message\": \"cupidatat esse\"\n  }\n ]\n}"
										},
										{
											"name": "Not Found.\nThe resource to be updated does not exist.\n",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "(Required) Media type of the entity in the body. Default is JSON.\n",
														"key": "Content-Type",
														"value": "JSON"
													},
													{
														"description": "Validator for conditional requests; based on ETag.\n",
														"key": "If-Match",
														"value": "<string>"
													},
													{
														"description": "Validator for conditional requests; based on Last Modified header.\n",
														"key": "If-Unmodified-Since",
														"value": "<string>"
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "apiDefinition",
															"value": "<string>",
															"description": {
																"content": "Swagger definition of the API",
																"type": "text/plain"
															},
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/apis/:apiId/swagger",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"apis",
														":apiId",
														"swagger"
													],
													"variable": [
														{
															"key": "apiId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -68757475,\n \"message\": \"voluptate culpa qui minim consectetur\",\n \"description\": \"eu laboris minim\",\n \"moreInfo\": \"et\",\n \"error\": [\n  {\n   \"code\": \"velit et\",\n   \"message\": \"nulla labore deserunt non sed\"\n  },\n  {\n   \"code\": \"qui cupidatat officia\",\n   \"message\": \"cupidatat esse\"\n  }\n ]\n}"
										},
										{
											"name": "Precondition Failed.\nThe request has not been performed because one of the preconditions is not met.\n",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "(Required) Media type of the entity in the body. Default is JSON.\n",
														"key": "Content-Type",
														"value": "JSON"
													},
													{
														"description": "Validator for conditional requests; based on ETag.\n",
														"key": "If-Match",
														"value": "<string>"
													},
													{
														"description": "Validator for conditional requests; based on Last Modified header.\n",
														"key": "If-Unmodified-Since",
														"value": "<string>"
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "apiDefinition",
															"value": "<string>",
															"description": {
																"content": "Swagger definition of the API",
																"type": "text/plain"
															},
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/apis/:apiId/swagger",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"apis",
														":apiId",
														"swagger"
													],
													"variable": [
														{
															"key": "apiId"
														}
													]
												}
											},
											"status": "Precondition Failed",
											"code": 412,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -68757475,\n \"message\": \"voluptate culpa qui minim consectetur\",\n \"description\": \"eu laboris minim\",\n \"moreInfo\": \"et\",\n \"error\": [\n  {\n   \"code\": \"velit et\",\n   \"message\": \"nulla labore deserunt non sed\"\n  },\n  {\n   \"code\": \"qui cupidatat officia\",\n   \"message\": \"cupidatat esse\"\n  }\n ]\n}"
										},
										{
											"name": "OK.\nSuccessful response with updated Swagger definition\n",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "(Required) Media type of the entity in the body. Default is JSON.\n",
														"key": "Content-Type",
														"value": "JSON"
													},
													{
														"description": "Validator for conditional requests; based on ETag.\n",
														"key": "If-Match",
														"value": "<string>"
													},
													{
														"description": "Validator for conditional requests; based on Last Modified header.\n",
														"key": "If-Unmodified-Since",
														"value": "<string>"
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "apiDefinition",
															"value": "<string>",
															"description": {
																"content": "Swagger definition of the API",
																"type": "text/plain"
															},
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/apis/:apiId/swagger",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"apis",
														":apiId",
														"swagger"
													],
													"variable": [
														{
															"key": "apiId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Location",
													"value": "dolore reprehenderi",
													"description": "The URL of the newly created resource.\n"
												},
												{
													"key": "ETag",
													"value": "dolore reprehenderi",
													"description": "Entity Tag of the response resource. Used by caches, or in conditional request.\n"
												},
												{
													"key": "Last-Modified",
													"value": "dolore reprehenderi",
													"description": "Date and time the resource has been modifed the last time.\nUsed by caches, or in conditional requests.\n"
												},
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "thumbnail",
							"item": [
								{
									"name": "Get the thumbnail image",
									"request": {
										"method": "GET",
										"header": [
											{
												"description": "Media types acceptable for the response. Default is JSON.\n",
												"key": "Accept",
												"value": "JSON"
											},
											{
												"description": "Validator for conditional requests; based on the ETag of the formerly retrieved\nvariant of the resourec.\n",
												"key": "If-None-Match",
												"value": "<string>"
											},
											{
												"description": "Validator for conditional requests; based on Last Modified header of the\nformerly retrieved variant of the resource.\n",
												"key": "If-Modified-Since",
												"value": "<string>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/apis/:apiId/thumbnail",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"apis",
												":apiId",
												"thumbnail"
											],
											"variable": [
												{
													"id": "abebd10a-1d10-41e2-ba4d-d4cde9271817",
													"key": "apiId",
													"value": "<string>",
													"type": "string",
													"description": "(Required) **API ID** consisting of the **UUID** of the API.\nThe combination of the provider of the API, name of the API and the version is also accepted as a valid API ID.\nShould be formatted as **provider-name-version**.\n"
												}
											]
										},
										"description": "Downloads a thumbnail image of an API\n"
									},
									"response": [
										{
											"name": "Not Modified.\nEmpty body because the client has already the latest version of the requested resource.\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Media types acceptable for the response. Default is JSON.\n",
														"key": "Accept",
														"value": "JSON"
													},
													{
														"description": "Validator for conditional requests; based on the ETag of the formerly retrieved\nvariant of the resourec.\n",
														"key": "If-None-Match",
														"value": "<string>"
													},
													{
														"description": "Validator for conditional requests; based on Last Modified header of the\nformerly retrieved variant of the resource.\n",
														"key": "If-Modified-Since",
														"value": "<string>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/apis/:apiId/thumbnail",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"apis",
														":apiId",
														"thumbnail"
													],
													"variable": [
														{
															"key": "apiId"
														}
													]
												}
											},
											"status": "Not Modified",
											"code": 304,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Not Found.\nRequested Document does not exist.\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Media types acceptable for the response. Default is JSON.\n",
														"key": "Accept",
														"value": "JSON"
													},
													{
														"description": "Validator for conditional requests; based on the ETag of the formerly retrieved\nvariant of the resourec.\n",
														"key": "If-None-Match",
														"value": "<string>"
													},
													{
														"description": "Validator for conditional requests; based on Last Modified header of the\nformerly retrieved variant of the resource.\n",
														"key": "If-Modified-Since",
														"value": "<string>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/apis/:apiId/thumbnail",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"apis",
														":apiId",
														"thumbnail"
													],
													"variable": [
														{
															"key": "apiId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -68757475,\n \"message\": \"voluptate culpa qui minim consectetur\",\n \"description\": \"eu laboris minim\",\n \"moreInfo\": \"et\",\n \"error\": [\n  {\n   \"code\": \"velit et\",\n   \"message\": \"nulla labore deserunt non sed\"\n  },\n  {\n   \"code\": \"qui cupidatat officia\",\n   \"message\": \"cupidatat esse\"\n  }\n ]\n}"
										},
										{
											"name": "OK.\nThumbnail image returned\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Media types acceptable for the response. Default is JSON.\n",
														"key": "Accept",
														"value": "JSON"
													},
													{
														"description": "Validator for conditional requests; based on the ETag of the formerly retrieved\nvariant of the resourec.\n",
														"key": "If-None-Match",
														"value": "<string>"
													},
													{
														"description": "Validator for conditional requests; based on Last Modified header of the\nformerly retrieved variant of the resource.\n",
														"key": "If-Modified-Since",
														"value": "<string>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/apis/:apiId/thumbnail",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"apis",
														":apiId",
														"thumbnail"
													],
													"variable": [
														{
															"key": "apiId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "ETag",
													"value": "dolore reprehenderi",
													"description": "Entity Tag of the response resource.\nUsed by caches, or in conditional requests.\n"
												},
												{
													"key": "Last-Modified",
													"value": "dolore reprehenderi",
													"description": "Date and time the resource has been modifed the last time.\nUsed by caches, or in conditional reuquests.\n"
												},
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Not Acceptable.\nThe requested media type is not supported\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Media types acceptable for the response. Default is JSON.\n",
														"key": "Accept",
														"value": "JSON"
													},
													{
														"description": "Validator for conditional requests; based on the ETag of the formerly retrieved\nvariant of the resourec.\n",
														"key": "If-None-Match",
														"value": "<string>"
													},
													{
														"description": "Validator for conditional requests; based on Last Modified header of the\nformerly retrieved variant of the resource.\n",
														"key": "If-Modified-Since",
														"value": "<string>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/apis/:apiId/thumbnail",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"apis",
														":apiId",
														"thumbnail"
													],
													"variable": [
														{
															"key": "apiId"
														}
													]
												}
											},
											"status": "Not Acceptable",
											"code": 406,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -68757475,\n \"message\": \"voluptate culpa qui minim consectetur\",\n \"description\": \"eu laboris minim\",\n \"moreInfo\": \"et\",\n \"error\": [\n  {\n   \"code\": \"velit et\",\n   \"message\": \"nulla labore deserunt non sed\"\n  },\n  {\n   \"code\": \"qui cupidatat officia\",\n   \"message\": \"cupidatat esse\"\n  }\n ]\n}"
										}
									]
								},
								{
									"name": "Upload a thumbnail image",
									"request": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) Media type of the entity in the body. Default is JSON.\n",
												"key": "Content-Type",
												"value": "JSON"
											},
											{
												"description": "Validator for conditional requests; based on ETag.\n",
												"key": "If-Match",
												"value": "<string>"
											},
											{
												"description": "Validator for conditional requests; based on Last Modified header.\n",
												"key": "If-Unmodified-Since",
												"value": "<string>"
											},
											{
												"key": "Content-Type",
												"value": "multipart/form-data"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"value": "<binary>",
													"description": "Image to upload",
													"type": "text"
												}
											],
											"options": {
												"formdata": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/apis/:apiId/thumbnail",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"apis",
												":apiId",
												"thumbnail"
											],
											"variable": [
												{
													"id": "5a33468c-7e27-4bb9-8a90-72b3071e4ffd",
													"key": "apiId",
													"value": "<string>",
													"type": "string",
													"description": "(Required) **API ID** consisting of the **UUID** of the API.\nThe combination of the provider of the API, name of the API and the version is also accepted as a valid API ID.\nShould be formatted as **provider-name-version**.\n"
												}
											]
										},
										"description": "Upload a thumbnail image to an API.\n"
									},
									"response": [
										{
											"name": "Bad Request.\nInvalid request or validation error.\n",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "(Required) Media type of the entity in the body. Default is JSON.\n",
														"key": "Content-Type",
														"value": "JSON"
													},
													{
														"description": "Validator for conditional requests; based on ETag.\n",
														"key": "If-Match",
														"value": "<string>"
													},
													{
														"description": "Validator for conditional requests; based on Last Modified header.\n",
														"key": "If-Unmodified-Since",
														"value": "<string>"
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "file",
															"value": "<binary>",
															"description": {
																"content": "Image to upload",
																"type": "text/plain"
															},
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/apis/:apiId/thumbnail",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"apis",
														":apiId",
														"thumbnail"
													],
													"variable": [
														{
															"key": "apiId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -68757475,\n \"message\": \"voluptate culpa qui minim consectetur\",\n \"description\": \"eu laboris minim\",\n \"moreInfo\": \"et\",\n \"error\": [\n  {\n   \"code\": \"velit et\",\n   \"message\": \"nulla labore deserunt non sed\"\n  },\n  {\n   \"code\": \"qui cupidatat officia\",\n   \"message\": \"cupidatat esse\"\n  }\n ]\n}"
										},
										{
											"name": "Not Found.\nThe resource to be updated does not exist.\n",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "(Required) Media type of the entity in the body. Default is JSON.\n",
														"key": "Content-Type",
														"value": "JSON"
													},
													{
														"description": "Validator for conditional requests; based on ETag.\n",
														"key": "If-Match",
														"value": "<string>"
													},
													{
														"description": "Validator for conditional requests; based on Last Modified header.\n",
														"key": "If-Unmodified-Since",
														"value": "<string>"
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "file",
															"value": "<binary>",
															"description": {
																"content": "Image to upload",
																"type": "text/plain"
															},
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/apis/:apiId/thumbnail",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"apis",
														":apiId",
														"thumbnail"
													],
													"variable": [
														{
															"key": "apiId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -68757475,\n \"message\": \"voluptate culpa qui minim consectetur\",\n \"description\": \"eu laboris minim\",\n \"moreInfo\": \"et\",\n \"error\": [\n  {\n   \"code\": \"velit et\",\n   \"message\": \"nulla labore deserunt non sed\"\n  },\n  {\n   \"code\": \"qui cupidatat officia\",\n   \"message\": \"cupidatat esse\"\n  }\n ]\n}"
										},
										{
											"name": "Precondition Failed.\nThe request has not been performed because one of the preconditions is not met.\n",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "(Required) Media type of the entity in the body. Default is JSON.\n",
														"key": "Content-Type",
														"value": "JSON"
													},
													{
														"description": "Validator for conditional requests; based on ETag.\n",
														"key": "If-Match",
														"value": "<string>"
													},
													{
														"description": "Validator for conditional requests; based on Last Modified header.\n",
														"key": "If-Unmodified-Since",
														"value": "<string>"
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "file",
															"value": "<binary>",
															"description": {
																"content": "Image to upload",
																"type": "text/plain"
															},
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/apis/:apiId/thumbnail",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"apis",
														":apiId",
														"thumbnail"
													],
													"variable": [
														{
															"key": "apiId"
														}
													]
												}
											},
											"status": "Precondition Failed",
											"code": 412,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -68757475,\n \"message\": \"voluptate culpa qui minim consectetur\",\n \"description\": \"eu laboris minim\",\n \"moreInfo\": \"et\",\n \"error\": [\n  {\n   \"code\": \"velit et\",\n   \"message\": \"nulla labore deserunt non sed\"\n  },\n  {\n   \"code\": \"qui cupidatat officia\",\n   \"message\": \"cupidatat esse\"\n  }\n ]\n}"
										},
										{
											"name": "OK.\nImage updated\n",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "(Required) Media type of the entity in the body. Default is JSON.\n",
														"key": "Content-Type",
														"value": "JSON"
													},
													{
														"description": "Validator for conditional requests; based on ETag.\n",
														"key": "If-Match",
														"value": "<string>"
													},
													{
														"description": "Validator for conditional requests; based on Last Modified header.\n",
														"key": "If-Unmodified-Since",
														"value": "<string>"
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "file",
															"value": "<binary>",
															"description": {
																"content": "Image to upload",
																"type": "text/plain"
															},
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/apis/:apiId/thumbnail",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"apis",
														":apiId",
														"thumbnail"
													],
													"variable": [
														{
															"key": "apiId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Location",
													"value": "dolore reprehenderi",
													"description": "The URL of the uploaded thumbnail image of the API.\n"
												},
												{
													"key": "ETag",
													"value": "dolore reprehenderi",
													"description": "Entity Tag of the response resource.\nUsed by caches, or in conditional request.\n"
												},
												{
													"key": "Last-Modified",
													"value": "dolore reprehenderi",
													"description": "Date and time the resource has been modifed the last time.\nUsed by caches, or in conditional reuquests.\n"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"relativePath\": \"apis/01234567-0123-0123-0123-012345678901/thumbnail\",\n \"mediaType\": \"image/jpeg\"\n}"
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "documents",
							"item": [
								{
									"name": "{document Id}",
									"item": [
										{
											"name": "content",
											"item": [
												{
													"name": "Get document content",
													"request": {
														"method": "GET",
														"header": [
															{
																"description": "Media types acceptable for the response. Default is JSON.\n",
																"key": "Accept",
																"value": "JSON"
															},
															{
																"description": "Validator for conditional requests; based on the ETag of the formerly retrieved\nvariant of the resourec.\n",
																"key": "If-None-Match",
																"value": "<string>"
															},
															{
																"description": "Validator for conditional requests; based on Last Modified header of the\nformerly retrieved variant of the resource.\n",
																"key": "If-Modified-Since",
																"value": "<string>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/apis/:apiId/documents/:documentId/content",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"apis",
																":apiId",
																"documents",
																":documentId",
																"content"
															],
															"variable": [
																{
																	"id": "a434a503-a48f-47ae-8532-81f68ca2a811",
																	"key": "apiId",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) **API ID** consisting of the **UUID** of the API.\nThe combination of the provider of the API, name of the API and the version is also accepted as a valid API ID.\nShould be formatted as **provider-name-version**.\n"
																},
																{
																	"id": "efcf562a-038b-443d-ae30-7cfb508d5665",
																	"key": "documentId",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) **Document Identifier**\n"
																}
															]
														},
														"description": "Downloads a FILE type document/get the inline content or source url of a certain document.\n"
													},
													"response": [
														{
															"name": "Not Acceptable.\nThe requested media type is not supported\n",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Media types acceptable for the response. Default is JSON.\n",
																		"key": "Accept",
																		"value": "JSON"
																	},
																	{
																		"description": "Validator for conditional requests; based on the ETag of the formerly retrieved\nvariant of the resourec.\n",
																		"key": "If-None-Match",
																		"value": "<string>"
																	},
																	{
																		"description": "Validator for conditional requests; based on Last Modified header of the\nformerly retrieved variant of the resource.\n",
																		"key": "If-Modified-Since",
																		"value": "<string>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/apis/:apiId/documents/:documentId/content",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"apis",
																		":apiId",
																		"documents",
																		":documentId",
																		"content"
																	],
																	"variable": [
																		{
																			"key": "apiId"
																		},
																		{
																			"key": "documentId"
																		}
																	]
																}
															},
															"status": "Not Acceptable",
															"code": 406,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"code\": -68757475,\n \"message\": \"voluptate culpa qui minim consectetur\",\n \"description\": \"eu laboris minim\",\n \"moreInfo\": \"et\",\n \"error\": [\n  {\n   \"code\": \"velit et\",\n   \"message\": \"nulla labore deserunt non sed\"\n  },\n  {\n   \"code\": \"qui cupidatat officia\",\n   \"message\": \"cupidatat esse\"\n  }\n ]\n}"
														},
														{
															"name": "Not Found.\nRequested Document does not exist.\n",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Media types acceptable for the response. Default is JSON.\n",
																		"key": "Accept",
																		"value": "JSON"
																	},
																	{
																		"description": "Validator for conditional requests; based on the ETag of the formerly retrieved\nvariant of the resourec.\n",
																		"key": "If-None-Match",
																		"value": "<string>"
																	},
																	{
																		"description": "Validator for conditional requests; based on Last Modified header of the\nformerly retrieved variant of the resource.\n",
																		"key": "If-Modified-Since",
																		"value": "<string>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/apis/:apiId/documents/:documentId/content",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"apis",
																		":apiId",
																		"documents",
																		":documentId",
																		"content"
																	],
																	"variable": [
																		{
																			"key": "apiId"
																		},
																		{
																			"key": "documentId"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"code\": -68757475,\n \"message\": \"voluptate culpa qui minim consectetur\",\n \"description\": \"eu laboris minim\",\n \"moreInfo\": \"et\",\n \"error\": [\n  {\n   \"code\": \"velit et\",\n   \"message\": \"nulla labore deserunt non sed\"\n  },\n  {\n   \"code\": \"qui cupidatat officia\",\n   \"message\": \"cupidatat esse\"\n  }\n ]\n}"
														},
														{
															"name": "Not Modified.\nEmpty body because the client has already the latest version of the requested resource.\n",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Media types acceptable for the response. Default is JSON.\n",
																		"key": "Accept",
																		"value": "JSON"
																	},
																	{
																		"description": "Validator for conditional requests; based on the ETag of the formerly retrieved\nvariant of the resourec.\n",
																		"key": "If-None-Match",
																		"value": "<string>"
																	},
																	{
																		"description": "Validator for conditional requests; based on Last Modified header of the\nformerly retrieved variant of the resource.\n",
																		"key": "If-Modified-Since",
																		"value": "<string>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/apis/:apiId/documents/:documentId/content",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"apis",
																		":apiId",
																		"documents",
																		":documentId",
																		"content"
																	],
																	"variable": [
																		{
																			"key": "apiId"
																		},
																		{
																			"key": "documentId"
																		}
																	]
																}
															},
															"status": "Not Modified",
															"code": 304,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "OK.\nFile or inline content returned.\n",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Media types acceptable for the response. Default is JSON.\n",
																		"key": "Accept",
																		"value": "JSON"
																	},
																	{
																		"description": "Validator for conditional requests; based on the ETag of the formerly retrieved\nvariant of the resourec.\n",
																		"key": "If-None-Match",
																		"value": "<string>"
																	},
																	{
																		"description": "Validator for conditional requests; based on Last Modified header of the\nformerly retrieved variant of the resource.\n",
																		"key": "If-Modified-Since",
																		"value": "<string>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/apis/:apiId/documents/:documentId/content",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"apis",
																		":apiId",
																		"documents",
																		":documentId",
																		"content"
																	],
																	"variable": [
																		{
																			"key": "apiId"
																		},
																		{
																			"key": "documentId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "ETag",
																	"value": "dolore reprehenderi",
																	"description": "Entity Tag of the response resource.\nUsed by caches, or in conditional requests.\n"
																},
																{
																	"key": "Last-Modified",
																	"value": "dolore reprehenderi",
																	"description": "Date and time the resource has been modifed the last time.\nUsed by caches, or in conditional reuquests.\n"
																},
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "See Other.\nSource can be retrived from the URL specified at the Location header.\n",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Media types acceptable for the response. Default is JSON.\n",
																		"key": "Accept",
																		"value": "JSON"
																	},
																	{
																		"description": "Validator for conditional requests; based on the ETag of the formerly retrieved\nvariant of the resourec.\n",
																		"key": "If-None-Match",
																		"value": "<string>"
																	},
																	{
																		"description": "Validator for conditional requests; based on Last Modified header of the\nformerly retrieved variant of the resource.\n",
																		"key": "If-Modified-Since",
																		"value": "<string>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/apis/:apiId/documents/:documentId/content",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"apis",
																		":apiId",
																		"documents",
																		":documentId",
																		"content"
																	],
																	"variable": [
																		{
																			"key": "apiId"
																		},
																		{
																			"key": "documentId"
																		}
																	]
																}
															},
															"status": "See Other",
															"code": 303,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Location",
																	"value": "dolore reprehenderi",
																	"description": "The Source URL of the document.\n"
																},
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "Update API document content.",
													"request": {
														"method": "POST",
														"header": [
															{
																"description": "(Required) Media type of the entity in the body. Default is JSON.\n",
																"key": "Content-Type",
																"value": "JSON"
															},
															{
																"description": "Validator for conditional requests; based on ETag.\n",
																"key": "If-Match",
																"value": "<string>"
															},
															{
																"description": "Validator for conditional requests; based on Last Modified header.\n",
																"key": "If-Unmodified-Since",
																"value": "<string>"
															},
															{
																"key": "Content-Type",
																"value": "multipart/form-data"
															}
														],
														"body": {
															"mode": "formdata",
															"formdata": [
																{
																	"key": "file",
																	"value": "<binary>",
																	"description": "Document to upload",
																	"type": "text"
																},
																{
																	"key": "inlineContent",
																	"value": "<string>",
																	"description": "Inline content of the document",
																	"type": "text"
																}
															],
															"options": {
																"formdata": {}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/apis/:apiId/documents/:documentId/content",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"apis",
																":apiId",
																"documents",
																":documentId",
																"content"
															],
															"variable": [
																{
																	"id": "fe12473e-ecdb-4532-928f-68c32674cf49",
																	"key": "apiId",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) **API ID** consisting of the **UUID** of the API.\nThe combination of the provider of the API, name of the API and the version is also accepted as a valid API ID.\nShould be formatted as **provider-name-version**.\n"
																},
																{
																	"id": "426151b0-823d-461c-bb52-b58259061a42",
																	"key": "documentId",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) **Document Identifier**\n"
																}
															]
														},
														"description": "Upload a file to a document or add inline content to the document.\n\nDocument's source type should be **FILE** in order to upload a file to the document using **file** parameter.\nDocument's source type should be **INLINE** in order to add inline content to the document using **inlineContent** parameter.\n\nOnly one of **file** or **inlineContent** can be specified at one time.\n"
													},
													"response": [
														{
															"name": "OK.\nDocument updated\n",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "(Required) Media type of the entity in the body. Default is JSON.\n",
																		"key": "Content-Type",
																		"value": "JSON"
																	},
																	{
																		"description": "Validator for conditional requests; based on ETag.\n",
																		"key": "If-Match",
																		"value": "<string>"
																	},
																	{
																		"description": "Validator for conditional requests; based on Last Modified header.\n",
																		"key": "If-Unmodified-Since",
																		"value": "<string>"
																	}
																],
																"body": {
																	"mode": "formdata",
																	"formdata": [
																		{
																			"key": "file",
																			"value": "<binary>",
																			"description": {
																				"content": "Document to upload",
																				"type": "text/plain"
																			},
																			"type": "text"
																		},
																		{
																			"key": "inlineContent",
																			"value": "<string>",
																			"description": {
																				"content": "Inline content of the document",
																				"type": "text/plain"
																			},
																			"type": "text"
																		}
																	]
																},
																"url": {
																	"raw": "{{baseUrl}}/apis/:apiId/documents/:documentId/content",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"apis",
																		":apiId",
																		"documents",
																		":documentId",
																		"content"
																	],
																	"variable": [
																		{
																			"key": "apiId"
																		},
																		{
																			"key": "documentId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Location",
																	"value": "dolore reprehenderi",
																	"description": "The URL of the updated content of the document.\n"
																},
																{
																	"key": "ETag",
																	"value": "dolore reprehenderi",
																	"description": "Entity Tag of the response resource.\nUsed by caches, or in conditional request.\n"
																},
																{
																	"key": "Last-Modified",
																	"value": "dolore reprehenderi",
																	"description": "Date and time the resource has been modifed the last time.\nUsed by caches, or in conditional reuquests.\n"
																},
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"name\": \"CalculatorDoc\",\n \"type\": \"HOWTO\",\n \"sourceType\": \"INLINE\",\n \"visibility\": \"API_LEVEL\",\n \"documentId\": \"01234567-0123-0123-0123-012345678901\",\n \"summary\": \"Summary of Calculator Documentation\",\n \"sourceUrl\": \"\",\n \"otherTypeName\": \"\"\n}"
														},
														{
															"name": "Precondition Failed.\nThe request has not been performed because one of the preconditions is not met.\n",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "(Required) Media type of the entity in the body. Default is JSON.\n",
																		"key": "Content-Type",
																		"value": "JSON"
																	},
																	{
																		"description": "Validator for conditional requests; based on ETag.\n",
																		"key": "If-Match",
																		"value": "<string>"
																	},
																	{
																		"description": "Validator for conditional requests; based on Last Modified header.\n",
																		"key": "If-Unmodified-Since",
																		"value": "<string>"
																	}
																],
																"body": {
																	"mode": "formdata",
																	"formdata": [
																		{
																			"key": "file",
																			"value": "<binary>",
																			"description": {
																				"content": "Document to upload",
																				"type": "text/plain"
																			},
																			"type": "text"
																		},
																		{
																			"key": "inlineContent",
																			"value": "<string>",
																			"description": {
																				"content": "Inline content of the document",
																				"type": "text/plain"
																			},
																			"type": "text"
																		}
																	]
																},
																"url": {
																	"raw": "{{baseUrl}}/apis/:apiId/documents/:documentId/content",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"apis",
																		":apiId",
																		"documents",
																		":documentId",
																		"content"
																	],
																	"variable": [
																		{
																			"key": "apiId"
																		},
																		{
																			"key": "documentId"
																		}
																	]
																}
															},
															"status": "Precondition Failed",
															"code": 412,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"code\": -68757475,\n \"message\": \"voluptate culpa qui minim consectetur\",\n \"description\": \"eu laboris minim\",\n \"moreInfo\": \"et\",\n \"error\": [\n  {\n   \"code\": \"velit et\",\n   \"message\": \"nulla labore deserunt non sed\"\n  },\n  {\n   \"code\": \"qui cupidatat officia\",\n   \"message\": \"cupidatat esse\"\n  }\n ]\n}"
														},
														{
															"name": "Not Found.\nThe resource to be updated does not exist.\n",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "(Required) Media type of the entity in the body. Default is JSON.\n",
																		"key": "Content-Type",
																		"value": "JSON"
																	},
																	{
																		"description": "Validator for conditional requests; based on ETag.\n",
																		"key": "If-Match",
																		"value": "<string>"
																	},
																	{
																		"description": "Validator for conditional requests; based on Last Modified header.\n",
																		"key": "If-Unmodified-Since",
																		"value": "<string>"
																	}
																],
																"body": {
																	"mode": "formdata",
																	"formdata": [
																		{
																			"key": "file",
																			"value": "<binary>",
																			"description": {
																				"content": "Document to upload",
																				"type": "text/plain"
																			},
																			"type": "text"
																		},
																		{
																			"key": "inlineContent",
																			"value": "<string>",
																			"description": {
																				"content": "Inline content of the document",
																				"type": "text/plain"
																			},
																			"type": "text"
																		}
																	]
																},
																"url": {
																	"raw": "{{baseUrl}}/apis/:apiId/documents/:documentId/content",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"apis",
																		":apiId",
																		"documents",
																		":documentId",
																		"content"
																	],
																	"variable": [
																		{
																			"key": "apiId"
																		},
																		{
																			"key": "documentId"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"code\": -68757475,\n \"message\": \"voluptate culpa qui minim consectetur\",\n \"description\": \"eu laboris minim\",\n \"moreInfo\": \"et\",\n \"error\": [\n  {\n   \"code\": \"velit et\",\n   \"message\": \"nulla labore deserunt non sed\"\n  },\n  {\n   \"code\": \"qui cupidatat officia\",\n   \"message\": \"cupidatat esse\"\n  }\n ]\n}"
														},
														{
															"name": "Bad Request.\nInvalid request or validation error.\n",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "(Required) Media type of the entity in the body. Default is JSON.\n",
																		"key": "Content-Type",
																		"value": "JSON"
																	},
																	{
																		"description": "Validator for conditional requests; based on ETag.\n",
																		"key": "If-Match",
																		"value": "<string>"
																	},
																	{
																		"description": "Validator for conditional requests; based on Last Modified header.\n",
																		"key": "If-Unmodified-Since",
																		"value": "<string>"
																	}
																],
																"body": {
																	"mode": "formdata",
																	"formdata": [
																		{
																			"key": "file",
																			"value": "<binary>",
																			"description": {
																				"content": "Document to upload",
																				"type": "text/plain"
																			},
																			"type": "text"
																		},
																		{
																			"key": "inlineContent",
																			"value": "<string>",
																			"description": {
																				"content": "Inline content of the document",
																				"type": "text/plain"
																			},
																			"type": "text"
																		}
																	]
																},
																"url": {
																	"raw": "{{baseUrl}}/apis/:apiId/documents/:documentId/content",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"apis",
																		":apiId",
																		"documents",
																		":documentId",
																		"content"
																	],
																	"variable": [
																		{
																			"key": "apiId"
																		},
																		{
																			"key": "documentId"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"code\": -68757475,\n \"message\": \"voluptate culpa qui minim consectetur\",\n \"description\": \"eu laboris minim\",\n \"moreInfo\": \"et\",\n \"error\": [\n  {\n   \"code\": \"velit et\",\n   \"message\": \"nulla labore deserunt non sed\"\n  },\n  {\n   \"code\": \"qui cupidatat officia\",\n   \"message\": \"cupidatat esse\"\n  }\n ]\n}"
														}
													]
												}
											],
											"protocolProfileBehavior": {},
											"_postman_isSubFolder": true
										},
										{
											"name": "Get an API Document",
											"request": {
												"method": "GET",
												"header": [
													{
														"description": "Media types acceptable for the response. Default is JSON.\n",
														"key": "Accept",
														"value": "JSON"
													},
													{
														"description": "Validator for conditional requests; based on the ETag of the formerly retrieved\nvariant of the resourec.\n",
														"key": "If-None-Match",
														"value": "<string>"
													},
													{
														"description": "Validator for conditional requests; based on Last Modified header of the\nformerly retrieved variant of the resource.\n",
														"key": "If-Modified-Since",
														"value": "<string>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/apis/:apiId/documents/:documentId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"apis",
														":apiId",
														"documents",
														":documentId"
													],
													"variable": [
														{
															"id": "5164309e-e52c-4b97-81d0-67add987766d",
															"key": "apiId",
															"value": "<string>",
															"type": "string",
															"description": "(Required) **API ID** consisting of the **UUID** of the API.\nThe combination of the provider of the API, name of the API and the version is also accepted as a valid API ID.\nShould be formatted as **provider-name-version**.\n"
														},
														{
															"id": "7ab905a7-0524-4c94-ac04-a15248e39e78",
															"key": "documentId",
															"value": "<string>",
															"type": "string",
															"description": "(Required) **Document Identifier**\n"
														}
													]
												},
												"description": "Get a particular document associated with an API.\n"
											},
											"response": [
												{
													"name": "Not Acceptable.\nThe requested media type is not supported\n",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Media types acceptable for the response. Default is JSON.\n",
																"key": "Accept",
																"value": "JSON"
															},
															{
																"description": "Validator for conditional requests; based on the ETag of the formerly retrieved\nvariant of the resourec.\n",
																"key": "If-None-Match",
																"value": "<string>"
															},
															{
																"description": "Validator for conditional requests; based on Last Modified header of the\nformerly retrieved variant of the resource.\n",
																"key": "If-Modified-Since",
																"value": "<string>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/apis/:apiId/documents/:documentId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"apis",
																":apiId",
																"documents",
																":documentId"
															],
															"variable": [
																{
																	"key": "apiId"
																},
																{
																	"key": "documentId"
																}
															]
														}
													},
													"status": "Not Acceptable",
													"code": 406,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": -68757475,\n \"message\": \"voluptate culpa qui minim consectetur\",\n \"description\": \"eu laboris minim\",\n \"moreInfo\": \"et\",\n \"error\": [\n  {\n   \"code\": \"velit et\",\n   \"message\": \"nulla labore deserunt non sed\"\n  },\n  {\n   \"code\": \"qui cupidatat officia\",\n   \"message\": \"cupidatat esse\"\n  }\n ]\n}"
												},
												{
													"name": "Not Found.\nRequested Document does not exist.\n",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Media types acceptable for the response. Default is JSON.\n",
																"key": "Accept",
																"value": "JSON"
															},
															{
																"description": "Validator for conditional requests; based on the ETag of the formerly retrieved\nvariant of the resourec.\n",
																"key": "If-None-Match",
																"value": "<string>"
															},
															{
																"description": "Validator for conditional requests; based on Last Modified header of the\nformerly retrieved variant of the resource.\n",
																"key": "If-Modified-Since",
																"value": "<string>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/apis/:apiId/documents/:documentId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"apis",
																":apiId",
																"documents",
																":documentId"
															],
															"variable": [
																{
																	"key": "apiId"
																},
																{
																	"key": "documentId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": -68757475,\n \"message\": \"voluptate culpa qui minim consectetur\",\n \"description\": \"eu laboris minim\",\n \"moreInfo\": \"et\",\n \"error\": [\n  {\n   \"code\": \"velit et\",\n   \"message\": \"nulla labore deserunt non sed\"\n  },\n  {\n   \"code\": \"qui cupidatat officia\",\n   \"message\": \"cupidatat esse\"\n  }\n ]\n}"
												},
												{
													"name": "Not Modified.\nEmpty body because the client has already the latest version of the requested resource.\n",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Media types acceptable for the response. Default is JSON.\n",
																"key": "Accept",
																"value": "JSON"
															},
															{
																"description": "Validator for conditional requests; based on the ETag of the formerly retrieved\nvariant of the resourec.\n",
																"key": "If-None-Match",
																"value": "<string>"
															},
															{
																"description": "Validator for conditional requests; based on Last Modified header of the\nformerly retrieved variant of the resource.\n",
																"key": "If-Modified-Since",
																"value": "<string>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/apis/:apiId/documents/:documentId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"apis",
																":apiId",
																"documents",
																":documentId"
															],
															"variable": [
																{
																	"key": "apiId"
																},
																{
																	"key": "documentId"
																}
															]
														}
													},
													"status": "Not Modified",
													"code": 304,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "OK.\nDocument returned.\n",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Media types acceptable for the response. Default is JSON.\n",
																"key": "Accept",
																"value": "JSON"
															},
															{
																"description": "Validator for conditional requests; based on the ETag of the formerly retrieved\nvariant of the resourec.\n",
																"key": "If-None-Match",
																"value": "<string>"
															},
															{
																"description": "Validator for conditional requests; based on Last Modified header of the\nformerly retrieved variant of the resource.\n",
																"key": "If-Modified-Since",
																"value": "<string>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/apis/:apiId/documents/:documentId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"apis",
																":apiId",
																"documents",
																":documentId"
															],
															"variable": [
																{
																	"key": "apiId"
																},
																{
																	"key": "documentId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "ETag",
															"value": "dolore reprehenderi",
															"description": "Entity Tag of the response resource.\nUsed by caches, or in conditional requests.\n"
														},
														{
															"key": "Last-Modified",
															"value": "dolore reprehenderi",
															"description": "Date and time the resource has been modifed the last time.\nUsed by caches, or in conditional reuquests.\n"
														},
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"name\": \"CalculatorDoc\",\n \"type\": \"HOWTO\",\n \"sourceType\": \"INLINE\",\n \"visibility\": \"API_LEVEL\",\n \"documentId\": \"01234567-0123-0123-0123-012345678901\",\n \"summary\": \"Summary of Calculator Documentation\",\n \"sourceUrl\": \"\",\n \"otherTypeName\": \"\"\n}"
												}
											]
										},
										{
											"name": "Update an API Document",
											"request": {
												"method": "PUT",
												"header": [
													{
														"description": "(Required) Media type of the entity in the body. Default is JSON.\n",
														"key": "Content-Type",
														"value": "JSON"
													},
													{
														"description": "Validator for conditional requests; based on ETag.\n",
														"key": "If-Match",
														"value": "<string>"
													},
													{
														"description": "Validator for conditional requests; based on Last Modified header.\n",
														"key": "If-Unmodified-Since",
														"value": "<string>"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"<string>\",\n    \"type\": \"<string>\",\n    \"sourceType\": \"<string>\",\n    \"visibility\": \"<string>\",\n    \"documentId\": \"<string>\",\n    \"summary\": \"<string>\",\n    \"sourceUrl\": \"<string>\",\n    \"otherTypeName\": \"<string>\"\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/apis/:apiId/documents/:documentId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"apis",
														":apiId",
														"documents",
														":documentId"
													],
													"variable": [
														{
															"id": "e5ab56c0-4afb-4793-af74-137529912f29",
															"key": "apiId",
															"value": "<string>",
															"type": "string",
															"description": "(Required) **API ID** consisting of the **UUID** of the API.\nThe combination of the provider of the API, name of the API and the version is also accepted as a valid API ID.\nShould be formatted as **provider-name-version**.\n"
														},
														{
															"id": "1e2a7757-5a05-4d37-9784-6e5a09767287",
															"key": "documentId",
															"value": "<string>",
															"type": "string",
															"description": "(Required) **Document Identifier**\n"
														}
													]
												},
												"description": "Update document details.\n"
											},
											"response": [
												{
													"name": "Precondition Failed.\nThe request has not been performed because one of the preconditions is not met.\n",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "(Required) Media type of the entity in the body. Default is JSON.\n",
																"key": "Content-Type",
																"value": "JSON"
															},
															{
																"description": "Validator for conditional requests; based on ETag.\n",
																"key": "If-Match",
																"value": "<string>"
															},
															{
																"description": "Validator for conditional requests; based on Last Modified header.\n",
																"key": "If-Unmodified-Since",
																"value": "<string>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/apis/:apiId/documents/:documentId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"apis",
																":apiId",
																"documents",
																":documentId"
															],
															"variable": [
																{
																	"key": "apiId"
																},
																{
																	"key": "documentId"
																}
															]
														}
													},
													"status": "Precondition Failed",
													"code": 412,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": -68757475,\n \"message\": \"voluptate culpa qui minim consectetur\",\n \"description\": \"eu laboris minim\",\n \"moreInfo\": \"et\",\n \"error\": [\n  {\n   \"code\": \"velit et\",\n   \"message\": \"nulla labore deserunt non sed\"\n  },\n  {\n   \"code\": \"qui cupidatat officia\",\n   \"message\": \"cupidatat esse\"\n  }\n ]\n}"
												},
												{
													"name": "OK.\nDocument updated\n",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "(Required) Media type of the entity in the body. Default is JSON.\n",
																"key": "Content-Type",
																"value": "JSON"
															},
															{
																"description": "Validator for conditional requests; based on ETag.\n",
																"key": "If-Match",
																"value": "<string>"
															},
															{
																"description": "Validator for conditional requests; based on Last Modified header.\n",
																"key": "If-Unmodified-Since",
																"value": "<string>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/apis/:apiId/documents/:documentId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"apis",
																":apiId",
																"documents",
																":documentId"
															],
															"variable": [
																{
																	"key": "apiId"
																},
																{
																	"key": "documentId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Location",
															"value": "dolore reprehenderi",
															"description": "The URL of the updated document.\n"
														},
														{
															"key": "ETag",
															"value": "dolore reprehenderi",
															"description": "Entity Tag of the response resource.\nUsed by caches, or in conditional request.\n"
														},
														{
															"key": "Last-Modified",
															"value": "dolore reprehenderi",
															"description": "Date and time the resource has been modifed the last time.\nUsed by caches, or in conditional reuquests.\n"
														},
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"name\": \"CalculatorDoc\",\n \"type\": \"HOWTO\",\n \"sourceType\": \"INLINE\",\n \"visibility\": \"API_LEVEL\",\n \"documentId\": \"01234567-0123-0123-0123-012345678901\",\n \"summary\": \"Summary of Calculator Documentation\",\n \"sourceUrl\": \"\",\n \"otherTypeName\": \"\"\n}"
												},
												{
													"name": "Not Found.\nThe resource to be updated does not exist.\n",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "(Required) Media type of the entity in the body. Default is JSON.\n",
																"key": "Content-Type",
																"value": "JSON"
															},
															{
																"description": "Validator for conditional requests; based on ETag.\n",
																"key": "If-Match",
																"value": "<string>"
															},
															{
																"description": "Validator for conditional requests; based on Last Modified header.\n",
																"key": "If-Unmodified-Since",
																"value": "<string>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/apis/:apiId/documents/:documentId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"apis",
																":apiId",
																"documents",
																":documentId"
															],
															"variable": [
																{
																	"key": "apiId"
																},
																{
																	"key": "documentId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": -68757475,\n \"message\": \"voluptate culpa qui minim consectetur\",\n \"description\": \"eu laboris minim\",\n \"moreInfo\": \"et\",\n \"error\": [\n  {\n   \"code\": \"velit et\",\n   \"message\": \"nulla labore deserunt non sed\"\n  },\n  {\n   \"code\": \"qui cupidatat officia\",\n   \"message\": \"cupidatat esse\"\n  }\n ]\n}"
												},
												{
													"name": "Bad Request.\nInvalid request or validation error.\n",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "(Required) Media type of the entity in the body. Default is JSON.\n",
																"key": "Content-Type",
																"value": "JSON"
															},
															{
																"description": "Validator for conditional requests; based on ETag.\n",
																"key": "If-Match",
																"value": "<string>"
															},
															{
																"description": "Validator for conditional requests; based on Last Modified header.\n",
																"key": "If-Unmodified-Since",
																"value": "<string>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/apis/:apiId/documents/:documentId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"apis",
																":apiId",
																"documents",
																":documentId"
															],
															"variable": [
																{
																	"key": "apiId"
																},
																{
																	"key": "documentId"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": -68757475,\n \"message\": \"voluptate culpa qui minim consectetur\",\n \"description\": \"eu laboris minim\",\n \"moreInfo\": \"et\",\n \"error\": [\n  {\n   \"code\": \"velit et\",\n   \"message\": \"nulla labore deserunt non sed\"\n  },\n  {\n   \"code\": \"qui cupidatat officia\",\n   \"message\": \"cupidatat esse\"\n  }\n ]\n}"
												}
											]
										},
										{
											"name": "Delete an API Document",
											"request": {
												"method": "DELETE",
												"header": [
													{
														"description": "Validator for conditional requests; based on ETag.\n",
														"key": "If-Match",
														"value": "<string>"
													},
													{
														"description": "Validator for conditional requests; based on Last Modified header.\n",
														"key": "If-Unmodified-Since",
														"value": "<string>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/apis/:apiId/documents/:documentId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"apis",
														":apiId",
														"documents",
														":documentId"
													],
													"variable": [
														{
															"id": "a73587d7-6d43-45de-8817-b385e66f8dad",
															"key": "apiId",
															"value": "<string>",
															"type": "string",
															"description": "(Required) **API ID** consisting of the **UUID** of the API.\nThe combination of the provider of the API, name of the API and the version is also accepted as a valid API ID.\nShould be formatted as **provider-name-version**.\n"
														},
														{
															"id": "55e9f6b1-da5d-4c7b-84b1-80b051848a69",
															"key": "documentId",
															"value": "<string>",
															"type": "string",
															"description": "(Required) **Document Identifier**\n"
														}
													]
												},
												"description": "Delete a document of an API\n"
											},
											"response": [
												{
													"name": "OK.\nResource successfully deleted.\n",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Validator for conditional requests; based on ETag.\n",
																"key": "If-Match",
																"value": "<string>"
															},
															{
																"description": "Validator for conditional requests; based on Last Modified header.\n",
																"key": "If-Unmodified-Since",
																"value": "<string>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/apis/:apiId/documents/:documentId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"apis",
																":apiId",
																"documents",
																":documentId"
															],
															"variable": [
																{
																	"key": "apiId"
																},
																{
																	"key": "documentId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Not Found.\nResource to be deleted does not exist.\n",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Validator for conditional requests; based on ETag.\n",
																"key": "If-Match",
																"value": "<string>"
															},
															{
																"description": "Validator for conditional requests; based on Last Modified header.\n",
																"key": "If-Unmodified-Since",
																"value": "<string>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/apis/:apiId/documents/:documentId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"apis",
																":apiId",
																"documents",
																":documentId"
															],
															"variable": [
																{
																	"key": "apiId"
																},
																{
																	"key": "documentId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": -68757475,\n \"message\": \"voluptate culpa qui minim consectetur\",\n \"description\": \"eu laboris minim\",\n \"moreInfo\": \"et\",\n \"error\": [\n  {\n   \"code\": \"velit et\",\n   \"message\": \"nulla labore deserunt non sed\"\n  },\n  {\n   \"code\": \"qui cupidatat officia\",\n   \"message\": \"cupidatat esse\"\n  }\n ]\n}"
												},
												{
													"name": "Precondition Failed.\nThe request has not been performed because one of the preconditions is not met.\n",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Validator for conditional requests; based on ETag.\n",
																"key": "If-Match",
																"value": "<string>"
															},
															{
																"description": "Validator for conditional requests; based on Last Modified header.\n",
																"key": "If-Unmodified-Since",
																"value": "<string>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/apis/:apiId/documents/:documentId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"apis",
																":apiId",
																"documents",
																":documentId"
															],
															"variable": [
																{
																	"key": "apiId"
																},
																{
																	"key": "documentId"
																}
															]
														}
													},
													"status": "Precondition Failed",
													"code": 412,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": -68757475,\n \"message\": \"voluptate culpa qui minim consectetur\",\n \"description\": \"eu laboris minim\",\n \"moreInfo\": \"et\",\n \"error\": [\n  {\n   \"code\": \"velit et\",\n   \"message\": \"nulla labore deserunt non sed\"\n  },\n  {\n   \"code\": \"qui cupidatat officia\",\n   \"message\": \"cupidatat esse\"\n  }\n ]\n}"
												}
											]
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Get API Documents",
									"request": {
										"method": "GET",
										"header": [
											{
												"description": "Media types acceptable for the response. Default is JSON.\n",
												"key": "Accept",
												"value": "JSON"
											},
											{
												"description": "Validator for conditional requests; based on the ETag of the formerly retrieved\nvariant of the resourec.\n",
												"key": "If-None-Match",
												"value": "<string>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/apis/:apiId/documents?limit=25&offset=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"apis",
												":apiId",
												"documents"
											],
											"query": [
												{
													"key": "limit",
													"value": "25",
													"description": "Maximum size of resource array to return.\n"
												},
												{
													"key": "offset",
													"value": "0",
													"description": "Starting point within the complete list of items qualified.\n"
												}
											],
											"variable": [
												{
													"id": "d0989094-75f9-4483-99aa-803f58915d3e",
													"key": "apiId",
													"value": "<string>",
													"type": "string",
													"description": "(Required) **API ID** consisting of the **UUID** of the API.\nThe combination of the provider of the API, name of the API and the version is also accepted as a valid API ID.\nShould be formatted as **provider-name-version**.\n"
												}
											]
										},
										"description": "Get a list of documents belonging to an API.\n"
									},
									"response": [
										{
											"name": "OK.\nDocument list is returned.\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Media types acceptable for the response. Default is JSON.\n",
														"key": "Accept",
														"value": "JSON"
													},
													{
														"description": "Validator for conditional requests; based on the ETag of the formerly retrieved\nvariant of the resourec.\n",
														"key": "If-None-Match",
														"value": "<string>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/apis/:apiId/documents?limit=25&offset=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"apis",
														":apiId",
														"documents"
													],
													"query": [
														{
															"key": "limit",
															"value": "25"
														},
														{
															"key": "offset",
															"value": "0"
														}
													],
													"variable": [
														{
															"key": "apiId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "ETag",
													"value": "dolore reprehenderi",
													"description": "Entity Tag of the response resource. Used by caches, or in conditional requests.\n"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"count\": 1,\n \"next\": \"/apis/01234567-0123-0123-0123-012345678901/documents?limit=1&offset=2\",\n \"previous\": \"/apis/01234567-0123-0123-0123-012345678901/documents?limit=1&offset=0\",\n \"list\": [\n  {\n   \"name\": \"CalculatorDoc\",\n   \"type\": \"HOWTO\",\n   \"sourceType\": \"INLINE\",\n   \"visibility\": \"API_LEVEL\",\n   \"documentId\": \"01234567-0123-0123-0123-012345678901\",\n   \"summary\": \"Summary of Calculator Documentation\",\n   \"sourceUrl\": \"\",\n   \"otherTypeName\": \"\"\n  },\n  {\n   \"name\": \"CalculatorDoc\",\n   \"type\": \"HOWTO\",\n   \"sourceType\": \"INLINE\",\n   \"visibility\": \"API_LEVEL\",\n   \"documentId\": \"01234567-0123-0123-0123-012345678901\",\n   \"summary\": \"Summary of Calculator Documentation\",\n   \"sourceUrl\": \"\",\n   \"otherTypeName\": \"\"\n  }\n ]\n}"
										},
										{
											"name": "Not Found.\nRequested API does not exist.\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Media types acceptable for the response. Default is JSON.\n",
														"key": "Accept",
														"value": "JSON"
													},
													{
														"description": "Validator for conditional requests; based on the ETag of the formerly retrieved\nvariant of the resourec.\n",
														"key": "If-None-Match",
														"value": "<string>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/apis/:apiId/documents?limit=25&offset=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"apis",
														":apiId",
														"documents"
													],
													"query": [
														{
															"key": "limit",
															"value": "25"
														},
														{
															"key": "offset",
															"value": "0"
														}
													],
													"variable": [
														{
															"key": "apiId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -68757475,\n \"message\": \"voluptate culpa qui minim consectetur\",\n \"description\": \"eu laboris minim\",\n \"moreInfo\": \"et\",\n \"error\": [\n  {\n   \"code\": \"velit et\",\n   \"message\": \"nulla labore deserunt non sed\"\n  },\n  {\n   \"code\": \"qui cupidatat officia\",\n   \"message\": \"cupidatat esse\"\n  }\n ]\n}"
										},
										{
											"name": "Not Modified.\nEmpty body because the client has already the latest version of the requested resource.\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Media types acceptable for the response. Default is JSON.\n",
														"key": "Accept",
														"value": "JSON"
													},
													{
														"description": "Validator for conditional requests; based on the ETag of the formerly retrieved\nvariant of the resourec.\n",
														"key": "If-None-Match",
														"value": "<string>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/apis/:apiId/documents?limit=25&offset=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"apis",
														":apiId",
														"documents"
													],
													"query": [
														{
															"key": "limit",
															"value": "25"
														},
														{
															"key": "offset",
															"value": "0"
														}
													],
													"variable": [
														{
															"key": "apiId"
														}
													]
												}
											},
											"status": "Not Modified",
											"code": 304,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Not Acceptable.\nThe requested media type is not supported\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Media types acceptable for the response. Default is JSON.\n",
														"key": "Accept",
														"value": "JSON"
													},
													{
														"description": "Validator for conditional requests; based on the ETag of the formerly retrieved\nvariant of the resourec.\n",
														"key": "If-None-Match",
														"value": "<string>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/apis/:apiId/documents?limit=25&offset=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"apis",
														":apiId",
														"documents"
													],
													"query": [
														{
															"key": "limit",
															"value": "25"
														},
														{
															"key": "offset",
															"value": "0"
														}
													],
													"variable": [
														{
															"key": "apiId"
														}
													]
												}
											},
											"status": "Not Acceptable",
											"code": 406,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -68757475,\n \"message\": \"voluptate culpa qui minim consectetur\",\n \"description\": \"eu laboris minim\",\n \"moreInfo\": \"et\",\n \"error\": [\n  {\n   \"code\": \"velit et\",\n   \"message\": \"nulla labore deserunt non sed\"\n  },\n  {\n   \"code\": \"qui cupidatat officia\",\n   \"message\": \"cupidatat esse\"\n  }\n ]\n}"
										}
									]
								},
								{
									"name": "Add a new document",
									"request": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) Media type of the entity in the body. Default is JSON.\n",
												"key": "Content-Type",
												"value": "JSON"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"<string>\",\n    \"type\": \"<string>\",\n    \"sourceType\": \"<string>\",\n    \"visibility\": \"<string>\",\n    \"documentId\": \"<string>\",\n    \"summary\": \"<string>\",\n    \"sourceUrl\": \"<string>\",\n    \"otherTypeName\": \"<string>\"\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/apis/:apiId/documents",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"apis",
												":apiId",
												"documents"
											],
											"variable": [
												{
													"id": "a0c01668-b71b-4d3f-b443-962bc6b366d2",
													"key": "apiId",
													"value": "<string>",
													"type": "string",
													"description": "(Required) **API ID** consisting of the **UUID** of the API.\nThe combination of the provider of the API, name of the API and the version is also accepted as a valid API ID.\nShould be formatted as **provider-name-version**.\n"
												}
											]
										},
										"description": "Add a new document to an API\n"
									},
									"response": [
										{
											"name": "Unsupported media type.\nThe entity of the request was in a not supported format.\n",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "(Required) Media type of the entity in the body. Default is JSON.\n",
														"key": "Content-Type",
														"value": "JSON"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/apis/:apiId/documents",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"apis",
														":apiId",
														"documents"
													],
													"variable": [
														{
															"key": "apiId"
														}
													]
												}
											},
											"status": "Unsupported Media Type",
											"code": 415,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Created.\nSuccessful response with the newly created Document object as entity in the body.\nLocation header contains URL of newly added document.\n",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "(Required) Media type of the entity in the body. Default is JSON.\n",
														"key": "Content-Type",
														"value": "JSON"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/apis/:apiId/documents",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"apis",
														":apiId",
														"documents"
													],
													"variable": [
														{
															"key": "apiId"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Location",
													"value": "dolore reprehenderi",
													"description": "Location to the newly created Document.\n"
												},
												{
													"key": "ETag",
													"value": "dolore reprehenderi",
													"description": "Entity Tag of the response resource.\nUsed by caches, or in conditional request.\n"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"name\": \"CalculatorDoc\",\n \"type\": \"HOWTO\",\n \"sourceType\": \"INLINE\",\n \"visibility\": \"API_LEVEL\",\n \"documentId\": \"01234567-0123-0123-0123-012345678901\",\n \"summary\": \"Summary of Calculator Documentation\",\n \"sourceUrl\": \"\",\n \"otherTypeName\": \"\"\n}"
										},
										{
											"name": "Bad Request.\nInvalid request or validation error\n",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "(Required) Media type of the entity in the body. Default is JSON.\n",
														"key": "Content-Type",
														"value": "JSON"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/apis/:apiId/documents",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"apis",
														":apiId",
														"documents"
													],
													"variable": [
														{
															"key": "apiId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -68757475,\n \"message\": \"voluptate culpa qui minim consectetur\",\n \"description\": \"eu laboris minim\",\n \"moreInfo\": \"et\",\n \"error\": [\n  {\n   \"code\": \"velit et\",\n   \"message\": \"nulla labore deserunt non sed\"\n  },\n  {\n   \"code\": \"qui cupidatat officia\",\n   \"message\": \"cupidatat esse\"\n  }\n ]\n}"
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Get API details",
							"request": {
								"method": "GET",
								"header": [
									{
										"description": "Media types acceptable for the response. Default is JSON.\n",
										"key": "Accept",
										"value": "JSON"
									},
									{
										"description": "Validator for conditional requests; based on the ETag of the formerly retrieved\nvariant of the resourec.\n",
										"key": "If-None-Match",
										"value": "<string>"
									},
									{
										"description": "Validator for conditional requests; based on Last Modified header of the\nformerly retrieved variant of the resource.\n",
										"key": "If-Modified-Since",
										"value": "<string>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/apis/:apiId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"apis",
										":apiId"
									],
									"variable": [
										{
											"id": "8204b812-f447-44f7-be25-1bc1f0f79241",
											"key": "apiId",
											"value": "<string>",
											"type": "string",
											"description": "(Required) **API ID** consisting of the **UUID** of the API.\nThe combination of the provider of the API, name of the API and the version is also accepted as a valid API ID.\nShould be formatted as **provider-name-version**.\n"
										}
									]
								},
								"description": "Get details of an API\n"
							},
							"response": [
								{
									"name": "OK.\nRequested API is returned\n",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Media types acceptable for the response. Default is JSON.\n",
												"key": "Accept",
												"value": "JSON"
											},
											{
												"description": "Validator for conditional requests; based on the ETag of the formerly retrieved\nvariant of the resourec.\n",
												"key": "If-None-Match",
												"value": "<string>"
											},
											{
												"description": "Validator for conditional requests; based on Last Modified header of the\nformerly retrieved variant of the resource.\n",
												"key": "If-Modified-Since",
												"value": "<string>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/apis/:apiId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"apis",
												":apiId"
											],
											"variable": [
												{
													"key": "apiId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "ETag",
											"value": "dolore reprehenderi",
											"description": "Entity Tag of the response resource. Used by caches, or in conditional requests.\n"
										},
										{
											"key": "Last-Modified",
											"value": "dolore reprehenderi",
											"description": "Date and time the resource has been modifed the last time.\nUsed by caches, or in conditional requests.\n"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"name\": \"CalculatorAPI\",\n \"context\": \"CalculatorAPI\",\n \"version\": \"1.0.0\",\n \"apiDefinition\": \"{\\\"paths\\\":{\\\"\\\\/substract\\\":{\\\"get\\\":{\\\"x-auth-type\\\":\\\"Application & Application User\\\",\\\"x-throttling-tier\\\":\\\"Unlimited\\\",\\\"parameters\\\":[{\\\"name\\\":\\\"x\\\",\\\"required\\\":true,\\\"type\\\":\\\"string\\\",\\\"in\\\":\\\"query\\\"},{\\\"name\\\":\\\"y\\\",\\\"required\\\":true,\\\"type\\\":\\\"string\\\",\\\"in\\\":\\\"query\\\"}],\\\"responses\\\":{\\\"200\\\":{}}}},\\\"\\\\/add\\\":{\\\"get\\\":{\\\"x-auth-type\\\":\\\"Application & Application User\\\",\\\"x-throttling-tier\\\":\\\"Unlimited\\\",\\\"parameters\\\":[{\\\"name\\\":\\\"x\\\",\\\"required\\\":true,\\\"type\\\":\\\"string\\\",\\\"in\\\":\\\"query\\\"},{\\\"name\\\":\\\"y\\\",\\\"required\\\":true,\\\"type\\\":\\\"string\\\",\\\"in\\\":\\\"query\\\"}],\\\"responses\\\":{\\\"200\\\":{}}}}},\\\"swagger\\\":\\\"2.0\\\",\\\"info\\\":{\\\"title\\\":\\\"CalculatorAPI\\\",\\\"version\\\":\\\"1.0.0\\\"}}\",\n \"tiers\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"isDefaultVersion\": false,\n \"transport\": [\n  \"http\",\n  \"https\"\n ],\n \"endpointConfig\": \"{\\\"production_endpoints\\\":{\\\"url\\\":\\\"http://localhost:9763/am/sample/calculator/v1/api\\\",\\\"config\\\":null},\\\"implementation_status\\\":\\\"managed\\\",\\\"endpoint_type\\\":\\\"http\\\"}\",\n \"visibility\": \"PUBLIC\",\n \"id\": \"01234567-0123-0123-0123-012345678901\",\n \"description\": \"A calculator API that supports basic operations\",\n \"provider\": \"admin\",\n \"wsdlUri\": \"http://www.webservicex.com/globalweather.asmx?wsdl\",\n \"status\": \"CREATED\",\n \"responseCaching\": \"Disabled\",\n \"cacheTimeout\": 300,\n \"destinationStatsEnabled\": \"Disabled\",\n \"tags\": [\n  \"substract\",\n  \"add\"\n ],\n \"maxTps\": {\n  \"production\": 1000,\n  \"sandbox\": 1000\n },\n \"thumbnailUri\": \"/apis/01234567-0123-0123-0123-012345678901/thumbnail\",\n \"visibleRoles\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"visibleTenants\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"endpointSecurity\": {\n  \"type\": \"basic\",\n  \"username\": \"admin\",\n  \"password\": \"password\"\n },\n \"gatewayEnvironments\": \"Production and Sandbox\",\n \"sequences\": [\n  {\n   \"name\": \"log_in_message\",\n   \"config\": \"\",\n   \"type\": \"in\"\n  },\n  {\n   \"name\": \"log_in_message\",\n   \"config\": \"\",\n   \"type\": \"in\"\n  }\n ],\n \"subscriptionAvailability\": \"current_tenant\",\n \"subscriptionAvailableTenants\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"businessInformation\": {\n  \"businessOwner\": \"businessowner\",\n  \"businessOwnerEmail\": \"businessowner@wso2.com\",\n  \"technicalOwner\": \"technicalowner\",\n  \"technicalOwnerEmail\": \"technicalowner@wso2.com\"\n },\n \"corsConfiguration\": {\n  \"corsConfigurationEnabled\": false,\n  \"accessControlAllowOrigins\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"accessControlAllowCredentials\": false,\n  \"accessControlAllowHeaders\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"accessControlAllowMethods\": [\n   \"<string>\",\n   \"<string>\"\n  ]\n }\n}"
								},
								{
									"name": "Not Acceptable.\nThe requested media type is not supported\n",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Media types acceptable for the response. Default is JSON.\n",
												"key": "Accept",
												"value": "JSON"
											},
											{
												"description": "Validator for conditional requests; based on the ETag of the formerly retrieved\nvariant of the resourec.\n",
												"key": "If-None-Match",
												"value": "<string>"
											},
											{
												"description": "Validator for conditional requests; based on Last Modified header of the\nformerly retrieved variant of the resource.\n",
												"key": "If-Modified-Since",
												"value": "<string>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/apis/:apiId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"apis",
												":apiId"
											],
											"variable": [
												{
													"key": "apiId"
												}
											]
										}
									},
									"status": "Not Acceptable",
									"code": 406,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -68757475,\n \"message\": \"voluptate culpa qui minim consectetur\",\n \"description\": \"eu laboris minim\",\n \"moreInfo\": \"et\",\n \"error\": [\n  {\n   \"code\": \"velit et\",\n   \"message\": \"nulla labore deserunt non sed\"\n  },\n  {\n   \"code\": \"qui cupidatat officia\",\n   \"message\": \"cupidatat esse\"\n  }\n ]\n}"
								},
								{
									"name": "Not Found.\nRequested API does not exist.\n",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Media types acceptable for the response. Default is JSON.\n",
												"key": "Accept",
												"value": "JSON"
											},
											{
												"description": "Validator for conditional requests; based on the ETag of the formerly retrieved\nvariant of the resourec.\n",
												"key": "If-None-Match",
												"value": "<string>"
											},
											{
												"description": "Validator for conditional requests; based on Last Modified header of the\nformerly retrieved variant of the resource.\n",
												"key": "If-Modified-Since",
												"value": "<string>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/apis/:apiId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"apis",
												":apiId"
											],
											"variable": [
												{
													"key": "apiId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -68757475,\n \"message\": \"voluptate culpa qui minim consectetur\",\n \"description\": \"eu laboris minim\",\n \"moreInfo\": \"et\",\n \"error\": [\n  {\n   \"code\": \"velit et\",\n   \"message\": \"nulla labore deserunt non sed\"\n  },\n  {\n   \"code\": \"qui cupidatat officia\",\n   \"message\": \"cupidatat esse\"\n  }\n ]\n}"
								},
								{
									"name": "Not Modified.\nEmpty body because the client has already the latest version of the requested resource.\n",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Media types acceptable for the response. Default is JSON.\n",
												"key": "Accept",
												"value": "JSON"
											},
											{
												"description": "Validator for conditional requests; based on the ETag of the formerly retrieved\nvariant of the resourec.\n",
												"key": "If-None-Match",
												"value": "<string>"
											},
											{
												"description": "Validator for conditional requests; based on Last Modified header of the\nformerly retrieved variant of the resource.\n",
												"key": "If-Modified-Since",
												"value": "<string>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/apis/:apiId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"apis",
												":apiId"
											],
											"variable": [
												{
													"key": "apiId"
												}
											]
										}
									},
									"status": "Not Modified",
									"code": 304,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Update an existing API",
							"request": {
								"method": "PUT",
								"header": [
									{
										"description": "(Required) Media type of the entity in the body. Default is JSON.\n",
										"key": "Content-Type",
										"value": "JSON"
									},
									{
										"description": "Validator for conditional requests; based on ETag.\n",
										"key": "If-Match",
										"value": "<string>"
									},
									{
										"description": "Validator for conditional requests; based on Last Modified header.\n",
										"key": "If-Unmodified-Since",
										"value": "<string>"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<string>\",\n    \"context\": \"<string>\",\n    \"version\": \"<string>\",\n    \"apiDefinition\": \"<string>\",\n    \"tiers\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"isDefaultVersion\": \"<boolean>\",\n    \"transport\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"endpointConfig\": \"<string>\",\n    \"visibility\": \"<string>\",\n    \"id\": \"<string>\",\n    \"description\": \"<string>\",\n    \"provider\": \"<string>\",\n    \"wsdlUri\": \"<string>\",\n    \"status\": \"<string>\",\n    \"responseCaching\": \"<string>\",\n    \"cacheTimeout\": \"<integer>\",\n    \"destinationStatsEnabled\": \"<string>\",\n    \"tags\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"maxTps\": {\n        \"production\": \"<long>\",\n        \"sandbox\": \"<long>\"\n    },\n    \"thumbnailUri\": \"<string>\",\n    \"visibleRoles\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"visibleTenants\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"endpointSecurity\": {\n        \"type\": \"<string>\",\n        \"username\": \"<string>\",\n        \"password\": \"<string>\"\n    },\n    \"gatewayEnvironments\": \"<string>\",\n    \"sequences\": [\n        {\n            \"name\": \"<string>\",\n            \"config\": \"<string>\",\n            \"type\": \"<string>\"\n        },\n        {\n            \"name\": \"<string>\",\n            \"config\": \"<string>\",\n            \"type\": \"<string>\"\n        }\n    ],\n    \"subscriptionAvailability\": \"<string>\",\n    \"subscriptionAvailableTenants\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"businessInformation\": {\n        \"businessOwner\": \"<string>\",\n        \"businessOwnerEmail\": \"<string>\",\n        \"technicalOwner\": \"<string>\",\n        \"technicalOwnerEmail\": \"<string>\"\n    },\n    \"corsConfiguration\": {\n        \"corsConfigurationEnabled\": false,\n        \"accessControlAllowOrigins\": [\n            \"<string>\",\n            \"<string>\"\n        ],\n        \"accessControlAllowCredentials\": false,\n        \"accessControlAllowHeaders\": [\n            \"<string>\",\n            \"<string>\"\n        ],\n        \"accessControlAllowMethods\": [\n            \"<string>\",\n            \"<string>\"\n        ]\n    }\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/apis/:apiId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"apis",
										":apiId"
									],
									"variable": [
										{
											"id": "e54c8149-9ee2-4fda-8846-984db73a3f79",
											"key": "apiId",
											"value": "<string>",
											"type": "string",
											"description": "(Required) **API ID** consisting of the **UUID** of the API.\nThe combination of the provider of the API, name of the API and the version is also accepted as a valid API ID.\nShould be formatted as **provider-name-version**.\n"
										}
									]
								},
								"description": "Update an existing API\n"
							},
							"response": [
								{
									"name": "Bad Request.\nInvalid request or validation error\n",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "(Required) Media type of the entity in the body. Default is JSON.\n",
												"key": "Content-Type",
												"value": "JSON"
											},
											{
												"description": "Validator for conditional requests; based on ETag.\n",
												"key": "If-Match",
												"value": "<string>"
											},
											{
												"description": "Validator for conditional requests; based on Last Modified header.\n",
												"key": "If-Unmodified-Since",
												"value": "<string>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/apis/:apiId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"apis",
												":apiId"
											],
											"variable": [
												{
													"key": "apiId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -68757475,\n \"message\": \"voluptate culpa qui minim consectetur\",\n \"description\": \"eu laboris minim\",\n \"moreInfo\": \"et\",\n \"error\": [\n  {\n   \"code\": \"velit et\",\n   \"message\": \"nulla labore deserunt non sed\"\n  },\n  {\n   \"code\": \"qui cupidatat officia\",\n   \"message\": \"cupidatat esse\"\n  }\n ]\n}"
								},
								{
									"name": "OK.\nSuccessful response with updated API object\n",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "(Required) Media type of the entity in the body. Default is JSON.\n",
												"key": "Content-Type",
												"value": "JSON"
											},
											{
												"description": "Validator for conditional requests; based on ETag.\n",
												"key": "If-Match",
												"value": "<string>"
											},
											{
												"description": "Validator for conditional requests; based on Last Modified header.\n",
												"key": "If-Unmodified-Since",
												"value": "<string>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/apis/:apiId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"apis",
												":apiId"
											],
											"variable": [
												{
													"key": "apiId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Location",
											"value": "dolore reprehenderi",
											"description": "The URL of the newly created resource.\n"
										},
										{
											"key": "ETag",
											"value": "dolore reprehenderi",
											"description": "Entity Tag of the response resource. Used by caches, or in conditional request.\n"
										},
										{
											"key": "Last-Modified",
											"value": "dolore reprehenderi",
											"description": "Date and time the resource has been modifed the last time.\nUsed by caches, or in conditional requests.\n"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"name\": \"CalculatorAPI\",\n \"context\": \"CalculatorAPI\",\n \"version\": \"1.0.0\",\n \"apiDefinition\": \"{\\\"paths\\\":{\\\"\\\\/substract\\\":{\\\"get\\\":{\\\"x-auth-type\\\":\\\"Application & Application User\\\",\\\"x-throttling-tier\\\":\\\"Unlimited\\\",\\\"parameters\\\":[{\\\"name\\\":\\\"x\\\",\\\"required\\\":true,\\\"type\\\":\\\"string\\\",\\\"in\\\":\\\"query\\\"},{\\\"name\\\":\\\"y\\\",\\\"required\\\":true,\\\"type\\\":\\\"string\\\",\\\"in\\\":\\\"query\\\"}],\\\"responses\\\":{\\\"200\\\":{}}}},\\\"\\\\/add\\\":{\\\"get\\\":{\\\"x-auth-type\\\":\\\"Application & Application User\\\",\\\"x-throttling-tier\\\":\\\"Unlimited\\\",\\\"parameters\\\":[{\\\"name\\\":\\\"x\\\",\\\"required\\\":true,\\\"type\\\":\\\"string\\\",\\\"in\\\":\\\"query\\\"},{\\\"name\\\":\\\"y\\\",\\\"required\\\":true,\\\"type\\\":\\\"string\\\",\\\"in\\\":\\\"query\\\"}],\\\"responses\\\":{\\\"200\\\":{}}}}},\\\"swagger\\\":\\\"2.0\\\",\\\"info\\\":{\\\"title\\\":\\\"CalculatorAPI\\\",\\\"version\\\":\\\"1.0.0\\\"}}\",\n \"tiers\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"isDefaultVersion\": false,\n \"transport\": [\n  \"http\",\n  \"https\"\n ],\n \"endpointConfig\": \"{\\\"production_endpoints\\\":{\\\"url\\\":\\\"http://localhost:9763/am/sample/calculator/v1/api\\\",\\\"config\\\":null},\\\"implementation_status\\\":\\\"managed\\\",\\\"endpoint_type\\\":\\\"http\\\"}\",\n \"visibility\": \"PUBLIC\",\n \"id\": \"01234567-0123-0123-0123-012345678901\",\n \"description\": \"A calculator API that supports basic operations\",\n \"provider\": \"admin\",\n \"wsdlUri\": \"http://www.webservicex.com/globalweather.asmx?wsdl\",\n \"status\": \"CREATED\",\n \"responseCaching\": \"Disabled\",\n \"cacheTimeout\": 300,\n \"destinationStatsEnabled\": \"Disabled\",\n \"tags\": [\n  \"substract\",\n  \"add\"\n ],\n \"maxTps\": {\n  \"production\": 1000,\n  \"sandbox\": 1000\n },\n \"thumbnailUri\": \"/apis/01234567-0123-0123-0123-012345678901/thumbnail\",\n \"visibleRoles\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"visibleTenants\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"endpointSecurity\": {\n  \"type\": \"basic\",\n  \"username\": \"admin\",\n  \"password\": \"password\"\n },\n \"gatewayEnvironments\": \"Production and Sandbox\",\n \"sequences\": [\n  {\n   \"name\": \"log_in_message\",\n   \"config\": \"\",\n   \"type\": \"in\"\n  },\n  {\n   \"name\": \"log_in_message\",\n   \"config\": \"\",\n   \"type\": \"in\"\n  }\n ],\n \"subscriptionAvailability\": \"current_tenant\",\n \"subscriptionAvailableTenants\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"businessInformation\": {\n  \"businessOwner\": \"businessowner\",\n  \"businessOwnerEmail\": \"businessowner@wso2.com\",\n  \"technicalOwner\": \"technicalowner\",\n  \"technicalOwnerEmail\": \"technicalowner@wso2.com\"\n },\n \"corsConfiguration\": {\n  \"corsConfigurationEnabled\": false,\n  \"accessControlAllowOrigins\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"accessControlAllowCredentials\": false,\n  \"accessControlAllowHeaders\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"accessControlAllowMethods\": [\n   \"<string>\",\n   \"<string>\"\n  ]\n }\n}"
								},
								{
									"name": "Precondition Failed.\nThe request has not been performed because one of the preconditions is not met.\n",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "(Required) Media type of the entity in the body. Default is JSON.\n",
												"key": "Content-Type",
												"value": "JSON"
											},
											{
												"description": "Validator for conditional requests; based on ETag.\n",
												"key": "If-Match",
												"value": "<string>"
											},
											{
												"description": "Validator for conditional requests; based on Last Modified header.\n",
												"key": "If-Unmodified-Since",
												"value": "<string>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/apis/:apiId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"apis",
												":apiId"
											],
											"variable": [
												{
													"key": "apiId"
												}
											]
										}
									},
									"status": "Precondition Failed",
									"code": 412,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -68757475,\n \"message\": \"voluptate culpa qui minim consectetur\",\n \"description\": \"eu laboris minim\",\n \"moreInfo\": \"et\",\n \"error\": [\n  {\n   \"code\": \"velit et\",\n   \"message\": \"nulla labore deserunt non sed\"\n  },\n  {\n   \"code\": \"qui cupidatat officia\",\n   \"message\": \"cupidatat esse\"\n  }\n ]\n}"
								},
								{
									"name": "Forbidden.\nThe request must be conditional but no condition has been specified.\n",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "(Required) Media type of the entity in the body. Default is JSON.\n",
												"key": "Content-Type",
												"value": "JSON"
											},
											{
												"description": "Validator for conditional requests; based on ETag.\n",
												"key": "If-Match",
												"value": "<string>"
											},
											{
												"description": "Validator for conditional requests; based on Last Modified header.\n",
												"key": "If-Unmodified-Since",
												"value": "<string>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/apis/:apiId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"apis",
												":apiId"
											],
											"variable": [
												{
													"key": "apiId"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -68757475,\n \"message\": \"voluptate culpa qui minim consectetur\",\n \"description\": \"eu laboris minim\",\n \"moreInfo\": \"et\",\n \"error\": [\n  {\n   \"code\": \"velit et\",\n   \"message\": \"nulla labore deserunt non sed\"\n  },\n  {\n   \"code\": \"qui cupidatat officia\",\n   \"message\": \"cupidatat esse\"\n  }\n ]\n}"
								},
								{
									"name": "Not Found.\nThe resource to be updated does not exist.\n",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "(Required) Media type of the entity in the body. Default is JSON.\n",
												"key": "Content-Type",
												"value": "JSON"
											},
											{
												"description": "Validator for conditional requests; based on ETag.\n",
												"key": "If-Match",
												"value": "<string>"
											},
											{
												"description": "Validator for conditional requests; based on Last Modified header.\n",
												"key": "If-Unmodified-Since",
												"value": "<string>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/apis/:apiId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"apis",
												":apiId"
											],
											"variable": [
												{
													"key": "apiId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -68757475,\n \"message\": \"voluptate culpa qui minim consectetur\",\n \"description\": \"eu laboris minim\",\n \"moreInfo\": \"et\",\n \"error\": [\n  {\n   \"code\": \"velit et\",\n   \"message\": \"nulla labore deserunt non sed\"\n  },\n  {\n   \"code\": \"qui cupidatat officia\",\n   \"message\": \"cupidatat esse\"\n  }\n ]\n}"
								}
							]
						},
						{
							"name": "Delete API",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"description": "Validator for conditional requests; based on ETag.\n",
										"key": "If-Match",
										"value": "<string>"
									},
									{
										"description": "Validator for conditional requests; based on Last Modified header.\n",
										"key": "If-Unmodified-Since",
										"value": "<string>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/apis/:apiId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"apis",
										":apiId"
									],
									"variable": [
										{
											"id": "ed9d91a8-36ea-4c77-b8ec-d7d0e7dfd18a",
											"key": "apiId",
											"value": "<string>",
											"type": "string",
											"description": "(Required) **API ID** consisting of the **UUID** of the API.\nThe combination of the provider of the API, name of the API and the version is also accepted as a valid API ID.\nShould be formatted as **provider-name-version**.\n"
										}
									]
								},
								"description": "Delete an existing API\n"
							},
							"response": [
								{
									"name": "Precondition Failed.\nThe request has not been performed because one of the preconditions is not met.\n",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Validator for conditional requests; based on ETag.\n",
												"key": "If-Match",
												"value": "<string>"
											},
											{
												"description": "Validator for conditional requests; based on Last Modified header.\n",
												"key": "If-Unmodified-Since",
												"value": "<string>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/apis/:apiId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"apis",
												":apiId"
											],
											"variable": [
												{
													"key": "apiId"
												}
											]
										}
									},
									"status": "Precondition Failed",
									"code": 412,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -68757475,\n \"message\": \"voluptate culpa qui minim consectetur\",\n \"description\": \"eu laboris minim\",\n \"moreInfo\": \"et\",\n \"error\": [\n  {\n   \"code\": \"velit et\",\n   \"message\": \"nulla labore deserunt non sed\"\n  },\n  {\n   \"code\": \"qui cupidatat officia\",\n   \"message\": \"cupidatat esse\"\n  }\n ]\n}"
								},
								{
									"name": "OK.\nResource successfully deleted.\n",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Validator for conditional requests; based on ETag.\n",
												"key": "If-Match",
												"value": "<string>"
											},
											{
												"description": "Validator for conditional requests; based on Last Modified header.\n",
												"key": "If-Unmodified-Since",
												"value": "<string>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/apis/:apiId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"apis",
												":apiId"
											],
											"variable": [
												{
													"key": "apiId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found.\nResource to be deleted does not exist.\n",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Validator for conditional requests; based on ETag.\n",
												"key": "If-Match",
												"value": "<string>"
											},
											{
												"description": "Validator for conditional requests; based on Last Modified header.\n",
												"key": "If-Unmodified-Since",
												"value": "<string>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/apis/:apiId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"apis",
												":apiId"
											],
											"variable": [
												{
													"key": "apiId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -68757475,\n \"message\": \"voluptate culpa qui minim consectetur\",\n \"description\": \"eu laboris minim\",\n \"moreInfo\": \"et\",\n \"error\": [\n  {\n   \"code\": \"velit et\",\n   \"message\": \"nulla labore deserunt non sed\"\n  },\n  {\n   \"code\": \"qui cupidatat officia\",\n   \"message\": \"cupidatat esse\"\n  }\n ]\n}"
								},
								{
									"name": "Forbidden.\nThe request must be conditional but no condition has been specified.\n",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Validator for conditional requests; based on ETag.\n",
												"key": "If-Match",
												"value": "<string>"
											},
											{
												"description": "Validator for conditional requests; based on Last Modified header.\n",
												"key": "If-Unmodified-Since",
												"value": "<string>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/apis/:apiId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"apis",
												":apiId"
											],
											"variable": [
												{
													"key": "apiId"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -68757475,\n \"message\": \"voluptate culpa qui minim consectetur\",\n \"description\": \"eu laboris minim\",\n \"moreInfo\": \"et\",\n \"error\": [\n  {\n   \"code\": \"velit et\",\n   \"message\": \"nulla labore deserunt non sed\"\n  },\n  {\n   \"code\": \"qui cupidatat officia\",\n   \"message\": \"cupidatat esse\"\n  }\n ]\n}"
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Get all APIs\n",
					"request": {
						"method": "GET",
						"header": [
							{
								"description": "Media types acceptable for the response. Default is JSON.\n",
								"key": "Accept",
								"value": "JSON"
							},
							{
								"description": "Validator for conditional requests; based on the ETag of the formerly retrieved\nvariant of the resourec.\n",
								"key": "If-None-Match",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/apis?limit=25&offset=0&query=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"apis"
							],
							"query": [
								{
									"key": "limit",
									"value": "25",
									"description": "Maximum size of resource array to return.\n"
								},
								{
									"key": "offset",
									"value": "0",
									"description": "Starting point within the complete list of items qualified.\n"
								},
								{
									"key": "query",
									"value": "<string>",
									"description": "**Search condition**.\n\nYou can search in attributes by using an **\"attribute:\"** modifier.\n\nEg. \"provider:wso2\" will match an API if the provider of the API contains \"wso2\".\n\nSupported attribute modifiers are [**version, context, status,\ndescription, subcontext, doc, provider**]\n\nIf no advanced attribute modifier has been specified, search will match the\ngiven query string against API Name.\n"
								}
							]
						},
						"description": "Get a list of available APIs qualifying under a given search condition.\n"
					},
					"response": [
						{
							"name": "OK.\nList of qualifying APIs is returned.\n",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Media types acceptable for the response. Default is JSON.\n",
										"key": "Accept",
										"value": "JSON"
									},
									{
										"description": "Validator for conditional requests; based on the ETag of the formerly retrieved\nvariant of the resourec.\n",
										"key": "If-None-Match",
										"value": "<string>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/apis?limit=25&offset=0&query=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"apis"
									],
									"query": [
										{
											"key": "limit",
											"value": "25"
										},
										{
											"key": "offset",
											"value": "0"
										},
										{
											"key": "query",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "ETag",
									"value": "dolore reprehenderi",
									"description": "Entity Tag of the response resource. Used by caches, or in conditional requests.\n"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"count\": 1,\n \"next\": \"/apis?limit=1&offset=2&query=\",\n \"previous\": \"/apis?limit=1&offset=0&query=\",\n \"list\": [\n  {\n   \"id\": \"01234567-0123-0123-0123-012345678901\",\n   \"name\": \"CalculatorAPI\",\n   \"description\": \"A calculator API that supports basic operations\",\n   \"context\": \"CalculatorAPI\",\n   \"version\": \"1.0.0\",\n   \"provider\": \"admin\",\n   \"status\": \"CREATED\"\n  },\n  {\n   \"id\": \"01234567-0123-0123-0123-012345678901\",\n   \"name\": \"CalculatorAPI\",\n   \"description\": \"A calculator API that supports basic operations\",\n   \"context\": \"CalculatorAPI\",\n   \"version\": \"1.0.0\",\n   \"provider\": \"admin\",\n   \"status\": \"CREATED\"\n  }\n ]\n}"
						},
						{
							"name": "Not Acceptable.\nThe requested media type is not supported\n",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Media types acceptable for the response. Default is JSON.\n",
										"key": "Accept",
										"value": "JSON"
									},
									{
										"description": "Validator for conditional requests; based on the ETag of the formerly retrieved\nvariant of the resourec.\n",
										"key": "If-None-Match",
										"value": "<string>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/apis?limit=25&offset=0&query=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"apis"
									],
									"query": [
										{
											"key": "limit",
											"value": "25"
										},
										{
											"key": "offset",
											"value": "0"
										},
										{
											"key": "query",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Not Acceptable",
							"code": 406,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 77034659,\n \"message\": \"consequat magna\",\n \"description\": \"sint proident pariatur aliquip\",\n \"moreInfo\": \"culpa nulla\",\n \"error\": [\n  {\n   \"code\": \"deserunt labore elit\",\n   \"message\": \"occaecat in\"\n  },\n  {\n   \"code\": \"elit laborum velit eiusmod\",\n   \"message\": \"laborum Duis veniam enim\"\n  }\n ]\n}"
						},
						{
							"name": "Not Modified.\nEmpty body because the client has already the latest version of the requested resource.\n",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Media types acceptable for the response. Default is JSON.\n",
										"key": "Accept",
										"value": "JSON"
									},
									{
										"description": "Validator for conditional requests; based on the ETag of the formerly retrieved\nvariant of the resourec.\n",
										"key": "If-None-Match",
										"value": "<string>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/apis?limit=25&offset=0&query=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"apis"
									],
									"query": [
										{
											"key": "limit",
											"value": "25"
										},
										{
											"key": "offset",
											"value": "0"
										},
										{
											"key": "query",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Not Modified",
							"code": 304,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Create a new API",
					"request": {
						"method": "POST",
						"header": [
							{
								"description": "(Required) Media type of the entity in the body. Default is JSON.\n",
								"key": "Content-Type",
								"value": "JSON"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"<string>\",\n    \"context\": \"<string>\",\n    \"version\": \"<string>\",\n    \"apiDefinition\": \"<string>\",\n    \"tiers\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"isDefaultVersion\": \"<boolean>\",\n    \"transport\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"endpointConfig\": \"<string>\",\n    \"visibility\": \"<string>\",\n    \"id\": \"<string>\",\n    \"description\": \"<string>\",\n    \"provider\": \"<string>\",\n    \"wsdlUri\": \"<string>\",\n    \"status\": \"<string>\",\n    \"responseCaching\": \"<string>\",\n    \"cacheTimeout\": \"<integer>\",\n    \"destinationStatsEnabled\": \"<string>\",\n    \"tags\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"maxTps\": {\n        \"production\": \"<long>\",\n        \"sandbox\": \"<long>\"\n    },\n    \"thumbnailUri\": \"<string>\",\n    \"visibleRoles\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"visibleTenants\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"endpointSecurity\": {\n        \"type\": \"<string>\",\n        \"username\": \"<string>\",\n        \"password\": \"<string>\"\n    },\n    \"gatewayEnvironments\": \"<string>\",\n    \"sequences\": [\n        {\n            \"name\": \"<string>\",\n            \"config\": \"<string>\",\n            \"type\": \"<string>\"\n        },\n        {\n            \"name\": \"<string>\",\n            \"config\": \"<string>\",\n            \"type\": \"<string>\"\n        }\n    ],\n    \"subscriptionAvailability\": \"<string>\",\n    \"subscriptionAvailableTenants\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"businessInformation\": {\n        \"businessOwner\": \"<string>\",\n        \"businessOwnerEmail\": \"<string>\",\n        \"technicalOwner\": \"<string>\",\n        \"technicalOwnerEmail\": \"<string>\"\n    },\n    \"corsConfiguration\": {\n        \"corsConfigurationEnabled\": false,\n        \"accessControlAllowOrigins\": [\n            \"<string>\",\n            \"<string>\"\n        ],\n        \"accessControlAllowCredentials\": false,\n        \"accessControlAllowHeaders\": [\n            \"<string>\",\n            \"<string>\"\n        ],\n        \"accessControlAllowMethods\": [\n            \"<string>\",\n            \"<string>\"\n        ]\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/apis",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"apis"
							]
						},
						"description": "Create a new API\n"
					},
					"response": [
						{
							"name": "Bad Request.\nInvalid request or validation error.\n",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) Media type of the entity in the body. Default is JSON.\n",
										"key": "Content-Type",
										"value": "JSON"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/apis",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"apis"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": -68757475,\n \"message\": \"voluptate culpa qui minim consectetur\",\n \"description\": \"eu laboris minim\",\n \"moreInfo\": \"et\",\n \"error\": [\n  {\n   \"code\": \"velit et\",\n   \"message\": \"nulla labore deserunt non sed\"\n  },\n  {\n   \"code\": \"qui cupidatat officia\",\n   \"message\": \"cupidatat esse\"\n  }\n ]\n}"
						},
						{
							"name": "Created.\nSuccessful response with the newly created object as entity in the body.\nLocation header contains URL of newly created entity.\n",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) Media type of the entity in the body. Default is JSON.\n",
										"key": "Content-Type",
										"value": "JSON"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/apis",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"apis"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Location",
									"value": "dolore reprehenderi",
									"description": "The URL of the newly created resource.\n"
								},
								{
									"key": "ETag",
									"value": "dolore reprehenderi",
									"description": "Entity Tag of the response resource. Used by caches, or in conditional request\n"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"name\": \"CalculatorAPI\",\n \"context\": \"CalculatorAPI\",\n \"version\": \"1.0.0\",\n \"apiDefinition\": \"{\\\"paths\\\":{\\\"\\\\/substract\\\":{\\\"get\\\":{\\\"x-auth-type\\\":\\\"Application & Application User\\\",\\\"x-throttling-tier\\\":\\\"Unlimited\\\",\\\"parameters\\\":[{\\\"name\\\":\\\"x\\\",\\\"required\\\":true,\\\"type\\\":\\\"string\\\",\\\"in\\\":\\\"query\\\"},{\\\"name\\\":\\\"y\\\",\\\"required\\\":true,\\\"type\\\":\\\"string\\\",\\\"in\\\":\\\"query\\\"}],\\\"responses\\\":{\\\"200\\\":{}}}},\\\"\\\\/add\\\":{\\\"get\\\":{\\\"x-auth-type\\\":\\\"Application & Application User\\\",\\\"x-throttling-tier\\\":\\\"Unlimited\\\",\\\"parameters\\\":[{\\\"name\\\":\\\"x\\\",\\\"required\\\":true,\\\"type\\\":\\\"string\\\",\\\"in\\\":\\\"query\\\"},{\\\"name\\\":\\\"y\\\",\\\"required\\\":true,\\\"type\\\":\\\"string\\\",\\\"in\\\":\\\"query\\\"}],\\\"responses\\\":{\\\"200\\\":{}}}}},\\\"swagger\\\":\\\"2.0\\\",\\\"info\\\":{\\\"title\\\":\\\"CalculatorAPI\\\",\\\"version\\\":\\\"1.0.0\\\"}}\",\n \"tiers\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"isDefaultVersion\": false,\n \"transport\": [\n  \"http\",\n  \"https\"\n ],\n \"endpointConfig\": \"{\\\"production_endpoints\\\":{\\\"url\\\":\\\"http://localhost:9763/am/sample/calculator/v1/api\\\",\\\"config\\\":null},\\\"implementation_status\\\":\\\"managed\\\",\\\"endpoint_type\\\":\\\"http\\\"}\",\n \"visibility\": \"PUBLIC\",\n \"id\": \"01234567-0123-0123-0123-012345678901\",\n \"description\": \"A calculator API that supports basic operations\",\n \"provider\": \"admin\",\n \"wsdlUri\": \"http://www.webservicex.com/globalweather.asmx?wsdl\",\n \"status\": \"CREATED\",\n \"responseCaching\": \"Disabled\",\n \"cacheTimeout\": 300,\n \"destinationStatsEnabled\": \"Disabled\",\n \"tags\": [\n  \"substract\",\n  \"add\"\n ],\n \"maxTps\": {\n  \"production\": 1000,\n  \"sandbox\": 1000\n },\n \"thumbnailUri\": \"/apis/01234567-0123-0123-0123-012345678901/thumbnail\",\n \"visibleRoles\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"visibleTenants\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"endpointSecurity\": {\n  \"type\": \"basic\",\n  \"username\": \"admin\",\n  \"password\": \"password\"\n },\n \"gatewayEnvironments\": \"Production and Sandbox\",\n \"sequences\": [\n  {\n   \"name\": \"log_in_message\",\n   \"config\": \"\",\n   \"type\": \"in\"\n  },\n  {\n   \"name\": \"log_in_message\",\n   \"config\": \"\",\n   \"type\": \"in\"\n  }\n ],\n \"subscriptionAvailability\": \"current_tenant\",\n \"subscriptionAvailableTenants\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"businessInformation\": {\n  \"businessOwner\": \"businessowner\",\n  \"businessOwnerEmail\": \"businessowner@wso2.com\",\n  \"technicalOwner\": \"technicalowner\",\n  \"technicalOwnerEmail\": \"technicalowner@wso2.com\"\n },\n \"corsConfiguration\": {\n  \"corsConfigurationEnabled\": false,\n  \"accessControlAllowOrigins\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"accessControlAllowCredentials\": false,\n  \"accessControlAllowHeaders\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"accessControlAllowMethods\": [\n   \"<string>\",\n   \"<string>\"\n  ]\n }\n}"
						},
						{
							"name": "Unsupported Media Type.\nThe entity of the request was in a not supported format.\n",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) Media type of the entity in the body. Default is JSON.\n",
										"key": "Content-Type",
										"value": "JSON"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/apis",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"apis"
									]
								}
							},
							"status": "Unsupported Media Type",
							"code": 415,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": -68757475,\n \"message\": \"voluptate culpa qui minim consectetur\",\n \"description\": \"eu laboris minim\",\n \"moreInfo\": \"et\",\n \"error\": [\n  {\n   \"code\": \"velit et\",\n   \"message\": \"nulla labore deserunt non sed\"\n  },\n  {\n   \"code\": \"qui cupidatat officia\",\n   \"message\": \"cupidatat esse\"\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "Copy API",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/apis/copy-api?newVersion=<string>&apiId=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"apis",
								"copy-api"
							],
							"query": [
								{
									"key": "newVersion",
									"value": "<string>",
									"description": "(Required) Version of the new API."
								},
								{
									"key": "apiId",
									"value": "<string>",
									"description": "(Required) **API ID** consisting of the **UUID** of the API.\nThe combination of the provider of the API, name of the API and the version is also accepted as a valid API I.\nShould be formatted as **provider-name-version**.\n"
								}
							]
						},
						"description": "Create a new API by copying an existing API\n"
					},
					"response": [
						{
							"name": "Created.\nSuccessful response with the newly created API as entity in the body. Location header contains URL of newly created API.\n",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/apis/copy-api?newVersion=<string>&apiId=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"apis",
										"copy-api"
									],
									"query": [
										{
											"key": "newVersion",
											"value": "<string>"
										},
										{
											"key": "apiId",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Location",
									"value": "dolore reprehenderi",
									"description": "The URL of the newly created API.\n"
								},
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad Request.\nInvalid request or validation error\n",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/apis/copy-api?newVersion=<string>&apiId=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"apis",
										"copy-api"
									],
									"query": [
										{
											"key": "newVersion",
											"value": "<string>"
										},
										{
											"key": "apiId",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": -68757475,\n \"message\": \"voluptate culpa qui minim consectetur\",\n \"description\": \"eu laboris minim\",\n \"moreInfo\": \"et\",\n \"error\": [\n  {\n   \"code\": \"velit et\",\n   \"message\": \"nulla labore deserunt non sed\"\n  },\n  {\n   \"code\": \"qui cupidatat officia\",\n   \"message\": \"cupidatat esse\"\n  }\n ]\n}"
						},
						{
							"name": "Not Found.\nAPI to copy does not exist.\n",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/apis/copy-api?newVersion=<string>&apiId=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"apis",
										"copy-api"
									],
									"query": [
										{
											"key": "newVersion",
											"value": "<string>"
										},
										{
											"key": "apiId",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": -68757475,\n \"message\": \"voluptate culpa qui minim consectetur\",\n \"description\": \"eu laboris minim\",\n \"moreInfo\": \"et\",\n \"error\": [\n  {\n   \"code\": \"velit et\",\n   \"message\": \"nulla labore deserunt non sed\"\n  },\n  {\n   \"code\": \"qui cupidatat officia\",\n   \"message\": \"cupidatat esse\"\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "Change API Status",
					"request": {
						"method": "POST",
						"header": [
							{
								"description": "Validator for conditional requests; based on ETag.\n",
								"key": "If-Match",
								"value": "<string>"
							},
							{
								"description": "Validator for conditional requests; based on Last Modified header.\n",
								"key": "If-Unmodified-Since",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/apis/change-lifecycle?action=<string>&lifecycleChecklist=<string>&apiId=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"apis",
								"change-lifecycle"
							],
							"query": [
								{
									"key": "action",
									"value": "<string>",
									"description": "(Required) The action to demote or promote the state of the API.\n\nSupported actions are [ **Publish, Deploy as a Prototype, Demote to Created, Demote to Prototyped, Block, Deprecate, Re-Publish, Retire **]\n"
								},
								{
									"key": "lifecycleChecklist",
									"value": "<string>",
									"description": "\nYou can specify additional checklist items by using an **\"attribute:\"** modifier.\n\nEg: \"Deprecate Old Versions:true\" will deprecate older versions of a particular API when it is promoted to\nPublished state from Created state. Multiple checklist items can be given in \"attribute1:true, attribute2:false\"\nformat.\n\nSupported checklist items are as follows.\n1. **Deprecate Old Versions**: Setting this to true will deprecate older versions of a particular API when it is promoted to Published state from Created state.\n2. **Require Re-Subscription**: If you set this to true, users need to re subscribe to the API although they may have subscribed to an older version.\n"
								},
								{
									"key": "apiId",
									"value": "<string>",
									"description": "(Required) **API ID** consisting of the **UUID** of the API.\nThe combination of the provider of the API, name of the API and the version is also accepted as a valid API I.\nShould be formatted as **provider-name-version**.\n"
								}
							]
						},
						"description": "Change the lifecycle of an API\n"
					},
					"response": [
						{
							"name": "Precondition Failed.\nThe request has not been performed because one of the preconditions is not met.\n",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Validator for conditional requests; based on ETag.\n",
										"key": "If-Match",
										"value": "<string>"
									},
									{
										"description": "Validator for conditional requests; based on Last Modified header.\n",
										"key": "If-Unmodified-Since",
										"value": "<string>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/apis/change-lifecycle?action=<string>&lifecycleChecklist=<string>&apiId=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"apis",
										"change-lifecycle"
									],
									"query": [
										{
											"key": "action",
											"value": "<string>"
										},
										{
											"key": "lifecycleChecklist",
											"value": "<string>"
										},
										{
											"key": "apiId",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Precondition Failed",
							"code": 412,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": -68757475,\n \"message\": \"voluptate culpa qui minim consectetur\",\n \"description\": \"eu laboris minim\",\n \"moreInfo\": \"et\",\n \"error\": [\n  {\n   \"code\": \"velit et\",\n   \"message\": \"nulla labore deserunt non sed\"\n  },\n  {\n   \"code\": \"qui cupidatat officia\",\n   \"message\": \"cupidatat esse\"\n  }\n ]\n}"
						},
						{
							"name": "OK.\nLifecycle changed successfully.\n",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Validator for conditional requests; based on ETag.\n",
										"key": "If-Match",
										"value": "<string>"
									},
									{
										"description": "Validator for conditional requests; based on Last Modified header.\n",
										"key": "If-Unmodified-Since",
										"value": "<string>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/apis/change-lifecycle?action=<string>&lifecycleChecklist=<string>&apiId=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"apis",
										"change-lifecycle"
									],
									"query": [
										{
											"key": "action",
											"value": "<string>"
										},
										{
											"key": "lifecycleChecklist",
											"value": "<string>"
										},
										{
											"key": "apiId",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "ETag",
									"value": "dolore reprehenderi",
									"description": "Entity Tag of the changed API. Used by caches, or in conditional request.\n"
								},
								{
									"key": "Last-Modified",
									"value": "dolore reprehenderi",
									"description": "Date and time the API lifecycle has been modified the last time.\nUsed by caches, or in conditional requests.\n"
								},
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad Request.\nInvalid request or validation error\n",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Validator for conditional requests; based on ETag.\n",
										"key": "If-Match",
										"value": "<string>"
									},
									{
										"description": "Validator for conditional requests; based on Last Modified header.\n",
										"key": "If-Unmodified-Since",
										"value": "<string>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/apis/change-lifecycle?action=<string>&lifecycleChecklist=<string>&apiId=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"apis",
										"change-lifecycle"
									],
									"query": [
										{
											"key": "action",
											"value": "<string>"
										},
										{
											"key": "lifecycleChecklist",
											"value": "<string>"
										},
										{
											"key": "apiId",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": -68757475,\n \"message\": \"voluptate culpa qui minim consectetur\",\n \"description\": \"eu laboris minim\",\n \"moreInfo\": \"et\",\n \"error\": [\n  {\n   \"code\": \"velit et\",\n   \"message\": \"nulla labore deserunt non sed\"\n  },\n  {\n   \"code\": \"qui cupidatat officia\",\n   \"message\": \"cupidatat esse\"\n  }\n ]\n}"
						},
						{
							"name": "Not Found.\nRequested API does not exist.\n",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Validator for conditional requests; based on ETag.\n",
										"key": "If-Match",
										"value": "<string>"
									},
									{
										"description": "Validator for conditional requests; based on Last Modified header.\n",
										"key": "If-Unmodified-Since",
										"value": "<string>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/apis/change-lifecycle?action=<string>&lifecycleChecklist=<string>&apiId=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"apis",
										"change-lifecycle"
									],
									"query": [
										{
											"key": "action",
											"value": "<string>"
										},
										{
											"key": "lifecycleChecklist",
											"value": "<string>"
										},
										{
											"key": "apiId",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": -68757475,\n \"message\": \"voluptate culpa qui minim consectetur\",\n \"description\": \"eu laboris minim\",\n \"moreInfo\": \"et\",\n \"error\": [\n  {\n   \"code\": \"velit et\",\n   \"message\": \"nulla labore deserunt non sed\"\n  },\n  {\n   \"code\": \"qui cupidatat officia\",\n   \"message\": \"cupidatat esse\"\n  }\n ]\n}"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "subscriptions",
			"item": [
				{
					"name": "Get All Subscriptions",
					"request": {
						"method": "GET",
						"header": [
							{
								"description": "Media types acceptable for the response. Default is JSON.\n",
								"key": "Accept",
								"value": "JSON"
							},
							{
								"description": "Validator for conditional requests; based on the ETag of the formerly retrieved\nvariant of the resourec.\n",
								"key": "If-None-Match",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/subscriptions?apiId=<string>&limit=25&offset=0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"subscriptions"
							],
							"query": [
								{
									"key": "apiId",
									"value": "<string>",
									"description": "(Required) **API ID** consisting of the **UUID** of the API.\nThe combination of the provider of the API, name of the API and the version is also accepted as a valid API I.\nShould be formatted as **provider-name-version**.\n"
								},
								{
									"key": "limit",
									"value": "25",
									"description": "Maximum size of resource array to return.\n"
								},
								{
									"key": "offset",
									"value": "0",
									"description": "Starting point within the complete list of items qualified.\n"
								}
							]
						},
						"description": "Get subscription list.\nThe API Identifier and corresponding Application Identifier\nthe subscriptions of which are to be returned are passed as parameters.\n"
					},
					"response": [
						{
							"name": "Not Acceptable. The requested media type is not supported\n",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Media types acceptable for the response. Default is JSON.\n",
										"key": "Accept",
										"value": "JSON"
									},
									{
										"description": "Validator for conditional requests; based on the ETag of the formerly retrieved\nvariant of the resourec.\n",
										"key": "If-None-Match",
										"value": "<string>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/subscriptions?apiId=<string>&limit=25&offset=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"subscriptions"
									],
									"query": [
										{
											"key": "apiId",
											"value": "<string>"
										},
										{
											"key": "limit",
											"value": "25"
										},
										{
											"key": "offset",
											"value": "0"
										}
									]
								}
							},
							"status": "Not Acceptable",
							"code": 406,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": -68757475,\n \"message\": \"voluptate culpa qui minim consectetur\",\n \"description\": \"eu laboris minim\",\n \"moreInfo\": \"et\",\n \"error\": [\n  {\n   \"code\": \"velit et\",\n   \"message\": \"nulla labore deserunt non sed\"\n  },\n  {\n   \"code\": \"qui cupidatat officia\",\n   \"message\": \"cupidatat esse\"\n  }\n ]\n}"
						},
						{
							"name": "Not Modified.\nEmpty body because the client has already the latest version of the requested resource.\n",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Media types acceptable for the response. Default is JSON.\n",
										"key": "Accept",
										"value": "JSON"
									},
									{
										"description": "Validator for conditional requests; based on the ETag of the formerly retrieved\nvariant of the resourec.\n",
										"key": "If-None-Match",
										"value": "<string>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/subscriptions?apiId=<string>&limit=25&offset=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"subscriptions"
									],
									"query": [
										{
											"key": "apiId",
											"value": "<string>"
										},
										{
											"key": "limit",
											"value": "25"
										},
										{
											"key": "offset",
											"value": "0"
										}
									]
								}
							},
							"status": "Not Modified",
							"code": 304,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "OK.\nSubscription list returned.\n",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Media types acceptable for the response. Default is JSON.\n",
										"key": "Accept",
										"value": "JSON"
									},
									{
										"description": "Validator for conditional requests; based on the ETag of the formerly retrieved\nvariant of the resourec.\n",
										"key": "If-None-Match",
										"value": "<string>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/subscriptions?apiId=<string>&limit=25&offset=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"subscriptions"
									],
									"query": [
										{
											"key": "apiId",
											"value": "<string>"
										},
										{
											"key": "limit",
											"value": "25"
										},
										{
											"key": "offset",
											"value": "0"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "ETag",
									"value": "dolore reprehenderi",
									"description": "Entity Tag of the response resource.\nUsed by caches, or in conditional requests.\n"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"count\": 1,\n \"next\": \"/subscriptions?limit=1&offset=2&apiId=01234567-0123-0123-0123-012345678901&groupId=\",\n \"previous\": \"/subscriptions?limit=1&offset=0&apiId=01234567-0123-0123-0123-012345678901&groupId=\",\n \"list\": [\n  {\n   \"applicationId\": \"01234567-0123-0123-0123-012345678901\",\n   \"apiIdentifier\": \"01234567-0123-0123-0123-012345678901\",\n   \"tier\": \"Unlimited\",\n   \"subscriptionId\": \"01234567-0123-0123-0123-012345678901\",\n   \"status\": \"UNBLOCKED\"\n  },\n  {\n   \"applicationId\": \"01234567-0123-0123-0123-012345678901\",\n   \"apiIdentifier\": \"01234567-0123-0123-0123-012345678901\",\n   \"tier\": \"Unlimited\",\n   \"subscriptionId\": \"01234567-0123-0123-0123-012345678901\",\n   \"status\": \"UNBLOCKED\"\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "Get a Subscription",
					"request": {
						"method": "GET",
						"header": [
							{
								"description": "Media types acceptable for the response. Default is JSON.\n",
								"key": "Accept",
								"value": "JSON"
							},
							{
								"description": "Validator for conditional requests; based on the ETag of the formerly retrieved\nvariant of the resourec.\n",
								"key": "If-None-Match",
								"value": "<string>"
							},
							{
								"description": "Validator for conditional requests; based on Last Modified header of the\nformerly retrieved variant of the resource.\n",
								"key": "If-Modified-Since",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/subscriptions/:subscriptionId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"subscriptions",
								":subscriptionId"
							],
							"variable": [
								{
									"id": "c6dabd53-a65e-42bd-8ee9-9df7e31c74bc",
									"key": "subscriptionId",
									"value": "<string>",
									"type": "string",
									"description": "(Required) Subscription Id\n"
								}
							]
						},
						"description": "Get subscription details\n"
					},
					"response": [
						{
							"name": "OK.\nSubscription returned\n",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Media types acceptable for the response. Default is JSON.\n",
										"key": "Accept",
										"value": "JSON"
									},
									{
										"description": "Validator for conditional requests; based on the ETag of the formerly retrieved\nvariant of the resourec.\n",
										"key": "If-None-Match",
										"value": "<string>"
									},
									{
										"description": "Validator for conditional requests; based on Last Modified header of the\nformerly retrieved variant of the resource.\n",
										"key": "If-Modified-Since",
										"value": "<string>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/subscriptions/:subscriptionId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"subscriptions",
										":subscriptionId"
									],
									"variable": [
										{
											"key": "subscriptionId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "ETag",
									"value": "dolore reprehenderi",
									"description": "Entity Tag of the response resource. Used by caches, or in conditional requests."
								},
								{
									"key": "Last-Modified",
									"value": "dolore reprehenderi",
									"description": "Date and time the resource has been modifed the last time. Used by caches, or in conditional reuquests."
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"applicationId\": \"01234567-0123-0123-0123-012345678901\",\n \"apiIdentifier\": \"01234567-0123-0123-0123-012345678901\",\n \"tier\": \"Unlimited\",\n \"subscriptionId\": \"01234567-0123-0123-0123-012345678901\",\n \"status\": \"UNBLOCKED\"\n}"
						},
						{
							"name": "Not Found.\nRequested Subscription does not exist.\n",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Media types acceptable for the response. Default is JSON.\n",
										"key": "Accept",
										"value": "JSON"
									},
									{
										"description": "Validator for conditional requests; based on the ETag of the formerly retrieved\nvariant of the resourec.\n",
										"key": "If-None-Match",
										"value": "<string>"
									},
									{
										"description": "Validator for conditional requests; based on Last Modified header of the\nformerly retrieved variant of the resource.\n",
										"key": "If-Modified-Since",
										"value": "<string>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/subscriptions/:subscriptionId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"subscriptions",
										":subscriptionId"
									],
									"variable": [
										{
											"key": "subscriptionId"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": -68757475,\n \"message\": \"voluptate culpa qui minim consectetur\",\n \"description\": \"eu laboris minim\",\n \"moreInfo\": \"et\",\n \"error\": [\n  {\n   \"code\": \"velit et\",\n   \"message\": \"nulla labore deserunt non sed\"\n  },\n  {\n   \"code\": \"qui cupidatat officia\",\n   \"message\": \"cupidatat esse\"\n  }\n ]\n}"
						},
						{
							"name": "Not Modified.\nEmpty body because the client has already the latest version of the requested resource.\n",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Media types acceptable for the response. Default is JSON.\n",
										"key": "Accept",
										"value": "JSON"
									},
									{
										"description": "Validator for conditional requests; based on the ETag of the formerly retrieved\nvariant of the resourec.\n",
										"key": "If-None-Match",
										"value": "<string>"
									},
									{
										"description": "Validator for conditional requests; based on Last Modified header of the\nformerly retrieved variant of the resource.\n",
										"key": "If-Modified-Since",
										"value": "<string>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/subscriptions/:subscriptionId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"subscriptions",
										":subscriptionId"
									],
									"variable": [
										{
											"key": "subscriptionId"
										}
									]
								}
							},
							"status": "Not Modified",
							"code": 304,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Block a subscription",
					"request": {
						"method": "POST",
						"header": [
							{
								"description": "Validator for conditional requests; based on ETag.\n",
								"key": "If-Match",
								"value": "<string>"
							},
							{
								"description": "Validator for conditional requests; based on Last Modified header.\n",
								"key": "If-Unmodified-Since",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/subscriptions/block-subscription?subscriptionId=<string>&blockState=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"subscriptions",
								"block-subscription"
							],
							"query": [
								{
									"key": "subscriptionId",
									"value": "<string>",
									"description": "(Required) Subscription Id\n"
								},
								{
									"key": "blockState",
									"value": "<string>",
									"description": "(Required) Subscription block state.\n"
								}
							]
						},
						"description": "Block a subscription.\n"
					},
					"response": [
						{
							"name": "Not Found.\nRequested subscription does not exist.\n",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Validator for conditional requests; based on ETag.\n",
										"key": "If-Match",
										"value": "<string>"
									},
									{
										"description": "Validator for conditional requests; based on Last Modified header.\n",
										"key": "If-Unmodified-Since",
										"value": "<string>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/subscriptions/block-subscription?subscriptionId=<string>&blockState=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"subscriptions",
										"block-subscription"
									],
									"query": [
										{
											"key": "subscriptionId",
											"value": "<string>"
										},
										{
											"key": "blockState",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": -68757475,\n \"message\": \"voluptate culpa qui minim consectetur\",\n \"description\": \"eu laboris minim\",\n \"moreInfo\": \"et\",\n \"error\": [\n  {\n   \"code\": \"velit et\",\n   \"message\": \"nulla labore deserunt non sed\"\n  },\n  {\n   \"code\": \"qui cupidatat officia\",\n   \"message\": \"cupidatat esse\"\n  }\n ]\n}"
						},
						{
							"name": "Precondition Failed.\nThe request has not been performed because one of the preconditions is not met.\n",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Validator for conditional requests; based on ETag.\n",
										"key": "If-Match",
										"value": "<string>"
									},
									{
										"description": "Validator for conditional requests; based on Last Modified header.\n",
										"key": "If-Unmodified-Since",
										"value": "<string>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/subscriptions/block-subscription?subscriptionId=<string>&blockState=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"subscriptions",
										"block-subscription"
									],
									"query": [
										{
											"key": "subscriptionId",
											"value": "<string>"
										},
										{
											"key": "blockState",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Precondition Failed",
							"code": 412,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": -68757475,\n \"message\": \"voluptate culpa qui minim consectetur\",\n \"description\": \"eu laboris minim\",\n \"moreInfo\": \"et\",\n \"error\": [\n  {\n   \"code\": \"velit et\",\n   \"message\": \"nulla labore deserunt non sed\"\n  },\n  {\n   \"code\": \"qui cupidatat officia\",\n   \"message\": \"cupidatat esse\"\n  }\n ]\n}"
						},
						{
							"name": "OK.\nSubscription was blocked successfully.\n",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Validator for conditional requests; based on ETag.\n",
										"key": "If-Match",
										"value": "<string>"
									},
									{
										"description": "Validator for conditional requests; based on Last Modified header.\n",
										"key": "If-Unmodified-Since",
										"value": "<string>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/subscriptions/block-subscription?subscriptionId=<string>&blockState=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"subscriptions",
										"block-subscription"
									],
									"query": [
										{
											"key": "subscriptionId",
											"value": "<string>"
										},
										{
											"key": "blockState",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "ETag",
									"value": "dolore reprehenderi",
									"description": "Entity Tag of the blocked subscription.\nUsed by caches, or in conditional request.\n"
								},
								{
									"key": "Last-Modified",
									"value": "dolore reprehenderi",
									"description": "Date and time the subscription has been blocked.\nUsed by caches, or in conditional requests.\n"
								},
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad Request.\nInvalid request or validation error\n",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Validator for conditional requests; based on ETag.\n",
										"key": "If-Match",
										"value": "<string>"
									},
									{
										"description": "Validator for conditional requests; based on Last Modified header.\n",
										"key": "If-Unmodified-Since",
										"value": "<string>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/subscriptions/block-subscription?subscriptionId=<string>&blockState=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"subscriptions",
										"block-subscription"
									],
									"query": [
										{
											"key": "subscriptionId",
											"value": "<string>"
										},
										{
											"key": "blockState",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": -68757475,\n \"message\": \"voluptate culpa qui minim consectetur\",\n \"description\": \"eu laboris minim\",\n \"moreInfo\": \"et\",\n \"error\": [\n  {\n   \"code\": \"velit et\",\n   \"message\": \"nulla labore deserunt non sed\"\n  },\n  {\n   \"code\": \"qui cupidatat officia\",\n   \"message\": \"cupidatat esse\"\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "Unblock a Subscription",
					"request": {
						"method": "POST",
						"header": [
							{
								"description": "Validator for conditional requests; based on ETag.\n",
								"key": "If-Match",
								"value": "<string>"
							},
							{
								"description": "Validator for conditional requests; based on Last Modified header.\n",
								"key": "If-Unmodified-Since",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/subscriptions/unblock-subscription?subscriptionId=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"subscriptions",
								"unblock-subscription"
							],
							"query": [
								{
									"key": "subscriptionId",
									"value": "<string>",
									"description": "(Required) Subscription Id\n"
								}
							]
						},
						"description": "Unblock a subscription.\n"
					},
					"response": [
						{
							"name": "Bad Request.\nInvalid request or validation error\n",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Validator for conditional requests; based on ETag.\n",
										"key": "If-Match",
										"value": "<string>"
									},
									{
										"description": "Validator for conditional requests; based on Last Modified header.\n",
										"key": "If-Unmodified-Since",
										"value": "<string>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/subscriptions/unblock-subscription?subscriptionId=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"subscriptions",
										"unblock-subscription"
									],
									"query": [
										{
											"key": "subscriptionId",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": -68757475,\n \"message\": \"voluptate culpa qui minim consectetur\",\n \"description\": \"eu laboris minim\",\n \"moreInfo\": \"et\",\n \"error\": [\n  {\n   \"code\": \"velit et\",\n   \"message\": \"nulla labore deserunt non sed\"\n  },\n  {\n   \"code\": \"qui cupidatat officia\",\n   \"message\": \"cupidatat esse\"\n  }\n ]\n}"
						},
						{
							"name": "Not Found.\nRequested subscription does not exist.\n",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Validator for conditional requests; based on ETag.\n",
										"key": "If-Match",
										"value": "<string>"
									},
									{
										"description": "Validator for conditional requests; based on Last Modified header.\n",
										"key": "If-Unmodified-Since",
										"value": "<string>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/subscriptions/unblock-subscription?subscriptionId=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"subscriptions",
										"unblock-subscription"
									],
									"query": [
										{
											"key": "subscriptionId",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": -68757475,\n \"message\": \"voluptate culpa qui minim consectetur\",\n \"description\": \"eu laboris minim\",\n \"moreInfo\": \"et\",\n \"error\": [\n  {\n   \"code\": \"velit et\",\n   \"message\": \"nulla labore deserunt non sed\"\n  },\n  {\n   \"code\": \"qui cupidatat officia\",\n   \"message\": \"cupidatat esse\"\n  }\n ]\n}"
						},
						{
							"name": "Precondition Failed.\nThe request has not been performed because one of the preconditions is not met.\n",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Validator for conditional requests; based on ETag.\n",
										"key": "If-Match",
										"value": "<string>"
									},
									{
										"description": "Validator for conditional requests; based on Last Modified header.\n",
										"key": "If-Unmodified-Since",
										"value": "<string>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/subscriptions/unblock-subscription?subscriptionId=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"subscriptions",
										"unblock-subscription"
									],
									"query": [
										{
											"key": "subscriptionId",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Precondition Failed",
							"code": 412,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": -68757475,\n \"message\": \"voluptate culpa qui minim consectetur\",\n \"description\": \"eu laboris minim\",\n \"moreInfo\": \"et\",\n \"error\": [\n  {\n   \"code\": \"velit et\",\n   \"message\": \"nulla labore deserunt non sed\"\n  },\n  {\n   \"code\": \"qui cupidatat officia\",\n   \"message\": \"cupidatat esse\"\n  }\n ]\n}"
						},
						{
							"name": "OK.\nSubscription was unblocked successfully.\n",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Validator for conditional requests; based on ETag.\n",
										"key": "If-Match",
										"value": "<string>"
									},
									{
										"description": "Validator for conditional requests; based on Last Modified header.\n",
										"key": "If-Unmodified-Since",
										"value": "<string>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/subscriptions/unblock-subscription?subscriptionId=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"subscriptions",
										"unblock-subscription"
									],
									"query": [
										{
											"key": "subscriptionId",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "ETag",
									"value": "dolore reprehenderi",
									"description": "Entity Tag of the unblocked subscription.\nUsed by caches, or in conditional request.\n"
								},
								{
									"key": "Last-Modified",
									"value": "dolore reprehenderi",
									"description": "Date and time the subscription has been unblocked.\nUsed by caches, or in conditional requests.\n"
								},
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "tiers",
			"item": [
				{
					"name": "{tier Level}",
					"item": [
						{
							"name": "{tier Name}",
							"item": [
								{
									"name": "Get a Tier",
									"request": {
										"method": "GET",
										"header": [
											{
												"description": "Media types acceptable for the response. Default is JSON.\n",
												"key": "Accept",
												"value": "JSON"
											},
											{
												"description": "Validator for conditional requests; based on the ETag of the formerly retrieved\nvariant of the resourec.\n",
												"key": "If-None-Match",
												"value": "<string>"
											},
											{
												"description": "Validator for conditional requests; based on Last Modified header of the\nformerly retrieved variant of the resource.\n",
												"key": "If-Modified-Since",
												"value": "<string>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/tiers/:tierLevel/:tierName",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tiers",
												":tierLevel",
												":tierName"
											],
											"variable": [
												{
													"id": "66b1ec78-abe4-4682-810d-02695bcaecb3",
													"key": "tierName",
													"value": "<string>",
													"type": "string",
													"description": "(Required) Tier name\n"
												},
												{
													"id": "738906c3-1785-4047-a005-1af82441de60",
													"key": "tierLevel",
													"value": "<string>",
													"type": "string",
													"description": "(Required) List API or Application or Resource type tiers.\n"
												}
											]
										},
										"description": "Get tier details\n"
									},
									"response": [
										{
											"name": "OK.\nTier returned\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Media types acceptable for the response. Default is JSON.\n",
														"key": "Accept",
														"value": "JSON"
													},
													{
														"description": "Validator for conditional requests; based on the ETag of the formerly retrieved\nvariant of the resourec.\n",
														"key": "If-None-Match",
														"value": "<string>"
													},
													{
														"description": "Validator for conditional requests; based on Last Modified header of the\nformerly retrieved variant of the resource.\n",
														"key": "If-Modified-Since",
														"value": "<string>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/tiers/:tierLevel/:tierName",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"tiers",
														":tierLevel",
														":tierName"
													],
													"variable": [
														{
															"key": "tierLevel"
														},
														{
															"key": "tierName"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "ETag",
													"value": "dolore reprehenderi",
													"description": "Entity Tag of the response resource.\nUsed by caches, or in conditional requests.\n"
												},
												{
													"key": "Last-Modified",
													"value": "dolore reprehenderi",
													"description": "Date and time the resource has been modifed the last time.\nUsed by caches, or in conditional reuquests.\n"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"name\": \"Platinum\",\n \"tierPlan\": \"FREE\",\n \"requestCount\": 50,\n \"unitTime\": 60000,\n \"stopOnQuotaReach\": true,\n \"description\": \"Allows 50 request(s) per minute.\",\n \"tierLevel\": \"api\",\n \"attributes\": \"<string>\",\n \"timeUnit\": \"min\"\n}"
										},
										{
											"name": "Not Found.\nRequested Tier does not exist.\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Media types acceptable for the response. Default is JSON.\n",
														"key": "Accept",
														"value": "JSON"
													},
													{
														"description": "Validator for conditional requests; based on the ETag of the formerly retrieved\nvariant of the resourec.\n",
														"key": "If-None-Match",
														"value": "<string>"
													},
													{
														"description": "Validator for conditional requests; based on Last Modified header of the\nformerly retrieved variant of the resource.\n",
														"key": "If-Modified-Since",
														"value": "<string>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/tiers/:tierLevel/:tierName",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"tiers",
														":tierLevel",
														":tierName"
													],
													"variable": [
														{
															"key": "tierLevel"
														},
														{
															"key": "tierName"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -68757475,\n \"message\": \"voluptate culpa qui minim consectetur\",\n \"description\": \"eu laboris minim\",\n \"moreInfo\": \"et\",\n \"error\": [\n  {\n   \"code\": \"velit et\",\n   \"message\": \"nulla labore deserunt non sed\"\n  },\n  {\n   \"code\": \"qui cupidatat officia\",\n   \"message\": \"cupidatat esse\"\n  }\n ]\n}"
										},
										{
											"name": "Not Acceptable.\nThe requested media type is not supported.\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Media types acceptable for the response. Default is JSON.\n",
														"key": "Accept",
														"value": "JSON"
													},
													{
														"description": "Validator for conditional requests; based on the ETag of the formerly retrieved\nvariant of the resourec.\n",
														"key": "If-None-Match",
														"value": "<string>"
													},
													{
														"description": "Validator for conditional requests; based on Last Modified header of the\nformerly retrieved variant of the resource.\n",
														"key": "If-Modified-Since",
														"value": "<string>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/tiers/:tierLevel/:tierName",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"tiers",
														":tierLevel",
														":tierName"
													],
													"variable": [
														{
															"key": "tierLevel"
														},
														{
															"key": "tierName"
														}
													]
												}
											},
											"status": "Not Acceptable",
											"code": 406,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -68757475,\n \"message\": \"voluptate culpa qui minim consectetur\",\n \"description\": \"eu laboris minim\",\n \"moreInfo\": \"et\",\n \"error\": [\n  {\n   \"code\": \"velit et\",\n   \"message\": \"nulla labore deserunt non sed\"\n  },\n  {\n   \"code\": \"qui cupidatat officia\",\n   \"message\": \"cupidatat esse\"\n  }\n ]\n}"
										},
										{
											"name": "Not Modified.\nEmpty body because the client has already the latest version of the requested resource.\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Media types acceptable for the response. Default is JSON.\n",
														"key": "Accept",
														"value": "JSON"
													},
													{
														"description": "Validator for conditional requests; based on the ETag of the formerly retrieved\nvariant of the resourec.\n",
														"key": "If-None-Match",
														"value": "<string>"
													},
													{
														"description": "Validator for conditional requests; based on Last Modified header of the\nformerly retrieved variant of the resource.\n",
														"key": "If-Modified-Since",
														"value": "<string>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/tiers/:tierLevel/:tierName",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"tiers",
														":tierLevel",
														":tierName"
													],
													"variable": [
														{
															"key": "tierLevel"
														},
														{
															"key": "tierName"
														}
													]
												}
											},
											"status": "Not Modified",
											"code": 304,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Update a Tier",
									"request": {
										"method": "PUT",
										"header": [
											{
												"description": "(Required) Media type of the entity in the body. Default is JSON.\n",
												"key": "Content-Type",
												"value": "JSON"
											},
											{
												"description": "Validator for conditional requests; based on ETag.\n",
												"key": "If-Match",
												"value": "<string>"
											},
											{
												"description": "Validator for conditional requests; based on Last Modified header.\n",
												"key": "If-Unmodified-Since",
												"value": "<string>"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"<string>\",\n    \"tierPlan\": \"<string>\",\n    \"requestCount\": \"<integer>\",\n    \"unitTime\": \"<integer>\",\n    \"stopOnQuotaReach\": \"<boolean>\",\n    \"description\": \"<string>\",\n    \"tierLevel\": \"<string>\",\n    \"attributes\": \"<string>\",\n    \"timeUnit\": \"<string>\"\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/tiers/:tierLevel/:tierName",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tiers",
												":tierLevel",
												":tierName"
											],
											"variable": [
												{
													"id": "c5a30e66-7724-4e9b-bde8-f59328b17246",
													"key": "tierName",
													"value": "<string>",
													"type": "string",
													"description": "(Required) Tier name\n"
												},
												{
													"id": "c2359eea-2703-4892-bfad-0f95724a5b44",
													"key": "tierLevel",
													"value": "<string>",
													"type": "string",
													"description": "(Required) List API or Application or Resource type tiers.\n"
												}
											]
										},
										"description": "Update tier details\n"
									},
									"response": [
										{
											"name": "Not Found.\nThe resource to be updated does not exist.\n",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "(Required) Media type of the entity in the body. Default is JSON.\n",
														"key": "Content-Type",
														"value": "JSON"
													},
													{
														"description": "Validator for conditional requests; based on ETag.\n",
														"key": "If-Match",
														"value": "<string>"
													},
													{
														"description": "Validator for conditional requests; based on Last Modified header.\n",
														"key": "If-Unmodified-Since",
														"value": "<string>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"Platinum\",\n    \"tierPlan\": \"FREE\",\n    \"requestCount\": 50,\n    \"unitTime\": 60000,\n    \"stopOnQuotaReach\": true,\n    \"description\": \"Allows 50 request(s) per minute.\",\n    \"tierLevel\": \"api\",\n    \"attributes\": \"<string>\",\n    \"timeUnit\": \"min\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/tiers/:tierLevel/:tierName",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"tiers",
														":tierLevel",
														":tierName"
													],
													"variable": [
														{
															"key": "tierLevel"
														},
														{
															"key": "tierName"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -68757475,\n \"message\": \"voluptate culpa qui minim consectetur\",\n \"description\": \"eu laboris minim\",\n \"moreInfo\": \"et\",\n \"error\": [\n  {\n   \"code\": \"velit et\",\n   \"message\": \"nulla labore deserunt non sed\"\n  },\n  {\n   \"code\": \"qui cupidatat officia\",\n   \"message\": \"cupidatat esse\"\n  }\n ]\n}"
										},
										{
											"name": "Bad Request.\nInvalid request or validation error.\n",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "(Required) Media type of the entity in the body. Default is JSON.\n",
														"key": "Content-Type",
														"value": "JSON"
													},
													{
														"description": "Validator for conditional requests; based on ETag.\n",
														"key": "If-Match",
														"value": "<string>"
													},
													{
														"description": "Validator for conditional requests; based on Last Modified header.\n",
														"key": "If-Unmodified-Since",
														"value": "<string>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"Platinum\",\n    \"tierPlan\": \"FREE\",\n    \"requestCount\": 50,\n    \"unitTime\": 60000,\n    \"stopOnQuotaReach\": true,\n    \"description\": \"Allows 50 request(s) per minute.\",\n    \"tierLevel\": \"api\",\n    \"attributes\": \"<string>\",\n    \"timeUnit\": \"min\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/tiers/:tierLevel/:tierName",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"tiers",
														":tierLevel",
														":tierName"
													],
													"variable": [
														{
															"key": "tierLevel"
														},
														{
															"key": "tierName"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -68757475,\n \"message\": \"voluptate culpa qui minim consectetur\",\n \"description\": \"eu laboris minim\",\n \"moreInfo\": \"et\",\n \"error\": [\n  {\n   \"code\": \"velit et\",\n   \"message\": \"nulla labore deserunt non sed\"\n  },\n  {\n   \"code\": \"qui cupidatat officia\",\n   \"message\": \"cupidatat esse\"\n  }\n ]\n}"
										},
										{
											"name": "Precondition Failed.\nThe request has not been performed because one of the preconditions is not met.\n",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "(Required) Media type of the entity in the body. Default is JSON.\n",
														"key": "Content-Type",
														"value": "JSON"
													},
													{
														"description": "Validator for conditional requests; based on ETag.\n",
														"key": "If-Match",
														"value": "<string>"
													},
													{
														"description": "Validator for conditional requests; based on Last Modified header.\n",
														"key": "If-Unmodified-Since",
														"value": "<string>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"Platinum\",\n    \"tierPlan\": \"FREE\",\n    \"requestCount\": 50,\n    \"unitTime\": 60000,\n    \"stopOnQuotaReach\": true,\n    \"description\": \"Allows 50 request(s) per minute.\",\n    \"tierLevel\": \"api\",\n    \"attributes\": \"<string>\",\n    \"timeUnit\": \"min\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/tiers/:tierLevel/:tierName",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"tiers",
														":tierLevel",
														":tierName"
													],
													"variable": [
														{
															"key": "tierLevel"
														},
														{
															"key": "tierName"
														}
													]
												}
											},
											"status": "Precondition Failed",
											"code": 412,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -68757475,\n \"message\": \"voluptate culpa qui minim consectetur\",\n \"description\": \"eu laboris minim\",\n \"moreInfo\": \"et\",\n \"error\": [\n  {\n   \"code\": \"velit et\",\n   \"message\": \"nulla labore deserunt non sed\"\n  },\n  {\n   \"code\": \"qui cupidatat officia\",\n   \"message\": \"cupidatat esse\"\n  }\n ]\n}"
										},
										{
											"name": "OK.\nSubscription updated.\n",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "(Required) Media type of the entity in the body. Default is JSON.\n",
														"key": "Content-Type",
														"value": "JSON"
													},
													{
														"description": "Validator for conditional requests; based on ETag.\n",
														"key": "If-Match",
														"value": "<string>"
													},
													{
														"description": "Validator for conditional requests; based on Last Modified header.\n",
														"key": "If-Unmodified-Since",
														"value": "<string>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"Platinum\",\n    \"tierPlan\": \"FREE\",\n    \"requestCount\": 50,\n    \"unitTime\": 60000,\n    \"stopOnQuotaReach\": true,\n    \"description\": \"Allows 50 request(s) per minute.\",\n    \"tierLevel\": \"api\",\n    \"attributes\": \"<string>\",\n    \"timeUnit\": \"min\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/tiers/:tierLevel/:tierName",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"tiers",
														":tierLevel",
														":tierName"
													],
													"variable": [
														{
															"key": "tierLevel"
														},
														{
															"key": "tierName"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Location",
													"value": "dolore reprehenderi",
													"description": "The URL of the newly created resource.\n"
												},
												{
													"key": "ETag",
													"value": "dolore reprehenderi",
													"description": "Entity Tag of the response resource.\nUsed by caches, or in conditional request.\n"
												},
												{
													"key": "Last-Modified",
													"value": "dolore reprehenderi",
													"description": "Date and time the resource has been modifed the last time.\nUsed by caches, or in conditional reuquests.\n"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"name\": \"Platinum\",\n \"tierPlan\": \"FREE\",\n \"requestCount\": 50,\n \"unitTime\": 60000,\n \"stopOnQuotaReach\": true,\n \"description\": \"Allows 50 request(s) per minute.\",\n \"tierLevel\": \"api\",\n \"attributes\": \"<string>\",\n \"timeUnit\": \"min\"\n}"
										}
									]
								},
								{
									"name": "Delete a Tier",
									"request": {
										"method": "DELETE",
										"header": [
											{
												"description": "Validator for conditional requests; based on ETag.\n",
												"key": "If-Match",
												"value": "<string>"
											},
											{
												"description": "Validator for conditional requests; based on Last Modified header.\n",
												"key": "If-Unmodified-Since",
												"value": "<string>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/tiers/:tierLevel/:tierName",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tiers",
												":tierLevel",
												":tierName"
											],
											"variable": [
												{
													"id": "817ca816-8e82-49ff-9fa0-5c783f126d97",
													"key": "tierName",
													"value": "<string>",
													"type": "string",
													"description": "(Required) Tier name\n"
												},
												{
													"id": "1ae46dfd-517d-4f23-918c-bd7b8960c7e0",
													"key": "tierLevel",
													"value": "<string>",
													"type": "string",
													"description": "(Required) List API or Application or Resource type tiers.\n"
												}
											]
										},
										"description": "Remove a tier\n"
									},
									"response": [
										{
											"name": "Precondition Failed.\nThe request has not been performed because one of the preconditions is not met.\n",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Validator for conditional requests; based on ETag.\n",
														"key": "If-Match",
														"value": "<string>"
													},
													{
														"description": "Validator for conditional requests; based on Last Modified header.\n",
														"key": "If-Unmodified-Since",
														"value": "<string>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/tiers/:tierLevel/:tierName",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"tiers",
														":tierLevel",
														":tierName"
													],
													"variable": [
														{
															"key": "tierLevel"
														},
														{
															"key": "tierName"
														}
													]
												}
											},
											"status": "Precondition Failed",
											"code": 412,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -68757475,\n \"message\": \"voluptate culpa qui minim consectetur\",\n \"description\": \"eu laboris minim\",\n \"moreInfo\": \"et\",\n \"error\": [\n  {\n   \"code\": \"velit et\",\n   \"message\": \"nulla labore deserunt non sed\"\n  },\n  {\n   \"code\": \"qui cupidatat officia\",\n   \"message\": \"cupidatat esse\"\n  }\n ]\n}"
										},
										{
											"name": "OK.\nResource successfully deleted.\n",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Validator for conditional requests; based on ETag.\n",
														"key": "If-Match",
														"value": "<string>"
													},
													{
														"description": "Validator for conditional requests; based on Last Modified header.\n",
														"key": "If-Unmodified-Since",
														"value": "<string>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/tiers/:tierLevel/:tierName",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"tiers",
														":tierLevel",
														":tierName"
													],
													"variable": [
														{
															"key": "tierLevel"
														},
														{
															"key": "tierName"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Not Found.\nResource to be deleted does not exist.\n",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Validator for conditional requests; based on ETag.\n",
														"key": "If-Match",
														"value": "<string>"
													},
													{
														"description": "Validator for conditional requests; based on Last Modified header.\n",
														"key": "If-Unmodified-Since",
														"value": "<string>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/tiers/:tierLevel/:tierName",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"tiers",
														":tierLevel",
														":tierName"
													],
													"variable": [
														{
															"key": "tierLevel"
														},
														{
															"key": "tierName"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": -68757475,\n \"message\": \"voluptate culpa qui minim consectetur\",\n \"description\": \"eu laboris minim\",\n \"moreInfo\": \"et\",\n \"error\": [\n  {\n   \"code\": \"velit et\",\n   \"message\": \"nulla labore deserunt non sed\"\n  },\n  {\n   \"code\": \"qui cupidatat officia\",\n   \"message\": \"cupidatat esse\"\n  }\n ]\n}"
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "List Tiers",
							"request": {
								"method": "GET",
								"header": [
									{
										"description": "Media types acceptable for the response. Default is JSON.\n",
										"key": "Accept",
										"value": "JSON"
									},
									{
										"description": "Validator for conditional requests; based on the ETag of the formerly retrieved\nvariant of the resourec.\n",
										"key": "If-None-Match",
										"value": "<string>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/tiers/:tierLevel?limit=25&offset=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tiers",
										":tierLevel"
									],
									"query": [
										{
											"key": "limit",
											"value": "25",
											"description": "Maximum size of resource array to return.\n"
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Starting point within the complete list of items qualified.\n"
										}
									],
									"variable": [
										{
											"id": "35adefda-a702-4638-857a-ee59e90cb99f",
											"key": "tierLevel",
											"value": "<string>",
											"type": "string",
											"description": "(Required) List API or Application or Resource type tiers.\n"
										}
									]
								},
								"description": "Get available tiers\n"
							},
							"response": [
								{
									"name": "Not Modified.\nEmpty body because the client has already the latest version of the requested resource.\n",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Media types acceptable for the response. Default is JSON.\n",
												"key": "Accept",
												"value": "JSON"
											},
											{
												"description": "Validator for conditional requests; based on the ETag of the formerly retrieved\nvariant of the resourec.\n",
												"key": "If-None-Match",
												"value": "<string>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/tiers/:tierLevel?limit=25&offset=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tiers",
												":tierLevel"
											],
											"query": [
												{
													"key": "limit",
													"value": "25"
												},
												{
													"key": "offset",
													"value": "0"
												}
											],
											"variable": [
												{
													"key": "tierLevel"
												}
											]
										}
									},
									"status": "Not Modified",
									"code": 304,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "OK.\nList of tiers returned.\n",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Media types acceptable for the response. Default is JSON.\n",
												"key": "Accept",
												"value": "JSON"
											},
											{
												"description": "Validator for conditional requests; based on the ETag of the formerly retrieved\nvariant of the resourec.\n",
												"key": "If-None-Match",
												"value": "<string>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/tiers/:tierLevel?limit=25&offset=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tiers",
												":tierLevel"
											],
											"query": [
												{
													"key": "limit",
													"value": "25"
												},
												{
													"key": "offset",
													"value": "0"
												}
											],
											"variable": [
												{
													"key": "tierLevel"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "ETag",
											"value": "dolore reprehenderi",
											"description": "Entity Tag of the response resource.\nUsed by caches, or in conditional requests.\n"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"count\": 1,\n \"next\": \"/tiers/api?limit=1&offset=2\",\n \"previous\": \"/tiers/api?limit=1&offset=0\",\n \"list\": [\n  {\n   \"name\": \"Platinum\",\n   \"tierPlan\": \"FREE\",\n   \"requestCount\": 50,\n   \"unitTime\": 60000,\n   \"stopOnQuotaReach\": true,\n   \"description\": \"Allows 50 request(s) per minute.\",\n   \"tierLevel\": \"api\",\n   \"attributes\": \"labo\",\n   \"timeUnit\": \"min\"\n  },\n  {\n   \"name\": \"Platinum\",\n   \"tierPlan\": \"FREE\",\n   \"requestCount\": 50,\n   \"unitTime\": 60000,\n   \"stopOnQuotaReach\": true,\n   \"description\": \"Allows 50 request(s) per minute.\",\n   \"tierLevel\": \"api\",\n   \"attributes\": \"do sunt laborum ex\",\n   \"timeUnit\": \"min\"\n  }\n ]\n}"
								},
								{
									"name": "Not Acceptable.\nThe requested media type is not supported\n",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Media types acceptable for the response. Default is JSON.\n",
												"key": "Accept",
												"value": "JSON"
											},
											{
												"description": "Validator for conditional requests; based on the ETag of the formerly retrieved\nvariant of the resourec.\n",
												"key": "If-None-Match",
												"value": "<string>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/tiers/:tierLevel?limit=25&offset=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tiers",
												":tierLevel"
											],
											"query": [
												{
													"key": "limit",
													"value": "25"
												},
												{
													"key": "offset",
													"value": "0"
												}
											],
											"variable": [
												{
													"key": "tierLevel"
												}
											]
										}
									},
									"status": "Not Acceptable",
									"code": 406,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -68757475,\n \"message\": \"voluptate culpa qui minim consectetur\",\n \"description\": \"eu laboris minim\",\n \"moreInfo\": \"et\",\n \"error\": [\n  {\n   \"code\": \"velit et\",\n   \"message\": \"nulla labore deserunt non sed\"\n  },\n  {\n   \"code\": \"qui cupidatat officia\",\n   \"message\": \"cupidatat esse\"\n  }\n ]\n}"
								}
							]
						},
						{
							"name": "Add a new Tier",
							"request": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) Media type of the entity in the body. Default is JSON.\n",
										"key": "Content-Type",
										"value": "JSON"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<string>\",\n    \"tierPlan\": \"<string>\",\n    \"requestCount\": \"<integer>\",\n    \"unitTime\": \"<integer>\",\n    \"stopOnQuotaReach\": \"<boolean>\",\n    \"description\": \"<string>\",\n    \"tierLevel\": \"<string>\",\n    \"attributes\": \"<string>\",\n    \"timeUnit\": \"<string>\"\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/tiers/:tierLevel",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tiers",
										":tierLevel"
									],
									"variable": [
										{
											"id": "c702e4b5-5867-4a3f-b5b2-8b23530e9430",
											"key": "tierLevel",
											"value": "<string>",
											"type": "string",
											"description": "(Required) List API or Application or Resource type tiers.\n"
										}
									]
								},
								"description": "Add a new tier\n"
							},
							"response": [
								{
									"name": "Unsupported media type.\nThe entity of the request was in a not supported format.\n",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) Media type of the entity in the body. Default is JSON.\n",
												"key": "Content-Type",
												"value": "JSON"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Platinum\",\n    \"tierPlan\": \"FREE\",\n    \"requestCount\": 50,\n    \"unitTime\": 60000,\n    \"stopOnQuotaReach\": true,\n    \"description\": \"Allows 50 request(s) per minute.\",\n    \"tierLevel\": \"api\",\n    \"attributes\": \"<string>\",\n    \"timeUnit\": \"min\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/tiers/:tierLevel",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tiers",
												":tierLevel"
											],
											"variable": [
												{
													"key": "tierLevel"
												}
											]
										}
									},
									"status": "Unsupported Media Type",
									"code": 415,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Created.\nSuccessful response with the newly created object as entity in the body.\nLocation header contains URL of newly created entity.\n",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) Media type of the entity in the body. Default is JSON.\n",
												"key": "Content-Type",
												"value": "JSON"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Platinum\",\n    \"tierPlan\": \"FREE\",\n    \"requestCount\": 50,\n    \"unitTime\": 60000,\n    \"stopOnQuotaReach\": true,\n    \"description\": \"Allows 50 request(s) per minute.\",\n    \"tierLevel\": \"api\",\n    \"attributes\": \"<string>\",\n    \"timeUnit\": \"min\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/tiers/:tierLevel",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tiers",
												":tierLevel"
											],
											"variable": [
												{
													"key": "tierLevel"
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Location",
											"value": "dolore reprehenderi",
											"description": "Location of the newly created tier.\n"
										},
										{
											"key": "ETag",
											"value": "dolore reprehenderi",
											"description": "Entity Tag of the response resource.\nUsed by caches, or in conditional request'\n"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"name\": \"Platinum\",\n \"tierPlan\": \"FREE\",\n \"requestCount\": 50,\n \"unitTime\": 60000,\n \"stopOnQuotaReach\": true,\n \"description\": \"Allows 50 request(s) per minute.\",\n \"tierLevel\": \"api\",\n \"attributes\": \"<string>\",\n \"timeUnit\": \"min\"\n}"
								},
								{
									"name": "Bad Request.\nInvalid request or validation error\n",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) Media type of the entity in the body. Default is JSON.\n",
												"key": "Content-Type",
												"value": "JSON"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Platinum\",\n    \"tierPlan\": \"FREE\",\n    \"requestCount\": 50,\n    \"unitTime\": 60000,\n    \"stopOnQuotaReach\": true,\n    \"description\": \"Allows 50 request(s) per minute.\",\n    \"tierLevel\": \"api\",\n    \"attributes\": \"<string>\",\n    \"timeUnit\": \"min\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/tiers/:tierLevel",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tiers",
												":tierLevel"
											],
											"variable": [
												{
													"key": "tierLevel"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": -68757475,\n \"message\": \"voluptate culpa qui minim consectetur\",\n \"description\": \"eu laboris minim\",\n \"moreInfo\": \"et\",\n \"error\": [\n  {\n   \"code\": \"velit et\",\n   \"message\": \"nulla labore deserunt non sed\"\n  },\n  {\n   \"code\": \"qui cupidatat officia\",\n   \"message\": \"cupidatat esse\"\n  }\n ]\n}"
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Update Tier Permission",
					"request": {
						"method": "POST",
						"header": [
							{
								"description": "Validator for conditional requests; based on ETag.\n",
								"key": "If-Match",
								"value": "<string>"
							},
							{
								"description": "Validator for conditional requests; based on Last Modified header.\n",
								"key": "If-Unmodified-Since",
								"value": "<string>"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"permissionType\": \"<string>\",\n    \"roles\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/tiers/update-permission?tierName=<string>&tierLevel=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tiers",
								"update-permission"
							],
							"query": [
								{
									"key": "tierName",
									"value": "<string>",
									"description": "(Required) Name of the tier\n"
								},
								{
									"key": "tierLevel",
									"value": "<string>",
									"description": "(Required) List API or Application or Resource type tiers.\n"
								}
							]
						},
						"description": "Update tier permission\n"
					},
					"response": [
						{
							"name": "OK.\nSuccessfully updated tier permissions\n",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Validator for conditional requests; based on ETag.\n",
										"key": "If-Match",
										"value": "<string>"
									},
									{
										"description": "Validator for conditional requests; based on Last Modified header.\n",
										"key": "If-Unmodified-Since",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"permissionType\": \"deny\",\n    \"roles\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/tiers/update-permission?tierName=<string>&tierLevel=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tiers",
										"update-permission"
									],
									"query": [
										{
											"key": "tierName",
											"value": "<string>"
										},
										{
											"key": "tierLevel",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "ETag",
									"value": "dolore reprehenderi",
									"description": "Entity Tag of the modified tier.\n Used by caches, or in conditional request.\n"
								},
								{
									"key": "Last-Modified",
									"value": "dolore reprehenderi",
									"description": "Date and time the tier has been modified.\nUsed by caches, or in conditional requests.\n"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"name\": \"Platinum\",\n  \"tierPlan\": \"FREE\",\n  \"requestCount\": 50,\n  \"unitTime\": 60000,\n  \"stopOnQuotaReach\": true,\n  \"description\": \"Allows 50 request(s) per minute.\",\n  \"tierLevel\": \"api\",\n  \"attributes\": \"<string>\",\n  \"timeUnit\": \"min\"\n },\n {\n  \"name\": \"Platinum\",\n  \"tierPlan\": \"FREE\",\n  \"requestCount\": 50,\n  \"unitTime\": 60000,\n  \"stopOnQuotaReach\": true,\n  \"description\": \"Allows 50 request(s) per minute.\",\n  \"tierLevel\": \"api\",\n  \"attributes\": \"<string>\",\n  \"timeUnit\": \"min\"\n }\n]"
						},
						{
							"name": "Forbidden.\nThe request must be conditional but no condition has been specified.\n",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Validator for conditional requests; based on ETag.\n",
										"key": "If-Match",
										"value": "<string>"
									},
									{
										"description": "Validator for conditional requests; based on Last Modified header.\n",
										"key": "If-Unmodified-Since",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"permissionType\": \"deny\",\n    \"roles\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/tiers/update-permission?tierName=<string>&tierLevel=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tiers",
										"update-permission"
									],
									"query": [
										{
											"key": "tierName",
											"value": "<string>"
										},
										{
											"key": "tierLevel",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": -68757475,\n \"message\": \"voluptate culpa qui minim consectetur\",\n \"description\": \"eu laboris minim\",\n \"moreInfo\": \"et\",\n \"error\": [\n  {\n   \"code\": \"velit et\",\n   \"message\": \"nulla labore deserunt non sed\"\n  },\n  {\n   \"code\": \"qui cupidatat officia\",\n   \"message\": \"cupidatat esse\"\n  }\n ]\n}"
						},
						{
							"name": "Not Found.\nRequested tier does not exist.\n",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Validator for conditional requests; based on ETag.\n",
										"key": "If-Match",
										"value": "<string>"
									},
									{
										"description": "Validator for conditional requests; based on Last Modified header.\n",
										"key": "If-Unmodified-Since",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"permissionType\": \"deny\",\n    \"roles\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/tiers/update-permission?tierName=<string>&tierLevel=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tiers",
										"update-permission"
									],
									"query": [
										{
											"key": "tierName",
											"value": "<string>"
										},
										{
											"key": "tierLevel",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": -68757475,\n \"message\": \"voluptate culpa qui minim consectetur\",\n \"description\": \"eu laboris minim\",\n \"moreInfo\": \"et\",\n \"error\": [\n  {\n   \"code\": \"velit et\",\n   \"message\": \"nulla labore deserunt non sed\"\n  },\n  {\n   \"code\": \"qui cupidatat officia\",\n   \"message\": \"cupidatat esse\"\n  }\n ]\n}"
						},
						{
							"name": "Bad Request.\nInvalid request or validation error.\n",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Validator for conditional requests; based on ETag.\n",
										"key": "If-Match",
										"value": "<string>"
									},
									{
										"description": "Validator for conditional requests; based on Last Modified header.\n",
										"key": "If-Unmodified-Since",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"permissionType\": \"deny\",\n    \"roles\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/tiers/update-permission?tierName=<string>&tierLevel=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tiers",
										"update-permission"
									],
									"query": [
										{
											"key": "tierName",
											"value": "<string>"
										},
										{
											"key": "tierLevel",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": -68757475,\n \"message\": \"voluptate culpa qui minim consectetur\",\n \"description\": \"eu laboris minim\",\n \"moreInfo\": \"et\",\n \"error\": [\n  {\n   \"code\": \"velit et\",\n   \"message\": \"nulla labore deserunt non sed\"\n  },\n  {\n   \"code\": \"qui cupidatat officia\",\n   \"message\": \"cupidatat esse\"\n  }\n ]\n}"
						},
						{
							"name": "Precondition Failed.\nThe request has not been performed because one of the preconditions is not met.\n",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Validator for conditional requests; based on ETag.\n",
										"key": "If-Match",
										"value": "<string>"
									},
									{
										"description": "Validator for conditional requests; based on Last Modified header.\n",
										"key": "If-Unmodified-Since",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"permissionType\": \"deny\",\n    \"roles\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/tiers/update-permission?tierName=<string>&tierLevel=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tiers",
										"update-permission"
									],
									"query": [
										{
											"key": "tierName",
											"value": "<string>"
										},
										{
											"key": "tierLevel",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Precondition Failed",
							"code": 412,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": -68757475,\n \"message\": \"voluptate culpa qui minim consectetur\",\n \"description\": \"eu laboris minim\",\n \"moreInfo\": \"et\",\n \"error\": [\n  {\n   \"code\": \"velit et\",\n   \"message\": \"nulla labore deserunt non sed\"\n  },\n  {\n   \"code\": \"qui cupidatat officia\",\n   \"message\": \"cupidatat esse\"\n  }\n ]\n}"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Get Application",
			"request": {
				"method": "GET",
				"header": [
					{
						"description": "Media types acceptable for the response. Default is JSON.\n",
						"key": "Accept",
						"value": "JSON"
					},
					{
						"description": "Validator for conditional requests; based on the ETag of the formerly retrieved\nvariant of the resourec.\n",
						"key": "If-None-Match",
						"value": "<string>"
					},
					{
						"description": "Validator for conditional requests; based on Last Modified header of the\nformerly retrieved variant of the resource.\n",
						"key": "If-Modified-Since",
						"value": "<string>"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/applications/:applicationId",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"applications",
						":applicationId"
					],
					"variable": [
						{
							"id": "34f83d45-a67e-45d8-b6bc-a08258cb33ce",
							"key": "applicationId",
							"value": "<string>",
							"type": "string",
							"description": "(Required) **Application Identifier** consisting of the UUID of the Application.\n"
						}
					]
				},
				"description": "Get application details\n"
			},
			"response": [
				{
					"name": "Not Modified.\nEmpty body because the client has already the latest version of the requested resource.\n",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Media types acceptable for the response. Default is JSON.\n",
								"key": "Accept",
								"value": "JSON"
							},
							{
								"description": "Validator for conditional requests; based on the ETag of the formerly retrieved\nvariant of the resourec.\n",
								"key": "If-None-Match",
								"value": "<string>"
							},
							{
								"description": "Validator for conditional requests; based on Last Modified header of the\nformerly retrieved variant of the resource.\n",
								"key": "If-Modified-Since",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/applications/:applicationId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"applications",
								":applicationId"
							],
							"variable": [
								{
									"key": "applicationId"
								}
							]
						}
					},
					"status": "Not Modified",
					"code": 304,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Not Found.\nRequested application does not exist.\n",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Media types acceptable for the response. Default is JSON.\n",
								"key": "Accept",
								"value": "JSON"
							},
							{
								"description": "Validator for conditional requests; based on the ETag of the formerly retrieved\nvariant of the resourec.\n",
								"key": "If-None-Match",
								"value": "<string>"
							},
							{
								"description": "Validator for conditional requests; based on Last Modified header of the\nformerly retrieved variant of the resource.\n",
								"key": "If-Modified-Since",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/applications/:applicationId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"applications",
								":applicationId"
							],
							"variable": [
								{
									"key": "applicationId"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n \"code\": -68757475,\n \"message\": \"voluptate culpa qui minim consectetur\",\n \"description\": \"eu laboris minim\",\n \"moreInfo\": \"et\",\n \"error\": [\n  {\n   \"code\": \"velit et\",\n   \"message\": \"nulla labore deserunt non sed\"\n  },\n  {\n   \"code\": \"qui cupidatat officia\",\n   \"message\": \"cupidatat esse\"\n  }\n ]\n}"
				},
				{
					"name": "OK.\nApplication returned.\n",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Media types acceptable for the response. Default is JSON.\n",
								"key": "Accept",
								"value": "JSON"
							},
							{
								"description": "Validator for conditional requests; based on the ETag of the formerly retrieved\nvariant of the resourec.\n",
								"key": "If-None-Match",
								"value": "<string>"
							},
							{
								"description": "Validator for conditional requests; based on Last Modified header of the\nformerly retrieved variant of the resource.\n",
								"key": "If-Modified-Since",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/applications/:applicationId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"applications",
								":applicationId"
							],
							"variable": [
								{
									"key": "applicationId"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "ETag",
							"value": "dolore reprehenderi",
							"description": "Entity Tag of the response resource. Used by caches, or in conditional requests.\n"
						},
						{
							"key": "Last-Modified",
							"value": "dolore reprehenderi",
							"description": "Date and time the resource has been modifed the last time.\nUsed by caches, or in conditional reuquests.\n"
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n \"name\": \"CalculatorApp\",\n \"throttlingTier\": \"Unlimited\",\n \"applicationId\": \"01234567-0123-0123-0123-012345678901\",\n \"subscriber\": \"admin\",\n \"description\": \"Sample calculator application\",\n \"groupId\": \"\"\n}"
				},
				{
					"name": "Not Acceptable.\nThe requested media type is not supported\n",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Media types acceptable for the response. Default is JSON.\n",
								"key": "Accept",
								"value": "JSON"
							},
							{
								"description": "Validator for conditional requests; based on the ETag of the formerly retrieved\nvariant of the resourec.\n",
								"key": "If-None-Match",
								"value": "<string>"
							},
							{
								"description": "Validator for conditional requests; based on Last Modified header of the\nformerly retrieved variant of the resource.\n",
								"key": "If-Modified-Since",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/applications/:applicationId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"applications",
								":applicationId"
							],
							"variable": [
								{
									"key": "applicationId"
								}
							]
						}
					},
					"status": "Not Acceptable",
					"code": 406,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n \"code\": -68757475,\n \"message\": \"voluptate culpa qui minim consectetur\",\n \"description\": \"eu laboris minim\",\n \"moreInfo\": \"et\",\n \"error\": [\n  {\n   \"code\": \"velit et\",\n   \"message\": \"nulla labore deserunt non sed\"\n  },\n  {\n   \"code\": \"qui cupidatat officia\",\n   \"message\": \"cupidatat esse\"\n  }\n ]\n}"
				}
			]
		},
		{
			"name": "Get gateway environments",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/environments?apiId=<string>",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"environments"
					],
					"query": [
						{
							"key": "apiId",
							"value": "<string>",
							"description": "Will return environment list for the provided API.\n"
						}
					]
				},
				"description": "Get a list of gateway environments configured previously.\n"
			},
			"response": [
				{
					"name": "Not Found.\nRequested API does not exist.\n",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/environments?apiId=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"environments"
							],
							"query": [
								{
									"key": "apiId",
									"value": "<string>"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n \"code\": -68757475,\n \"message\": \"voluptate culpa qui minim consectetur\",\n \"description\": \"eu laboris minim\",\n \"moreInfo\": \"et\",\n \"error\": [\n  {\n   \"code\": \"velit et\",\n   \"message\": \"nulla labore deserunt non sed\"\n  },\n  {\n   \"code\": \"qui cupidatat officia\",\n   \"message\": \"cupidatat esse\"\n  }\n ]\n}"
				},
				{
					"name": "Not Modified.\nEmpty body because the client has already the latest version of the requested resource.\n",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/environments?apiId=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"environments"
							],
							"query": [
								{
									"key": "apiId",
									"value": "<string>"
								}
							]
						}
					},
					"status": "Not Modified",
					"code": 304,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "OK.\nEnvironment list is returned.\n",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/environments?apiId=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"environments"
							],
							"query": [
								{
									"key": "apiId",
									"value": "<string>"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "ETag",
							"value": "dolore reprehenderi",
							"description": "Entity Tag of the response resource.\nUsed by caches, or in conditional requests.\n"
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n \"count\": 1,\n \"list\": [\n  {\n   \"name\": \"Production and Sandbox\",\n   \"type\": \"hybrid\",\n   \"serverUrl\": \"https://localhost:9443//services/\",\n   \"endpoints\": {\n    \"http\": \"http://localhost:8280\",\n    \"https\": \"https://localhost:8244\"\n   },\n   \"showInApiConsole\": true\n  },\n  {\n   \"name\": \"Production and Sandbox\",\n   \"type\": \"hybrid\",\n   \"serverUrl\": \"https://localhost:9443//services/\",\n   \"endpoints\": {\n    \"http\": \"http://localhost:8280\",\n    \"https\": \"https://localhost:8244\"\n   },\n   \"showInApiConsole\": true\n  }\n ]\n}"
				}
			]
		}
	],
	"variable": [
		{
			"id": "baseUrl",
			"key": "baseUrl",
			"value": "https://apis.wso2.com/api/am/publisher/v0.10",
			"type": "string"
		}
	],
	"protocolProfileBehavior": {}
}