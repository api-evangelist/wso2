{
	"info": {
		"_postman_id": "a513266e-c991-4bd9-a416-ee67c67f72a5",
		"name": "WSO2 API Manager - Admin API",
		"description": "This document specifies a **RESTful API** for WSO2 **API Manager** - Admin Portal.\n\nIt is written with [swagger 2](http://swagger.io/).\n\n\nContact Support:\n Name: WSO2\n Email: architecture@wso2.com",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "throttling",
			"item": [
				{
					"name": "policies",
					"item": [
						{
							"name": "application",
							"item": [
								{
									"name": "{policy Id}",
									"item": [
										{
											"name": "Retrieve an Application Policy",
											"request": {
												"method": "GET",
												"header": [
													{
														"description": "Validator for conditional requests; based on the ETag of the formerly retrieved\nvariant of the resourec.\n",
														"key": "If-None-Match",
														"value": "<string>"
													},
													{
														"description": "Validator for conditional requests; based on Last Modified header of the\nformerly retrieved variant of the resource.\n",
														"key": "If-Modified-Since",
														"value": "<string>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/throttling/policies/application/:policyId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"throttling",
														"policies",
														"application",
														":policyId"
													],
													"variable": [
														{
															"id": "97ed55c9-e428-4f5c-af02-c4b26eb6e016",
															"key": "policyId",
															"value": "<string>",
															"type": "string",
															"description": "(Required) Thorttle policy UUID\n"
														}
													]
												},
												"description": "Retrieve an Application Policy providing the policy name.\n"
											},
											"response": [
												{
													"name": "Not Acceptable.\nThe requested media type is not supported.\n",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Validator for conditional requests; based on the ETag of the formerly retrieved\nvariant of the resourec.\n",
																"key": "If-None-Match",
																"value": "<string>"
															},
															{
																"description": "Validator for conditional requests; based on Last Modified header of the\nformerly retrieved variant of the resource.\n",
																"key": "If-Modified-Since",
																"value": "<string>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/throttling/policies/application/:policyId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"throttling",
																"policies",
																"application",
																":policyId"
															],
															"variable": [
																{
																	"key": "policyId"
																}
															]
														}
													},
													"status": "Not Acceptable",
													"code": 406,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 34643070,\n \"message\": \"dolore qui ipsum exercitation ad\",\n \"description\": \"dolor consequat enim occaecat\",\n \"moreInfo\": \"in culpa anim Duis velit\",\n \"error\": [\n  {\n   \"code\": \"in Lorem cillum pariatur\",\n   \"message\": \"ea\"\n  },\n  {\n   \"code\": \"esse aliqua\",\n   \"message\": \"labore sunt\"\n  }\n ]\n}"
												},
												{
													"name": "Not Found.\nRequested Tier does not exist.\n",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Validator for conditional requests; based on the ETag of the formerly retrieved\nvariant of the resourec.\n",
																"key": "If-None-Match",
																"value": "<string>"
															},
															{
																"description": "Validator for conditional requests; based on Last Modified header of the\nformerly retrieved variant of the resource.\n",
																"key": "If-Modified-Since",
																"value": "<string>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/throttling/policies/application/:policyId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"throttling",
																"policies",
																"application",
																":policyId"
															],
															"variable": [
																{
																	"key": "policyId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 34643070,\n \"message\": \"dolore qui ipsum exercitation ad\",\n \"description\": \"dolor consequat enim occaecat\",\n \"moreInfo\": \"in culpa anim Duis velit\",\n \"error\": [\n  {\n   \"code\": \"in Lorem cillum pariatur\",\n   \"message\": \"ea\"\n  },\n  {\n   \"code\": \"esse aliqua\",\n   \"message\": \"labore sunt\"\n  }\n ]\n}"
												},
												{
													"name": "OK.\nPolicy returned\n",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Validator for conditional requests; based on the ETag of the formerly retrieved\nvariant of the resourec.\n",
																"key": "If-None-Match",
																"value": "<string>"
															},
															{
																"description": "Validator for conditional requests; based on Last Modified header of the\nformerly retrieved variant of the resource.\n",
																"key": "If-Modified-Since",
																"value": "<string>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/throttling/policies/application/:policyId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"throttling",
																"policies",
																"application",
																":policyId"
															],
															"variable": [
																{
																	"key": "policyId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "ETag",
															"value": "in nostrud proident deser",
															"description": "Entity Tag of the response resource.\nUsed by caches, or in conditional requests.\n"
														},
														{
															"key": "Last-Modified",
															"value": "in nostrud proident deser",
															"description": "Date and time the resource has been modifed the last time.\nUsed by caches, or in conditional reuquests.\n"
														},
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"policyId\": \"quis eu sit\",\n \"policyName\": \"cillum irure ex quis mollit\",\n \"displayName\": \"dolor elit\",\n \"description\": \"aliquip\",\n \"isDeployed\": false,\n \"defaultLimit\": {\n  \"type\": \"BandwidthLimit\",\n  \"timeUnit\": \"culpa sed ipsum\",\n  \"unitTime\": 0\n }\n}"
												},
												{
													"name": "Not Modified.\nEmpty body because the client has already the latest version of the requested resource.\n",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Validator for conditional requests; based on the ETag of the formerly retrieved\nvariant of the resourec.\n",
																"key": "If-None-Match",
																"value": "<string>"
															},
															{
																"description": "Validator for conditional requests; based on Last Modified header of the\nformerly retrieved variant of the resource.\n",
																"key": "If-Modified-Since",
																"value": "<string>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/throttling/policies/application/:policyId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"throttling",
																"policies",
																"application",
																":policyId"
															],
															"variable": [
																{
																	"key": "policyId"
																}
															]
														}
													},
													"status": "Not Modified",
													"code": 304,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Delete an Application level throttle policy",
											"request": {
												"method": "DELETE",
												"header": [
													{
														"description": "Validator for conditional requests; based on ETag.\n",
														"key": "If-Match",
														"value": "<string>"
													},
													{
														"description": "Validator for conditional requests; based on Last Modified header.\n",
														"key": "If-Unmodified-Since",
														"value": "<string>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/throttling/policies/application/:policyId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"throttling",
														"policies",
														"application",
														":policyId"
													],
													"variable": [
														{
															"id": "34d55156-c49f-4b57-bc50-5793adedc6e8",
															"key": "policyId",
															"value": "<string>",
															"type": "string",
															"description": "(Required) Thorttle policy UUID\n"
														}
													]
												},
												"description": "Delete an Application level throttle policy\n"
											},
											"response": [
												{
													"name": "Precondition Failed.\nThe request has not been performed because one of the preconditions is not met.\n",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Validator for conditional requests; based on ETag.\n",
																"key": "If-Match",
																"value": "<string>"
															},
															{
																"description": "Validator for conditional requests; based on Last Modified header.\n",
																"key": "If-Unmodified-Since",
																"value": "<string>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/throttling/policies/application/:policyId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"throttling",
																"policies",
																"application",
																":policyId"
															],
															"variable": [
																{
																	"key": "policyId"
																}
															]
														}
													},
													"status": "Precondition Failed",
													"code": 412,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 34643070,\n \"message\": \"dolore qui ipsum exercitation ad\",\n \"description\": \"dolor consequat enim occaecat\",\n \"moreInfo\": \"in culpa anim Duis velit\",\n \"error\": [\n  {\n   \"code\": \"in Lorem cillum pariatur\",\n   \"message\": \"ea\"\n  },\n  {\n   \"code\": \"esse aliqua\",\n   \"message\": \"labore sunt\"\n  }\n ]\n}"
												},
												{
													"name": "Not Found.\nResource to be deleted does not exist.\n",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Validator for conditional requests; based on ETag.\n",
																"key": "If-Match",
																"value": "<string>"
															},
															{
																"description": "Validator for conditional requests; based on Last Modified header.\n",
																"key": "If-Unmodified-Since",
																"value": "<string>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/throttling/policies/application/:policyId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"throttling",
																"policies",
																"application",
																":policyId"
															],
															"variable": [
																{
																	"key": "policyId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 34643070,\n \"message\": \"dolore qui ipsum exercitation ad\",\n \"description\": \"dolor consequat enim occaecat\",\n \"moreInfo\": \"in culpa anim Duis velit\",\n \"error\": [\n  {\n   \"code\": \"in Lorem cillum pariatur\",\n   \"message\": \"ea\"\n  },\n  {\n   \"code\": \"esse aliqua\",\n   \"message\": \"labore sunt\"\n  }\n ]\n}"
												},
												{
													"name": "OK.\nResource successfully deleted.\n",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Validator for conditional requests; based on ETag.\n",
																"key": "If-Match",
																"value": "<string>"
															},
															{
																"description": "Validator for conditional requests; based on Last Modified header.\n",
																"key": "If-Unmodified-Since",
																"value": "<string>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/throttling/policies/application/:policyId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"throttling",
																"policies",
																"application",
																":policyId"
															],
															"variable": [
																{
																	"key": "policyId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Update an Application level throttle policy",
											"request": {
												"method": "PUT",
												"header": [
													{
														"description": "(Required) Media type of the entity in the body. Default is JSON.\n",
														"key": "Content-Type",
														"value": "JSON"
													},
													{
														"description": "Validator for conditional requests; based on ETag.\n",
														"key": "If-Match",
														"value": "<string>"
													},
													{
														"description": "Validator for conditional requests; based on Last Modified header.\n",
														"key": "If-Unmodified-Since",
														"value": "<string>"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"policyId\": \"magna sunt\",\n    \"policyName\": \"moll\",\n    \"displayName\": \"aliqua sint occaecat\",\n    \"description\": \"mollit\",\n    \"isDeployed\": false,\n    \"defaultLimit\": {\n        \"type\": \"BandwidthLimit\",\n        \"timeUnit\": \"ut est commodo\",\n        \"unitTime\": 0\n    }\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/throttling/policies/application/:policyId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"throttling",
														"policies",
														"application",
														":policyId"
													],
													"variable": [
														{
															"id": "0511b659-14be-4ed8-875a-1380a01112c3",
															"key": "policyId",
															"value": "<string>",
															"type": "string",
															"description": "(Required) Thorttle policy UUID\n"
														}
													]
												},
												"description": "Update an Application level throttle policy\n"
											},
											"response": [
												{
													"name": "OK.\nPolicy updated.\n",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "(Required) Media type of the entity in the body. Default is JSON.\n",
																"key": "Content-Type",
																"value": "JSON"
															},
															{
																"description": "Validator for conditional requests; based on ETag.\n",
																"key": "If-Match",
																"value": "<string>"
															},
															{
																"description": "Validator for conditional requests; based on Last Modified header.\n",
																"key": "If-Unmodified-Since",
																"value": "<string>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"policyId\": \"quis eu sit\",\n    \"policyName\": \"cillum irure ex quis mollit\",\n    \"displayName\": \"dolor elit\",\n    \"description\": \"aliquip\",\n    \"isDeployed\": false,\n    \"defaultLimit\": {\n        \"type\": \"BandwidthLimit\",\n        \"timeUnit\": \"culpa sed ipsum\",\n        \"unitTime\": 0\n    }\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/throttling/policies/application/:policyId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"throttling",
																"policies",
																"application",
																":policyId"
															],
															"variable": [
																{
																	"key": "policyId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Location",
															"value": "in nostrud proident deser",
															"description": "The URL of the newly created resource.\n"
														},
														{
															"key": "ETag",
															"value": "in nostrud proident deser",
															"description": "Entity Tag of the response resource.\nUsed by caches, or in conditional request.\n"
														},
														{
															"key": "Last-Modified",
															"value": "in nostrud proident deser",
															"description": "Date and time the resource has been modifed the last time.\nUsed by caches, or in conditional reuquests.\n"
														},
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"policyId\": \"quis eu sit\",\n \"policyName\": \"cillum irure ex quis mollit\",\n \"displayName\": \"dolor elit\",\n \"description\": \"aliquip\",\n \"isDeployed\": false,\n \"defaultLimit\": {\n  \"type\": \"BandwidthLimit\",\n  \"timeUnit\": \"culpa sed ipsum\",\n  \"unitTime\": 0\n }\n}"
												},
												{
													"name": "Not Found.\nThe resource to be updated does not exist.\n",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "(Required) Media type of the entity in the body. Default is JSON.\n",
																"key": "Content-Type",
																"value": "JSON"
															},
															{
																"description": "Validator for conditional requests; based on ETag.\n",
																"key": "If-Match",
																"value": "<string>"
															},
															{
																"description": "Validator for conditional requests; based on Last Modified header.\n",
																"key": "If-Unmodified-Since",
																"value": "<string>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"policyId\": \"quis eu sit\",\n    \"policyName\": \"cillum irure ex quis mollit\",\n    \"displayName\": \"dolor elit\",\n    \"description\": \"aliquip\",\n    \"isDeployed\": false,\n    \"defaultLimit\": {\n        \"type\": \"BandwidthLimit\",\n        \"timeUnit\": \"culpa sed ipsum\",\n        \"unitTime\": 0\n    }\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/throttling/policies/application/:policyId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"throttling",
																"policies",
																"application",
																":policyId"
															],
															"variable": [
																{
																	"key": "policyId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 34643070,\n \"message\": \"dolore qui ipsum exercitation ad\",\n \"description\": \"dolor consequat enim occaecat\",\n \"moreInfo\": \"in culpa anim Duis velit\",\n \"error\": [\n  {\n   \"code\": \"in Lorem cillum pariatur\",\n   \"message\": \"ea\"\n  },\n  {\n   \"code\": \"esse aliqua\",\n   \"message\": \"labore sunt\"\n  }\n ]\n}"
												},
												{
													"name": "Precondition Failed.\nThe request has not been performed because one of the preconditions is not met.\n",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "(Required) Media type of the entity in the body. Default is JSON.\n",
																"key": "Content-Type",
																"value": "JSON"
															},
															{
																"description": "Validator for conditional requests; based on ETag.\n",
																"key": "If-Match",
																"value": "<string>"
															},
															{
																"description": "Validator for conditional requests; based on Last Modified header.\n",
																"key": "If-Unmodified-Since",
																"value": "<string>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"policyId\": \"quis eu sit\",\n    \"policyName\": \"cillum irure ex quis mollit\",\n    \"displayName\": \"dolor elit\",\n    \"description\": \"aliquip\",\n    \"isDeployed\": false,\n    \"defaultLimit\": {\n        \"type\": \"BandwidthLimit\",\n        \"timeUnit\": \"culpa sed ipsum\",\n        \"unitTime\": 0\n    }\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/throttling/policies/application/:policyId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"throttling",
																"policies",
																"application",
																":policyId"
															],
															"variable": [
																{
																	"key": "policyId"
																}
															]
														}
													},
													"status": "Precondition Failed",
													"code": 412,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 34643070,\n \"message\": \"dolore qui ipsum exercitation ad\",\n \"description\": \"dolor consequat enim occaecat\",\n \"moreInfo\": \"in culpa anim Duis velit\",\n \"error\": [\n  {\n   \"code\": \"in Lorem cillum pariatur\",\n   \"message\": \"ea\"\n  },\n  {\n   \"code\": \"esse aliqua\",\n   \"message\": \"labore sunt\"\n  }\n ]\n}"
												},
												{
													"name": "Bad Request.\nInvalid request or validation error.\n",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "(Required) Media type of the entity in the body. Default is JSON.\n",
																"key": "Content-Type",
																"value": "JSON"
															},
															{
																"description": "Validator for conditional requests; based on ETag.\n",
																"key": "If-Match",
																"value": "<string>"
															},
															{
																"description": "Validator for conditional requests; based on Last Modified header.\n",
																"key": "If-Unmodified-Since",
																"value": "<string>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"policyId\": \"quis eu sit\",\n    \"policyName\": \"cillum irure ex quis mollit\",\n    \"displayName\": \"dolor elit\",\n    \"description\": \"aliquip\",\n    \"isDeployed\": false,\n    \"defaultLimit\": {\n        \"type\": \"BandwidthLimit\",\n        \"timeUnit\": \"culpa sed ipsum\",\n        \"unitTime\": 0\n    }\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/throttling/policies/application/:policyId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"throttling",
																"policies",
																"application",
																":policyId"
															],
															"variable": [
																{
																	"key": "policyId"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 34643070,\n \"message\": \"dolore qui ipsum exercitation ad\",\n \"description\": \"dolor consequat enim occaecat\",\n \"moreInfo\": \"in culpa anim Duis velit\",\n \"error\": [\n  {\n   \"code\": \"in Lorem cillum pariatur\",\n   \"message\": \"ea\"\n  },\n  {\n   \"code\": \"esse aliqua\",\n   \"message\": \"labore sunt\"\n  }\n ]\n}"
												}
											]
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Get all Application level throttle policies",
									"request": {
										"method": "GET",
										"header": [
											{
												"description": "Media types acceptable for the response. Default is JSON.\n",
												"key": "Accept",
												"value": "JSON"
											},
											{
												"description": "Validator for conditional requests; based on the ETag of the formerly retrieved\nvariant of the resourec.\n",
												"key": "If-None-Match",
												"value": "<string>"
											},
											{
												"description": "Validator for conditional requests; based on Last Modified header of the\nformerly retrieved variant of the resource.\n",
												"key": "If-Modified-Since",
												"value": "<string>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/throttling/policies/application",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"throttling",
												"policies",
												"application"
											]
										},
										"description": "Get all Application level throttle policies\n"
									},
									"response": [
										{
											"name": "Not Acceptable.\nThe requested media type is not supported.\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Media types acceptable for the response. Default is JSON.\n",
														"key": "Accept",
														"value": "JSON"
													},
													{
														"description": "Validator for conditional requests; based on the ETag of the formerly retrieved\nvariant of the resourec.\n",
														"key": "If-None-Match",
														"value": "<string>"
													},
													{
														"description": "Validator for conditional requests; based on Last Modified header of the\nformerly retrieved variant of the resource.\n",
														"key": "If-Modified-Since",
														"value": "<string>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/throttling/policies/application",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"throttling",
														"policies",
														"application"
													]
												}
											},
											"status": "Not Acceptable",
											"code": 406,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 48721217,\n \"message\": \"in\",\n \"description\": \"non\",\n \"moreInfo\": \"s\",\n \"error\": [\n  {\n   \"code\": \"proident dolore exercitati\",\n   \"message\": \"ad adipisicing ut in in\"\n  },\n  {\n   \"code\": \"voluptate dolor laboris v\",\n   \"message\": \"commodo cupidatat\"\n  }\n ]\n}"
										},
										{
											"name": "Not Modified.\nEmpty body because the client has already the latest version of the requested resource.\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Media types acceptable for the response. Default is JSON.\n",
														"key": "Accept",
														"value": "JSON"
													},
													{
														"description": "Validator for conditional requests; based on the ETag of the formerly retrieved\nvariant of the resourec.\n",
														"key": "If-None-Match",
														"value": "<string>"
													},
													{
														"description": "Validator for conditional requests; based on Last Modified header of the\nformerly retrieved variant of the resource.\n",
														"key": "If-Modified-Since",
														"value": "<string>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/throttling/policies/application",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"throttling",
														"policies",
														"application"
													]
												}
											},
											"status": "Not Modified",
											"code": 304,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "OK.\nPolicies returned\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Media types acceptable for the response. Default is JSON.\n",
														"key": "Accept",
														"value": "JSON"
													},
													{
														"description": "Validator for conditional requests; based on the ETag of the formerly retrieved\nvariant of the resourec.\n",
														"key": "If-None-Match",
														"value": "<string>"
													},
													{
														"description": "Validator for conditional requests; based on Last Modified header of the\nformerly retrieved variant of the resource.\n",
														"key": "If-Modified-Since",
														"value": "<string>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/throttling/policies/application",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"throttling",
														"policies",
														"application"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "ETag",
													"value": "in nostrud proident deser",
													"description": "Entity Tag of the response resource.\nUsed by caches, or in conditional requests.\n"
												},
												{
													"key": "Last-Modified",
													"value": "in nostrud proident deser",
													"description": "Date and time the resource has been modifed the last time.\nUsed by caches, or in conditional reuquests.\n"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"count\": 1,\n \"list\": [\n  {\n   \"policyId\": \"sunt irure mo\",\n   \"policyName\": \"laborum id\",\n   \"displayName\": \"tempor amet\",\n   \"description\": \"adipisicing ipsum exercitation aliqu\",\n   \"isDeployed\": false,\n   \"defaultLimit\": {\n    \"type\": \"BandwidthLimit\",\n    \"timeUnit\": \"dolor\",\n    \"unitTime\": 0\n   }\n  },\n  {\n   \"policyId\": \"et ea ut ad\",\n   \"policyName\": \"nulla Excepteur id ipsum\",\n   \"displayName\": \"eiusmod ullamco cillum aute in\",\n   \"description\": \"cillum elit quis proident dolore\",\n   \"isDeployed\": false,\n   \"defaultLimit\": {\n    \"type\": \"RequestCountLimit\",\n    \"timeUnit\": \"deserunt do mollit\",\n    \"unitTime\": 0\n   }\n  }\n ]\n}"
										}
									]
								},
								{
									"name": "Add an Application level throttle policy",
									"request": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) Media type of the entity in the body. Default is JSON.\n",
												"key": "Content-Type",
												"value": "JSON"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"policyId\": \"magna sunt\",\n    \"policyName\": \"moll\",\n    \"displayName\": \"aliqua sint occaecat\",\n    \"description\": \"mollit\",\n    \"isDeployed\": false,\n    \"defaultLimit\": {\n        \"type\": \"BandwidthLimit\",\n        \"timeUnit\": \"ut est commodo\",\n        \"unitTime\": 0\n    }\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/throttling/policies/application",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"throttling",
												"policies",
												"application"
											]
										},
										"description": "Add an Application level throttle policy\n"
									},
									"response": [
										{
											"name": "Bad Request.\nInvalid request or validation error\n",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "(Required) Media type of the entity in the body. Default is JSON.\n",
														"key": "Content-Type",
														"value": "JSON"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"policyId\": \"quis eu sit\",\n    \"policyName\": \"cillum irure ex quis mollit\",\n    \"displayName\": \"dolor elit\",\n    \"description\": \"aliquip\",\n    \"isDeployed\": false,\n    \"defaultLimit\": {\n        \"type\": \"BandwidthLimit\",\n        \"timeUnit\": \"culpa sed ipsum\",\n        \"unitTime\": 0\n    }\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/throttling/policies/application",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"throttling",
														"policies",
														"application"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 34643070,\n \"message\": \"dolore qui ipsum exercitation ad\",\n \"description\": \"dolor consequat enim occaecat\",\n \"moreInfo\": \"in culpa anim Duis velit\",\n \"error\": [\n  {\n   \"code\": \"in Lorem cillum pariatur\",\n   \"message\": \"ea\"\n  },\n  {\n   \"code\": \"esse aliqua\",\n   \"message\": \"labore sunt\"\n  }\n ]\n}"
										},
										{
											"name": "Created.\nSuccessful response with the newly created object as entity in the body.\nLocation header contains URL of newly created entity.\n",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "(Required) Media type of the entity in the body. Default is JSON.\n",
														"key": "Content-Type",
														"value": "JSON"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"policyId\": \"quis eu sit\",\n    \"policyName\": \"cillum irure ex quis mollit\",\n    \"displayName\": \"dolor elit\",\n    \"description\": \"aliquip\",\n    \"isDeployed\": false,\n    \"defaultLimit\": {\n        \"type\": \"BandwidthLimit\",\n        \"timeUnit\": \"culpa sed ipsum\",\n        \"unitTime\": 0\n    }\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/throttling/policies/application",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"throttling",
														"policies",
														"application"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Location",
													"value": "in nostrud proident deser",
													"description": "Location of the newly created Policy object.\n"
												},
												{
													"key": "ETag",
													"value": "in nostrud proident deser",
													"description": "Entity Tag of the response resource.\nUsed by caches, or in conditional request'\n"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"policyId\": \"quis eu sit\",\n \"policyName\": \"cillum irure ex quis mollit\",\n \"displayName\": \"dolor elit\",\n \"description\": \"aliquip\",\n \"isDeployed\": false,\n \"defaultLimit\": {\n  \"type\": \"BandwidthLimit\",\n  \"timeUnit\": \"culpa sed ipsum\",\n  \"unitTime\": 0\n }\n}"
										},
										{
											"name": "Unsupported media type.\nThe entity of the request was in a not supported format.\n",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "(Required) Media type of the entity in the body. Default is JSON.\n",
														"key": "Content-Type",
														"value": "JSON"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"policyId\": \"quis eu sit\",\n    \"policyName\": \"cillum irure ex quis mollit\",\n    \"displayName\": \"dolor elit\",\n    \"description\": \"aliquip\",\n    \"isDeployed\": false,\n    \"defaultLimit\": {\n        \"type\": \"BandwidthLimit\",\n        \"timeUnit\": \"culpa sed ipsum\",\n        \"unitTime\": 0\n    }\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/throttling/policies/application",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"throttling",
														"policies",
														"application"
													]
												}
											},
											"status": "Unsupported Media Type",
											"code": 415,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "subscription",
							"item": [
								{
									"name": "{policy Id}",
									"item": [
										{
											"name": "Retrieve a Subscription Policy",
											"request": {
												"method": "GET",
												"header": [
													{
														"description": "Validator for conditional requests; based on the ETag of the formerly retrieved\nvariant of the resourec.\n",
														"key": "If-None-Match",
														"value": "<string>"
													},
													{
														"description": "Validator for conditional requests; based on Last Modified header of the\nformerly retrieved variant of the resource.\n",
														"key": "If-Modified-Since",
														"value": "<string>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/throttling/policies/subscription/:policyId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"throttling",
														"policies",
														"subscription",
														":policyId"
													],
													"variable": [
														{
															"id": "2eb47d0c-b9f4-4a01-9956-f3b365cf62b5",
															"key": "policyId",
															"value": "<string>",
															"type": "string",
															"description": "(Required) Thorttle policy UUID\n"
														}
													]
												},
												"description": "Retrieve a Subscription Policy providing the policy name.\n"
											},
											"response": [
												{
													"name": "Not Found.\nRequested Policy does not exist.\n",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Validator for conditional requests; based on the ETag of the formerly retrieved\nvariant of the resourec.\n",
																"key": "If-None-Match",
																"value": "<string>"
															},
															{
																"description": "Validator for conditional requests; based on Last Modified header of the\nformerly retrieved variant of the resource.\n",
																"key": "If-Modified-Since",
																"value": "<string>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/throttling/policies/subscription/:policyId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"throttling",
																"policies",
																"subscription",
																":policyId"
															],
															"variable": [
																{
																	"key": "policyId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 34643070,\n \"message\": \"dolore qui ipsum exercitation ad\",\n \"description\": \"dolor consequat enim occaecat\",\n \"moreInfo\": \"in culpa anim Duis velit\",\n \"error\": [\n  {\n   \"code\": \"in Lorem cillum pariatur\",\n   \"message\": \"ea\"\n  },\n  {\n   \"code\": \"esse aliqua\",\n   \"message\": \"labore sunt\"\n  }\n ]\n}"
												},
												{
													"name": "Not Modified.\nEmpty body because the client has already the latest version of the requested resource.\n",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Validator for conditional requests; based on the ETag of the formerly retrieved\nvariant of the resourec.\n",
																"key": "If-None-Match",
																"value": "<string>"
															},
															{
																"description": "Validator for conditional requests; based on Last Modified header of the\nformerly retrieved variant of the resource.\n",
																"key": "If-Modified-Since",
																"value": "<string>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/throttling/policies/subscription/:policyId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"throttling",
																"policies",
																"subscription",
																":policyId"
															],
															"variable": [
																{
																	"key": "policyId"
																}
															]
														}
													},
													"status": "Not Modified",
													"code": 304,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "OK.\nPolicy returned\n",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Validator for conditional requests; based on the ETag of the formerly retrieved\nvariant of the resourec.\n",
																"key": "If-None-Match",
																"value": "<string>"
															},
															{
																"description": "Validator for conditional requests; based on Last Modified header of the\nformerly retrieved variant of the resource.\n",
																"key": "If-Modified-Since",
																"value": "<string>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/throttling/policies/subscription/:policyId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"throttling",
																"policies",
																"subscription",
																":policyId"
															],
															"variable": [
																{
																	"key": "policyId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "ETag",
															"value": "in nostrud proident deser",
															"description": "Entity Tag of the response resource.\nUsed by caches, or in conditional requests.\n"
														},
														{
															"key": "Last-Modified",
															"value": "in nostrud proident deser",
															"description": "Date and time the resource has been modifed the last time.\nUsed by caches, or in conditional reuquests.\n"
														},
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"policyId\": \"mollit ea amet adipisicing\",\n \"policyName\": \"ut sint\",\n \"displayName\": \"sit velit repreh\",\n \"description\": \"ut ad consequat\",\n \"isDeployed\": false,\n \"defaultLimit\": {\n  \"type\": \"BandwidthLimit\",\n  \"timeUnit\": \"labore\",\n  \"unitTime\": 0\n },\n \"rateLimitCount\": 0,\n \"rateLimitTimeUnit\": \"<string>\",\n \"customAttributes\": [\n  {\n   \"name\": \"eu non in id\",\n   \"value\": \"ea consectetur Excepteur nisi\"\n  },\n  {\n   \"name\": \"fugiat nulla et\",\n   \"value\": \"sunt sed aute\"\n  }\n ],\n \"stopOnQuotaReach\": false,\n \"billingPlan\": \"<string>\"\n}"
												},
												{
													"name": "Not Acceptable.\nThe requested media type is not supported.\n",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Validator for conditional requests; based on the ETag of the formerly retrieved\nvariant of the resourec.\n",
																"key": "If-None-Match",
																"value": "<string>"
															},
															{
																"description": "Validator for conditional requests; based on Last Modified header of the\nformerly retrieved variant of the resource.\n",
																"key": "If-Modified-Since",
																"value": "<string>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/throttling/policies/subscription/:policyId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"throttling",
																"policies",
																"subscription",
																":policyId"
															],
															"variable": [
																{
																	"key": "policyId"
																}
															]
														}
													},
													"status": "Not Acceptable",
													"code": 406,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 34643070,\n \"message\": \"dolore qui ipsum exercitation ad\",\n \"description\": \"dolor consequat enim occaecat\",\n \"moreInfo\": \"in culpa anim Duis velit\",\n \"error\": [\n  {\n   \"code\": \"in Lorem cillum pariatur\",\n   \"message\": \"ea\"\n  },\n  {\n   \"code\": \"esse aliqua\",\n   \"message\": \"labore sunt\"\n  }\n ]\n}"
												}
											]
										},
										{
											"name": "Delete a Subscription level throttle policy",
											"request": {
												"method": "DELETE",
												"header": [
													{
														"description": "Validator for conditional requests; based on ETag.\n",
														"key": "If-Match",
														"value": "<string>"
													},
													{
														"description": "Validator for conditional requests; based on Last Modified header.\n",
														"key": "If-Unmodified-Since",
														"value": "<string>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/throttling/policies/subscription/:policyId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"throttling",
														"policies",
														"subscription",
														":policyId"
													],
													"variable": [
														{
															"id": "ea508189-b024-4871-b8a0-27a64ac5df55",
															"key": "policyId",
															"value": "<string>",
															"type": "string",
															"description": "(Required) Thorttle policy UUID\n"
														}
													]
												},
												"description": "Delete a Subscription level throttle policy\n"
											},
											"response": [
												{
													"name": "OK.\nResource successfully deleted.\n",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Validator for conditional requests; based on ETag.\n",
																"key": "If-Match",
																"value": "<string>"
															},
															{
																"description": "Validator for conditional requests; based on Last Modified header.\n",
																"key": "If-Unmodified-Since",
																"value": "<string>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/throttling/policies/subscription/:policyId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"throttling",
																"policies",
																"subscription",
																":policyId"
															],
															"variable": [
																{
																	"key": "policyId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Not Found.\nResource to be deleted does not exist.\n",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Validator for conditional requests; based on ETag.\n",
																"key": "If-Match",
																"value": "<string>"
															},
															{
																"description": "Validator for conditional requests; based on Last Modified header.\n",
																"key": "If-Unmodified-Since",
																"value": "<string>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/throttling/policies/subscription/:policyId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"throttling",
																"policies",
																"subscription",
																":policyId"
															],
															"variable": [
																{
																	"key": "policyId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 34643070,\n \"message\": \"dolore qui ipsum exercitation ad\",\n \"description\": \"dolor consequat enim occaecat\",\n \"moreInfo\": \"in culpa anim Duis velit\",\n \"error\": [\n  {\n   \"code\": \"in Lorem cillum pariatur\",\n   \"message\": \"ea\"\n  },\n  {\n   \"code\": \"esse aliqua\",\n   \"message\": \"labore sunt\"\n  }\n ]\n}"
												},
												{
													"name": "Precondition Failed.\nThe request has not been performed because one of the preconditions is not met.\n",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Validator for conditional requests; based on ETag.\n",
																"key": "If-Match",
																"value": "<string>"
															},
															{
																"description": "Validator for conditional requests; based on Last Modified header.\n",
																"key": "If-Unmodified-Since",
																"value": "<string>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/throttling/policies/subscription/:policyId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"throttling",
																"policies",
																"subscription",
																":policyId"
															],
															"variable": [
																{
																	"key": "policyId"
																}
															]
														}
													},
													"status": "Precondition Failed",
													"code": 412,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 34643070,\n \"message\": \"dolore qui ipsum exercitation ad\",\n \"description\": \"dolor consequat enim occaecat\",\n \"moreInfo\": \"in culpa anim Duis velit\",\n \"error\": [\n  {\n   \"code\": \"in Lorem cillum pariatur\",\n   \"message\": \"ea\"\n  },\n  {\n   \"code\": \"esse aliqua\",\n   \"message\": \"labore sunt\"\n  }\n ]\n}"
												}
											]
										},
										{
											"name": "Update a Subscription level throttle policy",
											"request": {
												"method": "PUT",
												"header": [
													{
														"description": "(Required) Media type of the entity in the body. Default is JSON.\n",
														"key": "Content-Type",
														"value": "JSON"
													},
													{
														"description": "Validator for conditional requests; based on ETag.\n",
														"key": "If-Match",
														"value": "<string>"
													},
													{
														"description": "Validator for conditional requests; based on Last Modified header.\n",
														"key": "If-Unmodified-Since",
														"value": "<string>"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"policyId\": \"fugiat voluptate\",\n    \"policyName\": \"Lorem commodo do incididunt officia\",\n    \"displayName\": \"ea elit sunt tempor\",\n    \"description\": \"officia aliquip\",\n    \"isDeployed\": false,\n    \"defaultLimit\": {\n        \"type\": \"RequestCountLimit\",\n        \"timeUnit\": \"veniam in Excepteur non\",\n        \"unitTime\": 0\n    },\n    \"rateLimitCount\": 0,\n    \"rateLimitTimeUnit\": \"<string>\",\n    \"customAttributes\": [\n        {\n            \"name\": \"commodo exercitation\",\n            \"value\": \"consequat\"\n        },\n        {\n            \"name\": \"nisi\",\n            \"value\": \"enim\"\n        }\n    ],\n    \"stopOnQuotaReach\": false,\n    \"billingPlan\": \"<string>\"\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/throttling/policies/subscription/:policyId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"throttling",
														"policies",
														"subscription",
														":policyId"
													],
													"variable": [
														{
															"id": "8b1362c2-d91c-4e5e-b0ec-258cd5319912",
															"key": "policyId",
															"value": "<string>",
															"type": "string",
															"description": "(Required) Thorttle policy UUID\n"
														}
													]
												},
												"description": "Update a Subscription level throttle policy\n"
											},
											"response": [
												{
													"name": "OK.\nPolicy updated.\n",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "(Required) Media type of the entity in the body. Default is JSON.\n",
																"key": "Content-Type",
																"value": "JSON"
															},
															{
																"description": "Validator for conditional requests; based on ETag.\n",
																"key": "If-Match",
																"value": "<string>"
															},
															{
																"description": "Validator for conditional requests; based on Last Modified header.\n",
																"key": "If-Unmodified-Since",
																"value": "<string>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"policyId\": \"mollit ea amet adipisicing\",\n    \"policyName\": \"ut sint\",\n    \"displayName\": \"sit velit repreh\",\n    \"description\": \"ut ad consequat\",\n    \"isDeployed\": false,\n    \"defaultLimit\": {\n        \"type\": \"BandwidthLimit\",\n        \"timeUnit\": \"labore\",\n        \"unitTime\": 0\n    },\n    \"rateLimitCount\": 0,\n    \"rateLimitTimeUnit\": \"<string>\",\n    \"customAttributes\": [\n        {\n            \"name\": \"eu non in id\",\n            \"value\": \"ea consectetur Excepteur nisi\"\n        },\n        {\n            \"name\": \"fugiat nulla et\",\n            \"value\": \"sunt sed aute\"\n        }\n    ],\n    \"stopOnQuotaReach\": false,\n    \"billingPlan\": \"<string>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/throttling/policies/subscription/:policyId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"throttling",
																"policies",
																"subscription",
																":policyId"
															],
															"variable": [
																{
																	"key": "policyId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Location",
															"value": "in nostrud proident deser",
															"description": "The URL of the newly created resource.\n"
														},
														{
															"key": "ETag",
															"value": "in nostrud proident deser",
															"description": "Entity Tag of the response resource.\nUsed by caches, or in conditional request.\n"
														},
														{
															"key": "Last-Modified",
															"value": "in nostrud proident deser",
															"description": "Date and time the resource has been modifed the last time.\nUsed by caches, or in conditional reuquests.\n"
														},
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"policyId\": \"mollit ea amet adipisicing\",\n \"policyName\": \"ut sint\",\n \"displayName\": \"sit velit repreh\",\n \"description\": \"ut ad consequat\",\n \"isDeployed\": false,\n \"defaultLimit\": {\n  \"type\": \"BandwidthLimit\",\n  \"timeUnit\": \"labore\",\n  \"unitTime\": 0\n },\n \"rateLimitCount\": 0,\n \"rateLimitTimeUnit\": \"<string>\",\n \"customAttributes\": [\n  {\n   \"name\": \"eu non in id\",\n   \"value\": \"ea consectetur Excepteur nisi\"\n  },\n  {\n   \"name\": \"fugiat nulla et\",\n   \"value\": \"sunt sed aute\"\n  }\n ],\n \"stopOnQuotaReach\": false,\n \"billingPlan\": \"<string>\"\n}"
												},
												{
													"name": "Bad Request.\nInvalid request or validation error.\n",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "(Required) Media type of the entity in the body. Default is JSON.\n",
																"key": "Content-Type",
																"value": "JSON"
															},
															{
																"description": "Validator for conditional requests; based on ETag.\n",
																"key": "If-Match",
																"value": "<string>"
															},
															{
																"description": "Validator for conditional requests; based on Last Modified header.\n",
																"key": "If-Unmodified-Since",
																"value": "<string>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"policyId\": \"mollit ea amet adipisicing\",\n    \"policyName\": \"ut sint\",\n    \"displayName\": \"sit velit repreh\",\n    \"description\": \"ut ad consequat\",\n    \"isDeployed\": false,\n    \"defaultLimit\": {\n        \"type\": \"BandwidthLimit\",\n        \"timeUnit\": \"labore\",\n        \"unitTime\": 0\n    },\n    \"rateLimitCount\": 0,\n    \"rateLimitTimeUnit\": \"<string>\",\n    \"customAttributes\": [\n        {\n            \"name\": \"eu non in id\",\n            \"value\": \"ea consectetur Excepteur nisi\"\n        },\n        {\n            \"name\": \"fugiat nulla et\",\n            \"value\": \"sunt sed aute\"\n        }\n    ],\n    \"stopOnQuotaReach\": false,\n    \"billingPlan\": \"<string>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/throttling/policies/subscription/:policyId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"throttling",
																"policies",
																"subscription",
																":policyId"
															],
															"variable": [
																{
																	"key": "policyId"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 34643070,\n \"message\": \"dolore qui ipsum exercitation ad\",\n \"description\": \"dolor consequat enim occaecat\",\n \"moreInfo\": \"in culpa anim Duis velit\",\n \"error\": [\n  {\n   \"code\": \"in Lorem cillum pariatur\",\n   \"message\": \"ea\"\n  },\n  {\n   \"code\": \"esse aliqua\",\n   \"message\": \"labore sunt\"\n  }\n ]\n}"
												},
												{
													"name": "Not Found.\nThe resource to be updated does not exist.\n",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "(Required) Media type of the entity in the body. Default is JSON.\n",
																"key": "Content-Type",
																"value": "JSON"
															},
															{
																"description": "Validator for conditional requests; based on ETag.\n",
																"key": "If-Match",
																"value": "<string>"
															},
															{
																"description": "Validator for conditional requests; based on Last Modified header.\n",
																"key": "If-Unmodified-Since",
																"value": "<string>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"policyId\": \"mollit ea amet adipisicing\",\n    \"policyName\": \"ut sint\",\n    \"displayName\": \"sit velit repreh\",\n    \"description\": \"ut ad consequat\",\n    \"isDeployed\": false,\n    \"defaultLimit\": {\n        \"type\": \"BandwidthLimit\",\n        \"timeUnit\": \"labore\",\n        \"unitTime\": 0\n    },\n    \"rateLimitCount\": 0,\n    \"rateLimitTimeUnit\": \"<string>\",\n    \"customAttributes\": [\n        {\n            \"name\": \"eu non in id\",\n            \"value\": \"ea consectetur Excepteur nisi\"\n        },\n        {\n            \"name\": \"fugiat nulla et\",\n            \"value\": \"sunt sed aute\"\n        }\n    ],\n    \"stopOnQuotaReach\": false,\n    \"billingPlan\": \"<string>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/throttling/policies/subscription/:policyId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"throttling",
																"policies",
																"subscription",
																":policyId"
															],
															"variable": [
																{
																	"key": "policyId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 34643070,\n \"message\": \"dolore qui ipsum exercitation ad\",\n \"description\": \"dolor consequat enim occaecat\",\n \"moreInfo\": \"in culpa anim Duis velit\",\n \"error\": [\n  {\n   \"code\": \"in Lorem cillum pariatur\",\n   \"message\": \"ea\"\n  },\n  {\n   \"code\": \"esse aliqua\",\n   \"message\": \"labore sunt\"\n  }\n ]\n}"
												},
												{
													"name": "Precondition Failed.\nThe request has not been performed because one of the preconditions is not met.\n",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "(Required) Media type of the entity in the body. Default is JSON.\n",
																"key": "Content-Type",
																"value": "JSON"
															},
															{
																"description": "Validator for conditional requests; based on ETag.\n",
																"key": "If-Match",
																"value": "<string>"
															},
															{
																"description": "Validator for conditional requests; based on Last Modified header.\n",
																"key": "If-Unmodified-Since",
																"value": "<string>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"policyId\": \"mollit ea amet adipisicing\",\n    \"policyName\": \"ut sint\",\n    \"displayName\": \"sit velit repreh\",\n    \"description\": \"ut ad consequat\",\n    \"isDeployed\": false,\n    \"defaultLimit\": {\n        \"type\": \"BandwidthLimit\",\n        \"timeUnit\": \"labore\",\n        \"unitTime\": 0\n    },\n    \"rateLimitCount\": 0,\n    \"rateLimitTimeUnit\": \"<string>\",\n    \"customAttributes\": [\n        {\n            \"name\": \"eu non in id\",\n            \"value\": \"ea consectetur Excepteur nisi\"\n        },\n        {\n            \"name\": \"fugiat nulla et\",\n            \"value\": \"sunt sed aute\"\n        }\n    ],\n    \"stopOnQuotaReach\": false,\n    \"billingPlan\": \"<string>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/throttling/policies/subscription/:policyId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"throttling",
																"policies",
																"subscription",
																":policyId"
															],
															"variable": [
																{
																	"key": "policyId"
																}
															]
														}
													},
													"status": "Precondition Failed",
													"code": 412,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 34643070,\n \"message\": \"dolore qui ipsum exercitation ad\",\n \"description\": \"dolor consequat enim occaecat\",\n \"moreInfo\": \"in culpa anim Duis velit\",\n \"error\": [\n  {\n   \"code\": \"in Lorem cillum pariatur\",\n   \"message\": \"ea\"\n  },\n  {\n   \"code\": \"esse aliqua\",\n   \"message\": \"labore sunt\"\n  }\n ]\n}"
												}
											]
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Get all Subscription level throttle policies",
									"request": {
										"method": "GET",
										"header": [
											{
												"description": "Media types acceptable for the response. Default is JSON.\n",
												"key": "Accept",
												"value": "JSON"
											},
											{
												"description": "Validator for conditional requests; based on the ETag of the formerly retrieved\nvariant of the resourec.\n",
												"key": "If-None-Match",
												"value": "<string>"
											},
											{
												"description": "Validator for conditional requests; based on Last Modified header of the\nformerly retrieved variant of the resource.\n",
												"key": "If-Modified-Since",
												"value": "<string>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/throttling/policies/subscription",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"throttling",
												"policies",
												"subscription"
											]
										},
										"description": "Get all Subscription level throttle policies\n"
									},
									"response": [
										{
											"name": "Not Acceptable.\nThe requested media type is not supported.\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Media types acceptable for the response. Default is JSON.\n",
														"key": "Accept",
														"value": "JSON"
													},
													{
														"description": "Validator for conditional requests; based on the ETag of the formerly retrieved\nvariant of the resourec.\n",
														"key": "If-None-Match",
														"value": "<string>"
													},
													{
														"description": "Validator for conditional requests; based on Last Modified header of the\nformerly retrieved variant of the resource.\n",
														"key": "If-Modified-Since",
														"value": "<string>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/throttling/policies/subscription",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"throttling",
														"policies",
														"subscription"
													]
												}
											},
											"status": "Not Acceptable",
											"code": 406,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 34643070,\n \"message\": \"dolore qui ipsum exercitation ad\",\n \"description\": \"dolor consequat enim occaecat\",\n \"moreInfo\": \"in culpa anim Duis velit\",\n \"error\": [\n  {\n   \"code\": \"in Lorem cillum pariatur\",\n   \"message\": \"ea\"\n  },\n  {\n   \"code\": \"esse aliqua\",\n   \"message\": \"labore sunt\"\n  }\n ]\n}"
										},
										{
											"name": "OK.\nPolicies returned\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Media types acceptable for the response. Default is JSON.\n",
														"key": "Accept",
														"value": "JSON"
													},
													{
														"description": "Validator for conditional requests; based on the ETag of the formerly retrieved\nvariant of the resourec.\n",
														"key": "If-None-Match",
														"value": "<string>"
													},
													{
														"description": "Validator for conditional requests; based on Last Modified header of the\nformerly retrieved variant of the resource.\n",
														"key": "If-Modified-Since",
														"value": "<string>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/throttling/policies/subscription",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"throttling",
														"policies",
														"subscription"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "ETag",
													"value": "in nostrud proident deser",
													"description": "Entity Tag of the response resource.\nUsed by caches, or in conditional requests.\n"
												},
												{
													"key": "Last-Modified",
													"value": "in nostrud proident deser",
													"description": "Date and time the resource has been modifed the last time.\nUsed by caches, or in conditional reuquests.\n"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"count\": 1,\n \"list\": [\n  {\n   \"policyId\": \"dolor laborum ut amet\",\n   \"policyName\": \"nisi incididunt fugiat ad\",\n   \"displayName\": \"ut laboris irure\",\n   \"description\": \"irure\",\n   \"isDeployed\": false,\n   \"defaultLimit\": {\n    \"type\": \"RequestCountLimit\",\n    \"timeUnit\": \"magna\",\n    \"unitTime\": 0\n   },\n   \"rateLimitCount\": 0,\n   \"rateLimitTimeUnit\": \"nulla veniam\",\n   \"customAttributes\": [\n    {\n     \"name\": \"exercitation\",\n     \"value\": \"pariatur non nulla enim\"\n    },\n    {\n     \"name\": \"ut Excep\",\n     \"value\": \"dolor\"\n    }\n   ],\n   \"stopOnQuotaReach\": false,\n   \"billingPlan\": \"cupidatat culpa ex\"\n  },\n  {\n   \"policyId\": \"velit amet et non\",\n   \"policyName\": \"nulla do anim laborum\",\n   \"displayName\": \"amet ullamco\",\n   \"description\": \"ut commod\",\n   \"isDeployed\": false,\n   \"defaultLimit\": {\n    \"type\": \"BandwidthLimit\",\n    \"timeUnit\": \"officia ut\",\n    \"unitTime\": 0\n   },\n   \"rateLimitCount\": 0,\n   \"rateLimitTimeUnit\": \"culpa\",\n   \"customAttributes\": [\n    {\n     \"name\": \"ullamco consectetur officia magna\",\n     \"value\": \"nostrud irure\"\n    },\n    {\n     \"name\": \"reprehenderit quis dolor\",\n     \"value\": \"sed ut ea dolor\"\n    }\n   ],\n   \"stopOnQuotaReach\": false,\n   \"billingPlan\": \"culpa ipsum nisi\"\n  }\n ]\n}"
										},
										{
											"name": "Not Modified.\nEmpty body because the client has already the latest version of the requested resource.\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Media types acceptable for the response. Default is JSON.\n",
														"key": "Accept",
														"value": "JSON"
													},
													{
														"description": "Validator for conditional requests; based on the ETag of the formerly retrieved\nvariant of the resourec.\n",
														"key": "If-None-Match",
														"value": "<string>"
													},
													{
														"description": "Validator for conditional requests; based on Last Modified header of the\nformerly retrieved variant of the resource.\n",
														"key": "If-Modified-Since",
														"value": "<string>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/throttling/policies/subscription",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"throttling",
														"policies",
														"subscription"
													]
												}
											},
											"status": "Not Modified",
											"code": 304,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Add a Subscription level throttle policy",
									"request": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) Media type of the entity in the body. Default is JSON.\n",
												"key": "Content-Type",
												"value": "JSON"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"policyId\": \"fugiat voluptate\",\n    \"policyName\": \"Lorem commodo do incididunt officia\",\n    \"displayName\": \"ea elit sunt tempor\",\n    \"description\": \"officia aliquip\",\n    \"isDeployed\": false,\n    \"defaultLimit\": {\n        \"type\": \"RequestCountLimit\",\n        \"timeUnit\": \"veniam in Excepteur non\",\n        \"unitTime\": 0\n    },\n    \"rateLimitCount\": 0,\n    \"rateLimitTimeUnit\": \"<string>\",\n    \"customAttributes\": [\n        {\n            \"name\": \"commodo exercitation\",\n            \"value\": \"consequat\"\n        },\n        {\n            \"name\": \"nisi\",\n            \"value\": \"enim\"\n        }\n    ],\n    \"stopOnQuotaReach\": false,\n    \"billingPlan\": \"<string>\"\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/throttling/policies/subscription",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"throttling",
												"policies",
												"subscription"
											]
										},
										"description": "Add a Subscription level throttle policy\n"
									},
									"response": [
										{
											"name": "Bad Request.\nInvalid request or validation error\n",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "(Required) Media type of the entity in the body. Default is JSON.\n",
														"key": "Content-Type",
														"value": "JSON"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"policyId\": \"mollit ea amet adipisicing\",\n    \"policyName\": \"ut sint\",\n    \"displayName\": \"sit velit repreh\",\n    \"description\": \"ut ad consequat\",\n    \"isDeployed\": false,\n    \"defaultLimit\": {\n        \"type\": \"BandwidthLimit\",\n        \"timeUnit\": \"labore\",\n        \"unitTime\": 0\n    },\n    \"rateLimitCount\": 0,\n    \"rateLimitTimeUnit\": \"<string>\",\n    \"customAttributes\": [\n        {\n            \"name\": \"eu non in id\",\n            \"value\": \"ea consectetur Excepteur nisi\"\n        },\n        {\n            \"name\": \"fugiat nulla et\",\n            \"value\": \"sunt sed aute\"\n        }\n    ],\n    \"stopOnQuotaReach\": false,\n    \"billingPlan\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/throttling/policies/subscription",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"throttling",
														"policies",
														"subscription"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 34643070,\n \"message\": \"dolore qui ipsum exercitation ad\",\n \"description\": \"dolor consequat enim occaecat\",\n \"moreInfo\": \"in culpa anim Duis velit\",\n \"error\": [\n  {\n   \"code\": \"in Lorem cillum pariatur\",\n   \"message\": \"ea\"\n  },\n  {\n   \"code\": \"esse aliqua\",\n   \"message\": \"labore sunt\"\n  }\n ]\n}"
										},
										{
											"name": "Unsupported media type.\nThe entity of the request was in a not supported format.\n",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "(Required) Media type of the entity in the body. Default is JSON.\n",
														"key": "Content-Type",
														"value": "JSON"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"policyId\": \"mollit ea amet adipisicing\",\n    \"policyName\": \"ut sint\",\n    \"displayName\": \"sit velit repreh\",\n    \"description\": \"ut ad consequat\",\n    \"isDeployed\": false,\n    \"defaultLimit\": {\n        \"type\": \"BandwidthLimit\",\n        \"timeUnit\": \"labore\",\n        \"unitTime\": 0\n    },\n    \"rateLimitCount\": 0,\n    \"rateLimitTimeUnit\": \"<string>\",\n    \"customAttributes\": [\n        {\n            \"name\": \"eu non in id\",\n            \"value\": \"ea consectetur Excepteur nisi\"\n        },\n        {\n            \"name\": \"fugiat nulla et\",\n            \"value\": \"sunt sed aute\"\n        }\n    ],\n    \"stopOnQuotaReach\": false,\n    \"billingPlan\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/throttling/policies/subscription",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"throttling",
														"policies",
														"subscription"
													]
												}
											},
											"status": "Unsupported Media Type",
											"code": 415,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Created.\nSuccessful response with the newly created object as entity in the body.\nLocation header contains URL of newly created entity.\n",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "(Required) Media type of the entity in the body. Default is JSON.\n",
														"key": "Content-Type",
														"value": "JSON"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"policyId\": \"mollit ea amet adipisicing\",\n    \"policyName\": \"ut sint\",\n    \"displayName\": \"sit velit repreh\",\n    \"description\": \"ut ad consequat\",\n    \"isDeployed\": false,\n    \"defaultLimit\": {\n        \"type\": \"BandwidthLimit\",\n        \"timeUnit\": \"labore\",\n        \"unitTime\": 0\n    },\n    \"rateLimitCount\": 0,\n    \"rateLimitTimeUnit\": \"<string>\",\n    \"customAttributes\": [\n        {\n            \"name\": \"eu non in id\",\n            \"value\": \"ea consectetur Excepteur nisi\"\n        },\n        {\n            \"name\": \"fugiat nulla et\",\n            \"value\": \"sunt sed aute\"\n        }\n    ],\n    \"stopOnQuotaReach\": false,\n    \"billingPlan\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/throttling/policies/subscription",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"throttling",
														"policies",
														"subscription"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Location",
													"value": "in nostrud proident deser",
													"description": "Location of the newly created Policy object.\n"
												},
												{
													"key": "ETag",
													"value": "in nostrud proident deser",
													"description": "Entity Tag of the response resource.\nUsed by caches, or in conditional request'\n"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"policyId\": \"mollit ea amet adipisicing\",\n \"policyName\": \"ut sint\",\n \"displayName\": \"sit velit repreh\",\n \"description\": \"ut ad consequat\",\n \"isDeployed\": false,\n \"defaultLimit\": {\n  \"type\": \"BandwidthLimit\",\n  \"timeUnit\": \"labore\",\n  \"unitTime\": 0\n },\n \"rateLimitCount\": 0,\n \"rateLimitTimeUnit\": \"<string>\",\n \"customAttributes\": [\n  {\n   \"name\": \"eu non in id\",\n   \"value\": \"ea consectetur Excepteur nisi\"\n  },\n  {\n   \"name\": \"fugiat nulla et\",\n   \"value\": \"sunt sed aute\"\n  }\n ],\n \"stopOnQuotaReach\": false,\n \"billingPlan\": \"<string>\"\n}"
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "custom",
							"item": [
								{
									"name": "{rule Id}",
									"item": [
										{
											"name": "Retrieve a Custom Rule",
											"request": {
												"method": "GET",
												"header": [
													{
														"description": "Validator for conditional requests; based on the ETag of the formerly retrieved\nvariant of the resourec.\n",
														"key": "If-None-Match",
														"value": "<string>"
													},
													{
														"description": "Validator for conditional requests; based on Last Modified header of the\nformerly retrieved variant of the resource.\n",
														"key": "If-Modified-Since",
														"value": "<string>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/throttling/policies/custom/:ruleId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"throttling",
														"policies",
														"custom",
														":ruleId"
													],
													"variable": [
														{
															"id": "8c23e8bc-293a-4da4-ac13-a93fb433bde6",
															"key": "ruleId",
															"value": "<string>",
															"type": "string",
															"description": "(Required) Custom rule UUID\n"
														}
													]
												},
												"description": "Retrieve a Custom Rule providing the policy name.\n"
											},
											"response": [
												{
													"name": "OK.\nPolicy returned\n",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Validator for conditional requests; based on the ETag of the formerly retrieved\nvariant of the resourec.\n",
																"key": "If-None-Match",
																"value": "<string>"
															},
															{
																"description": "Validator for conditional requests; based on Last Modified header of the\nformerly retrieved variant of the resource.\n",
																"key": "If-Modified-Since",
																"value": "<string>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/throttling/policies/custom/:ruleId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"throttling",
																"policies",
																"custom",
																":ruleId"
															],
															"variable": [
																{
																	"key": "ruleId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "ETag",
															"value": "in nostrud proident deser",
															"description": "Entity Tag of the response resource.\nUsed by caches, or in conditional requests.\n"
														},
														{
															"key": "Last-Modified",
															"value": "in nostrud proident deser",
															"description": "Date and time the resource has been modifed the last time.\nUsed by caches, or in conditional reuquests.\n"
														},
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"policyId\": \"id eu pariatur officia\",\n \"policyName\": \"eu veniam\",\n \"displayName\": \"sit fugiat in\",\n \"description\": \"quis officia Ut dolore\",\n \"isDeployed\": false,\n \"siddhiQuery\": \"<string>\",\n \"keyTemplate\": \"<string>\"\n}"
												},
												{
													"name": "Not Found.\nRequested Policy does not exist.\n",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Validator for conditional requests; based on the ETag of the formerly retrieved\nvariant of the resourec.\n",
																"key": "If-None-Match",
																"value": "<string>"
															},
															{
																"description": "Validator for conditional requests; based on Last Modified header of the\nformerly retrieved variant of the resource.\n",
																"key": "If-Modified-Since",
																"value": "<string>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/throttling/policies/custom/:ruleId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"throttling",
																"policies",
																"custom",
																":ruleId"
															],
															"variable": [
																{
																	"key": "ruleId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 34643070,\n \"message\": \"dolore qui ipsum exercitation ad\",\n \"description\": \"dolor consequat enim occaecat\",\n \"moreInfo\": \"in culpa anim Duis velit\",\n \"error\": [\n  {\n   \"code\": \"in Lorem cillum pariatur\",\n   \"message\": \"ea\"\n  },\n  {\n   \"code\": \"esse aliqua\",\n   \"message\": \"labore sunt\"\n  }\n ]\n}"
												},
												{
													"name": "Not Modified.\nEmpty body because the client has already the latest version of the requested resource.\n",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Validator for conditional requests; based on the ETag of the formerly retrieved\nvariant of the resourec.\n",
																"key": "If-None-Match",
																"value": "<string>"
															},
															{
																"description": "Validator for conditional requests; based on Last Modified header of the\nformerly retrieved variant of the resource.\n",
																"key": "If-Modified-Since",
																"value": "<string>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/throttling/policies/custom/:ruleId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"throttling",
																"policies",
																"custom",
																":ruleId"
															],
															"variable": [
																{
																	"key": "ruleId"
																}
															]
														}
													},
													"status": "Not Modified",
													"code": 304,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Not Acceptable.\nThe requested media type is not supported.\n",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Validator for conditional requests; based on the ETag of the formerly retrieved\nvariant of the resourec.\n",
																"key": "If-None-Match",
																"value": "<string>"
															},
															{
																"description": "Validator for conditional requests; based on Last Modified header of the\nformerly retrieved variant of the resource.\n",
																"key": "If-Modified-Since",
																"value": "<string>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/throttling/policies/custom/:ruleId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"throttling",
																"policies",
																"custom",
																":ruleId"
															],
															"variable": [
																{
																	"key": "ruleId"
																}
															]
														}
													},
													"status": "Not Acceptable",
													"code": 406,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 34643070,\n \"message\": \"dolore qui ipsum exercitation ad\",\n \"description\": \"dolor consequat enim occaecat\",\n \"moreInfo\": \"in culpa anim Duis velit\",\n \"error\": [\n  {\n   \"code\": \"in Lorem cillum pariatur\",\n   \"message\": \"ea\"\n  },\n  {\n   \"code\": \"esse aliqua\",\n   \"message\": \"labore sunt\"\n  }\n ]\n}"
												}
											]
										},
										{
											"name": "Delete a Custom Rule",
											"request": {
												"method": "DELETE",
												"header": [
													{
														"description": "Validator for conditional requests; based on ETag.\n",
														"key": "If-Match",
														"value": "<string>"
													},
													{
														"description": "Validator for conditional requests; based on Last Modified header.\n",
														"key": "If-Unmodified-Since",
														"value": "<string>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/throttling/policies/custom/:ruleId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"throttling",
														"policies",
														"custom",
														":ruleId"
													],
													"variable": [
														{
															"id": "4cfa6823-bb65-40bb-a2af-2e7b6e8351f0",
															"key": "ruleId",
															"value": "<string>",
															"type": "string",
															"description": "(Required) Custom rule UUID\n"
														}
													]
												},
												"description": "Delete a Custom Rule\n"
											},
											"response": [
												{
													"name": "Not Found.\nResource to be deleted does not exist.\n",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Validator for conditional requests; based on ETag.\n",
																"key": "If-Match",
																"value": "<string>"
															},
															{
																"description": "Validator for conditional requests; based on Last Modified header.\n",
																"key": "If-Unmodified-Since",
																"value": "<string>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/throttling/policies/custom/:ruleId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"throttling",
																"policies",
																"custom",
																":ruleId"
															],
															"variable": [
																{
																	"key": "ruleId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 34643070,\n \"message\": \"dolore qui ipsum exercitation ad\",\n \"description\": \"dolor consequat enim occaecat\",\n \"moreInfo\": \"in culpa anim Duis velit\",\n \"error\": [\n  {\n   \"code\": \"in Lorem cillum pariatur\",\n   \"message\": \"ea\"\n  },\n  {\n   \"code\": \"esse aliqua\",\n   \"message\": \"labore sunt\"\n  }\n ]\n}"
												},
												{
													"name": "OK.\nResource successfully deleted.\n",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Validator for conditional requests; based on ETag.\n",
																"key": "If-Match",
																"value": "<string>"
															},
															{
																"description": "Validator for conditional requests; based on Last Modified header.\n",
																"key": "If-Unmodified-Since",
																"value": "<string>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/throttling/policies/custom/:ruleId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"throttling",
																"policies",
																"custom",
																":ruleId"
															],
															"variable": [
																{
																	"key": "ruleId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Precondition Failed.\nThe request has not been performed because one of the preconditions is not met.\n",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Validator for conditional requests; based on ETag.\n",
																"key": "If-Match",
																"value": "<string>"
															},
															{
																"description": "Validator for conditional requests; based on Last Modified header.\n",
																"key": "If-Unmodified-Since",
																"value": "<string>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/throttling/policies/custom/:ruleId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"throttling",
																"policies",
																"custom",
																":ruleId"
															],
															"variable": [
																{
																	"key": "ruleId"
																}
															]
														}
													},
													"status": "Precondition Failed",
													"code": 412,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 34643070,\n \"message\": \"dolore qui ipsum exercitation ad\",\n \"description\": \"dolor consequat enim occaecat\",\n \"moreInfo\": \"in culpa anim Duis velit\",\n \"error\": [\n  {\n   \"code\": \"in Lorem cillum pariatur\",\n   \"message\": \"ea\"\n  },\n  {\n   \"code\": \"esse aliqua\",\n   \"message\": \"labore sunt\"\n  }\n ]\n}"
												}
											]
										},
										{
											"name": "Update a Custom Rule",
											"request": {
												"method": "PUT",
												"header": [
													{
														"description": "(Required) Media type of the entity in the body. Default is JSON.\n",
														"key": "Content-Type",
														"value": "JSON"
													},
													{
														"description": "Validator for conditional requests; based on ETag.\n",
														"key": "If-Match",
														"value": "<string>"
													},
													{
														"description": "Validator for conditional requests; based on Last Modified header.\n",
														"key": "If-Unmodified-Since",
														"value": "<string>"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"policyId\": \"et sit\",\n    \"policyName\": \"dolor sit velit do\",\n    \"displayName\": \"officia pariatur labor\",\n    \"description\": \"enim exercitation dolore esse eiusmod\",\n    \"isDeployed\": false,\n    \"siddhiQuery\": \"<string>\",\n    \"keyTemplate\": \"<string>\"\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/throttling/policies/custom/:ruleId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"throttling",
														"policies",
														"custom",
														":ruleId"
													],
													"variable": [
														{
															"id": "012b968e-0375-46c0-9946-c2847a30579f",
															"key": "ruleId",
															"value": "<string>",
															"type": "string",
															"description": "(Required) Custom rule UUID\n"
														}
													]
												},
												"description": "Update a Custom Rule\n"
											},
											"response": [
												{
													"name": "Precondition Failed.\nThe request has not been performed because one of the preconditions is not met.\n",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "(Required) Media type of the entity in the body. Default is JSON.\n",
																"key": "Content-Type",
																"value": "JSON"
															},
															{
																"description": "Validator for conditional requests; based on ETag.\n",
																"key": "If-Match",
																"value": "<string>"
															},
															{
																"description": "Validator for conditional requests; based on Last Modified header.\n",
																"key": "If-Unmodified-Since",
																"value": "<string>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"policyId\": \"id eu pariatur officia\",\n    \"policyName\": \"eu veniam\",\n    \"displayName\": \"sit fugiat in\",\n    \"description\": \"quis officia Ut dolore\",\n    \"isDeployed\": false,\n    \"siddhiQuery\": \"<string>\",\n    \"keyTemplate\": \"<string>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/throttling/policies/custom/:ruleId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"throttling",
																"policies",
																"custom",
																":ruleId"
															],
															"variable": [
																{
																	"key": "ruleId"
																}
															]
														}
													},
													"status": "Precondition Failed",
													"code": 412,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 34643070,\n \"message\": \"dolore qui ipsum exercitation ad\",\n \"description\": \"dolor consequat enim occaecat\",\n \"moreInfo\": \"in culpa anim Duis velit\",\n \"error\": [\n  {\n   \"code\": \"in Lorem cillum pariatur\",\n   \"message\": \"ea\"\n  },\n  {\n   \"code\": \"esse aliqua\",\n   \"message\": \"labore sunt\"\n  }\n ]\n}"
												},
												{
													"name": "Not Found.\nThe resource to be updated does not exist.\n",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "(Required) Media type of the entity in the body. Default is JSON.\n",
																"key": "Content-Type",
																"value": "JSON"
															},
															{
																"description": "Validator for conditional requests; based on ETag.\n",
																"key": "If-Match",
																"value": "<string>"
															},
															{
																"description": "Validator for conditional requests; based on Last Modified header.\n",
																"key": "If-Unmodified-Since",
																"value": "<string>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"policyId\": \"id eu pariatur officia\",\n    \"policyName\": \"eu veniam\",\n    \"displayName\": \"sit fugiat in\",\n    \"description\": \"quis officia Ut dolore\",\n    \"isDeployed\": false,\n    \"siddhiQuery\": \"<string>\",\n    \"keyTemplate\": \"<string>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/throttling/policies/custom/:ruleId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"throttling",
																"policies",
																"custom",
																":ruleId"
															],
															"variable": [
																{
																	"key": "ruleId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 34643070,\n \"message\": \"dolore qui ipsum exercitation ad\",\n \"description\": \"dolor consequat enim occaecat\",\n \"moreInfo\": \"in culpa anim Duis velit\",\n \"error\": [\n  {\n   \"code\": \"in Lorem cillum pariatur\",\n   \"message\": \"ea\"\n  },\n  {\n   \"code\": \"esse aliqua\",\n   \"message\": \"labore sunt\"\n  }\n ]\n}"
												},
												{
													"name": "OK.\nPolicy updated.\n",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "(Required) Media type of the entity in the body. Default is JSON.\n",
																"key": "Content-Type",
																"value": "JSON"
															},
															{
																"description": "Validator for conditional requests; based on ETag.\n",
																"key": "If-Match",
																"value": "<string>"
															},
															{
																"description": "Validator for conditional requests; based on Last Modified header.\n",
																"key": "If-Unmodified-Since",
																"value": "<string>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"policyId\": \"id eu pariatur officia\",\n    \"policyName\": \"eu veniam\",\n    \"displayName\": \"sit fugiat in\",\n    \"description\": \"quis officia Ut dolore\",\n    \"isDeployed\": false,\n    \"siddhiQuery\": \"<string>\",\n    \"keyTemplate\": \"<string>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/throttling/policies/custom/:ruleId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"throttling",
																"policies",
																"custom",
																":ruleId"
															],
															"variable": [
																{
																	"key": "ruleId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Location",
															"value": "in nostrud proident deser",
															"description": "The URL of the newly created resource.\n"
														},
														{
															"key": "ETag",
															"value": "in nostrud proident deser",
															"description": "Entity Tag of the response resource.\nUsed by caches, or in conditional request.\n"
														},
														{
															"key": "Last-Modified",
															"value": "in nostrud proident deser",
															"description": "Date and time the resource has been modifed the last time.\nUsed by caches, or in conditional reuquests.\n"
														},
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"policyId\": \"id eu pariatur officia\",\n \"policyName\": \"eu veniam\",\n \"displayName\": \"sit fugiat in\",\n \"description\": \"quis officia Ut dolore\",\n \"isDeployed\": false,\n \"siddhiQuery\": \"<string>\",\n \"keyTemplate\": \"<string>\"\n}"
												},
												{
													"name": "Bad Request.\nInvalid request or validation error.\n",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "(Required) Media type of the entity in the body. Default is JSON.\n",
																"key": "Content-Type",
																"value": "JSON"
															},
															{
																"description": "Validator for conditional requests; based on ETag.\n",
																"key": "If-Match",
																"value": "<string>"
															},
															{
																"description": "Validator for conditional requests; based on Last Modified header.\n",
																"key": "If-Unmodified-Since",
																"value": "<string>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"policyId\": \"id eu pariatur officia\",\n    \"policyName\": \"eu veniam\",\n    \"displayName\": \"sit fugiat in\",\n    \"description\": \"quis officia Ut dolore\",\n    \"isDeployed\": false,\n    \"siddhiQuery\": \"<string>\",\n    \"keyTemplate\": \"<string>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/throttling/policies/custom/:ruleId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"throttling",
																"policies",
																"custom",
																":ruleId"
															],
															"variable": [
																{
																	"key": "ruleId"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 34643070,\n \"message\": \"dolore qui ipsum exercitation ad\",\n \"description\": \"dolor consequat enim occaecat\",\n \"moreInfo\": \"in culpa anim Duis velit\",\n \"error\": [\n  {\n   \"code\": \"in Lorem cillum pariatur\",\n   \"message\": \"ea\"\n  },\n  {\n   \"code\": \"esse aliqua\",\n   \"message\": \"labore sunt\"\n  }\n ]\n}"
												}
											]
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Get all Custom Rules",
									"request": {
										"method": "GET",
										"header": [
											{
												"description": "Media types acceptable for the response. Default is JSON.\n",
												"key": "Accept",
												"value": "JSON"
											},
											{
												"description": "Validator for conditional requests; based on the ETag of the formerly retrieved\nvariant of the resourec.\n",
												"key": "If-None-Match",
												"value": "<string>"
											},
											{
												"description": "Validator for conditional requests; based on Last Modified header of the\nformerly retrieved variant of the resource.\n",
												"key": "If-Modified-Since",
												"value": "<string>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/throttling/policies/custom",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"throttling",
												"policies",
												"custom"
											]
										},
										"description": "Get all Custom Rules\n"
									},
									"response": [
										{
											"name": "OK.\nPolicies returned\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Media types acceptable for the response. Default is JSON.\n",
														"key": "Accept",
														"value": "JSON"
													},
													{
														"description": "Validator for conditional requests; based on the ETag of the formerly retrieved\nvariant of the resourec.\n",
														"key": "If-None-Match",
														"value": "<string>"
													},
													{
														"description": "Validator for conditional requests; based on Last Modified header of the\nformerly retrieved variant of the resource.\n",
														"key": "If-Modified-Since",
														"value": "<string>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/throttling/policies/custom",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"throttling",
														"policies",
														"custom"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "ETag",
													"value": "in nostrud proident deser",
													"description": "Entity Tag of the response resource.\nUsed by caches, or in conditional requests.\n"
												},
												{
													"key": "Last-Modified",
													"value": "in nostrud proident deser",
													"description": "Date and time the resource has been modifed the last time.\nUsed by caches, or in conditional reuquests.\n"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"count\": 1,\n \"list\": [\n  {\n   \"policyId\": \"sed id fugiat\",\n   \"policyName\": \"Excepteur\",\n   \"displayName\": \"dolore ea\",\n   \"description\": \"proident occaecat aliquip\",\n   \"isDeployed\": false,\n   \"siddhiQuery\": \"aliqua et magna dolor\",\n   \"keyTemplate\": \"laborum nostrud aliqua\"\n  },\n  {\n   \"policyId\": \"nisi aute\",\n   \"policyName\": \"in tempor minim aliquip\",\n   \"displayName\": \"dolor ea non anim\",\n   \"description\": \"sint\",\n   \"isDeployed\": false,\n   \"siddhiQuery\": \"fugiat commodo\",\n   \"keyTemplate\": \"proident dolor in\"\n  }\n ]\n}"
										},
										{
											"name": "Not Modified.\nEmpty body because the client has already the latest version of the requested resource.\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Media types acceptable for the response. Default is JSON.\n",
														"key": "Accept",
														"value": "JSON"
													},
													{
														"description": "Validator for conditional requests; based on the ETag of the formerly retrieved\nvariant of the resourec.\n",
														"key": "If-None-Match",
														"value": "<string>"
													},
													{
														"description": "Validator for conditional requests; based on Last Modified header of the\nformerly retrieved variant of the resource.\n",
														"key": "If-Modified-Since",
														"value": "<string>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/throttling/policies/custom",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"throttling",
														"policies",
														"custom"
													]
												}
											},
											"status": "Not Modified",
											"code": 304,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Not Acceptable.\nThe requested media type is not supported.\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Media types acceptable for the response. Default is JSON.\n",
														"key": "Accept",
														"value": "JSON"
													},
													{
														"description": "Validator for conditional requests; based on the ETag of the formerly retrieved\nvariant of the resourec.\n",
														"key": "If-None-Match",
														"value": "<string>"
													},
													{
														"description": "Validator for conditional requests; based on Last Modified header of the\nformerly retrieved variant of the resource.\n",
														"key": "If-Modified-Since",
														"value": "<string>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/throttling/policies/custom",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"throttling",
														"policies",
														"custom"
													]
												}
											},
											"status": "Not Acceptable",
											"code": 406,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 34643070,\n \"message\": \"dolore qui ipsum exercitation ad\",\n \"description\": \"dolor consequat enim occaecat\",\n \"moreInfo\": \"in culpa anim Duis velit\",\n \"error\": [\n  {\n   \"code\": \"in Lorem cillum pariatur\",\n   \"message\": \"ea\"\n  },\n  {\n   \"code\": \"esse aliqua\",\n   \"message\": \"labore sunt\"\n  }\n ]\n}"
										}
									]
								},
								{
									"name": "Add a Custom Rule",
									"request": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) Media type of the entity in the body. Default is JSON.\n",
												"key": "Content-Type",
												"value": "JSON"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"policyId\": \"et sit\",\n    \"policyName\": \"dolor sit velit do\",\n    \"displayName\": \"officia pariatur labor\",\n    \"description\": \"enim exercitation dolore esse eiusmod\",\n    \"isDeployed\": false,\n    \"siddhiQuery\": \"<string>\",\n    \"keyTemplate\": \"<string>\"\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/throttling/policies/custom",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"throttling",
												"policies",
												"custom"
											]
										},
										"description": "Add a Custom Rule\n"
									},
									"response": [
										{
											"name": "Created.\nSuccessful response with the newly created object as entity in the body.\nLocation header contains URL of newly created entity.\n",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "(Required) Media type of the entity in the body. Default is JSON.\n",
														"key": "Content-Type",
														"value": "JSON"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"policyId\": \"id eu pariatur officia\",\n    \"policyName\": \"eu veniam\",\n    \"displayName\": \"sit fugiat in\",\n    \"description\": \"quis officia Ut dolore\",\n    \"isDeployed\": false,\n    \"siddhiQuery\": \"<string>\",\n    \"keyTemplate\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/throttling/policies/custom",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"throttling",
														"policies",
														"custom"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Location",
													"value": "in nostrud proident deser",
													"description": "Location of the newly created resource.\n"
												},
												{
													"key": "ETag",
													"value": "in nostrud proident deser",
													"description": "Entity Tag of the response resource.\nUsed by caches, or in conditional request'\n"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"policyId\": \"id eu pariatur officia\",\n \"policyName\": \"eu veniam\",\n \"displayName\": \"sit fugiat in\",\n \"description\": \"quis officia Ut dolore\",\n \"isDeployed\": false,\n \"siddhiQuery\": \"<string>\",\n \"keyTemplate\": \"<string>\"\n}"
										},
										{
											"name": "Unsupported media type.\nThe entity of the request was in a not supported format.\n",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "(Required) Media type of the entity in the body. Default is JSON.\n",
														"key": "Content-Type",
														"value": "JSON"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"policyId\": \"id eu pariatur officia\",\n    \"policyName\": \"eu veniam\",\n    \"displayName\": \"sit fugiat in\",\n    \"description\": \"quis officia Ut dolore\",\n    \"isDeployed\": false,\n    \"siddhiQuery\": \"<string>\",\n    \"keyTemplate\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/throttling/policies/custom",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"throttling",
														"policies",
														"custom"
													]
												}
											},
											"status": "Unsupported Media Type",
											"code": 415,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Bad Request.\nInvalid request or validation error\n",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "(Required) Media type of the entity in the body. Default is JSON.\n",
														"key": "Content-Type",
														"value": "JSON"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"policyId\": \"id eu pariatur officia\",\n    \"policyName\": \"eu veniam\",\n    \"displayName\": \"sit fugiat in\",\n    \"description\": \"quis officia Ut dolore\",\n    \"isDeployed\": false,\n    \"siddhiQuery\": \"<string>\",\n    \"keyTemplate\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/throttling/policies/custom",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"throttling",
														"policies",
														"custom"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 34643070,\n \"message\": \"dolore qui ipsum exercitation ad\",\n \"description\": \"dolor consequat enim occaecat\",\n \"moreInfo\": \"in culpa anim Duis velit\",\n \"error\": [\n  {\n   \"code\": \"in Lorem cillum pariatur\",\n   \"message\": \"ea\"\n  },\n  {\n   \"code\": \"esse aliqua\",\n   \"message\": \"labore sunt\"\n  }\n ]\n}"
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "advanced",
							"item": [
								{
									"name": "{policy Id}",
									"item": [
										{
											"name": "Retrieve an Advanced Policy",
											"request": {
												"method": "GET",
												"header": [
													{
														"description": "Validator for conditional requests; based on the ETag of the formerly retrieved\nvariant of the resourec.\n",
														"key": "If-None-Match",
														"value": "<string>"
													},
													{
														"description": "Validator for conditional requests; based on Last Modified header of the\nformerly retrieved variant of the resource.\n",
														"key": "If-Modified-Since",
														"value": "<string>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/throttling/policies/advanced/:policyId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"throttling",
														"policies",
														"advanced",
														":policyId"
													],
													"variable": [
														{
															"id": "44db51ea-df2d-45db-88b8-7fa2bc6af9be",
															"key": "policyId",
															"value": "<string>",
															"type": "string",
															"description": "(Required) Thorttle policy UUID\n"
														}
													]
												},
												"description": "Retrieve a Advanced Policy providing the policy name.\n"
											},
											"response": [
												{
													"name": "OK.\nPolicy returned\n",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Validator for conditional requests; based on the ETag of the formerly retrieved\nvariant of the resourec.\n",
																"key": "If-None-Match",
																"value": "<string>"
															},
															{
																"description": "Validator for conditional requests; based on Last Modified header of the\nformerly retrieved variant of the resource.\n",
																"key": "If-Modified-Since",
																"value": "<string>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/throttling/policies/advanced/:policyId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"throttling",
																"policies",
																"advanced",
																":policyId"
															],
															"variable": [
																{
																	"key": "policyId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "ETag",
															"value": "in nostrud proident deser",
															"description": "Entity Tag of the response resource.\nUsed by caches, or in conditional requests.\n"
														},
														{
															"key": "Last-Modified",
															"value": "in nostrud proident deser",
															"description": "Date and time the resource has been modifed the last time.\nUsed by caches, or in conditional reuquests.\n"
														},
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"policyId\": \"cillum in eiusmod\",\n \"policyName\": \"dolor qui enim aliqua\",\n \"displayName\": \"officia laboris\",\n \"description\": \"reprehenderit quis magna consectetur dolor\",\n \"isDeployed\": false,\n \"defaultLimit\": {\n  \"type\": \"RequestCountLimit\",\n  \"timeUnit\": \"veniam culpa est ad\",\n  \"unitTime\": 0\n },\n \"conditionalGroups\": [\n  {\n   \"limit\": {\n    \"type\": \"BandwidthLimit\",\n    \"timeUnit\": \"laborum aliquip in\",\n    \"unitTime\": 0\n   },\n   \"conditions\": [\n    {\n     \"type\": \"<string>\",\n     \"invertCondition\": false\n    },\n    {\n     \"type\": \"<string>\",\n     \"invertCondition\": false\n    }\n   ],\n   \"description\": \"<string>\"\n  },\n  {\n   \"limit\": {\n    \"type\": \"RequestCountLimit\",\n    \"timeUnit\": \"ipsum laborum dolor aute\",\n    \"unitTime\": 0\n   },\n   \"conditions\": [\n    {\n     \"type\": \"<string>\",\n     \"invertCondition\": false\n    },\n    {\n     \"type\": \"<string>\",\n     \"invertCondition\": false\n    }\n   ],\n   \"description\": \"<string>\"\n  }\n ]\n}"
												},
												{
													"name": "Not Modified.\nEmpty body because the client has already the latest version of the requested resource.\n",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Validator for conditional requests; based on the ETag of the formerly retrieved\nvariant of the resourec.\n",
																"key": "If-None-Match",
																"value": "<string>"
															},
															{
																"description": "Validator for conditional requests; based on Last Modified header of the\nformerly retrieved variant of the resource.\n",
																"key": "If-Modified-Since",
																"value": "<string>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/throttling/policies/advanced/:policyId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"throttling",
																"policies",
																"advanced",
																":policyId"
															],
															"variable": [
																{
																	"key": "policyId"
																}
															]
														}
													},
													"status": "Not Modified",
													"code": 304,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Not Found.\nRequested Policy does not exist.\n",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Validator for conditional requests; based on the ETag of the formerly retrieved\nvariant of the resourec.\n",
																"key": "If-None-Match",
																"value": "<string>"
															},
															{
																"description": "Validator for conditional requests; based on Last Modified header of the\nformerly retrieved variant of the resource.\n",
																"key": "If-Modified-Since",
																"value": "<string>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/throttling/policies/advanced/:policyId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"throttling",
																"policies",
																"advanced",
																":policyId"
															],
															"variable": [
																{
																	"key": "policyId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 34643070,\n \"message\": \"dolore qui ipsum exercitation ad\",\n \"description\": \"dolor consequat enim occaecat\",\n \"moreInfo\": \"in culpa anim Duis velit\",\n \"error\": [\n  {\n   \"code\": \"in Lorem cillum pariatur\",\n   \"message\": \"ea\"\n  },\n  {\n   \"code\": \"esse aliqua\",\n   \"message\": \"labore sunt\"\n  }\n ]\n}"
												},
												{
													"name": "Not Acceptable.\nThe requested media type is not supported.\n",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Validator for conditional requests; based on the ETag of the formerly retrieved\nvariant of the resourec.\n",
																"key": "If-None-Match",
																"value": "<string>"
															},
															{
																"description": "Validator for conditional requests; based on Last Modified header of the\nformerly retrieved variant of the resource.\n",
																"key": "If-Modified-Since",
																"value": "<string>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/throttling/policies/advanced/:policyId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"throttling",
																"policies",
																"advanced",
																":policyId"
															],
															"variable": [
																{
																	"key": "policyId"
																}
															]
														}
													},
													"status": "Not Acceptable",
													"code": 406,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 34643070,\n \"message\": \"dolore qui ipsum exercitation ad\",\n \"description\": \"dolor consequat enim occaecat\",\n \"moreInfo\": \"in culpa anim Duis velit\",\n \"error\": [\n  {\n   \"code\": \"in Lorem cillum pariatur\",\n   \"message\": \"ea\"\n  },\n  {\n   \"code\": \"esse aliqua\",\n   \"message\": \"labore sunt\"\n  }\n ]\n}"
												}
											]
										},
										{
											"name": "Delete an Advanced level throttle policy",
											"request": {
												"method": "DELETE",
												"header": [
													{
														"description": "Validator for conditional requests; based on ETag.\n",
														"key": "If-Match",
														"value": "<string>"
													},
													{
														"description": "Validator for conditional requests; based on Last Modified header.\n",
														"key": "If-Unmodified-Since",
														"value": "<string>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/throttling/policies/advanced/:policyId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"throttling",
														"policies",
														"advanced",
														":policyId"
													],
													"variable": [
														{
															"id": "fb17192a-705f-4b6b-a6c7-8e442a25a6f1",
															"key": "policyId",
															"value": "<string>",
															"type": "string",
															"description": "(Required) Thorttle policy UUID\n"
														}
													]
												},
												"description": "Delete an Advanced level throttle policy\n"
											},
											"response": [
												{
													"name": "Not Found.\nResource to be deleted does not exist.\n",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Validator for conditional requests; based on ETag.\n",
																"key": "If-Match",
																"value": "<string>"
															},
															{
																"description": "Validator for conditional requests; based on Last Modified header.\n",
																"key": "If-Unmodified-Since",
																"value": "<string>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/throttling/policies/advanced/:policyId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"throttling",
																"policies",
																"advanced",
																":policyId"
															],
															"variable": [
																{
																	"key": "policyId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 34643070,\n \"message\": \"dolore qui ipsum exercitation ad\",\n \"description\": \"dolor consequat enim occaecat\",\n \"moreInfo\": \"in culpa anim Duis velit\",\n \"error\": [\n  {\n   \"code\": \"in Lorem cillum pariatur\",\n   \"message\": \"ea\"\n  },\n  {\n   \"code\": \"esse aliqua\",\n   \"message\": \"labore sunt\"\n  }\n ]\n}"
												},
												{
													"name": "Precondition Failed.\nThe request has not been performed because one of the preconditions is not met.\n",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Validator for conditional requests; based on ETag.\n",
																"key": "If-Match",
																"value": "<string>"
															},
															{
																"description": "Validator for conditional requests; based on Last Modified header.\n",
																"key": "If-Unmodified-Since",
																"value": "<string>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/throttling/policies/advanced/:policyId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"throttling",
																"policies",
																"advanced",
																":policyId"
															],
															"variable": [
																{
																	"key": "policyId"
																}
															]
														}
													},
													"status": "Precondition Failed",
													"code": 412,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 34643070,\n \"message\": \"dolore qui ipsum exercitation ad\",\n \"description\": \"dolor consequat enim occaecat\",\n \"moreInfo\": \"in culpa anim Duis velit\",\n \"error\": [\n  {\n   \"code\": \"in Lorem cillum pariatur\",\n   \"message\": \"ea\"\n  },\n  {\n   \"code\": \"esse aliqua\",\n   \"message\": \"labore sunt\"\n  }\n ]\n}"
												},
												{
													"name": "OK.\nResource successfully deleted.\n",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Validator for conditional requests; based on ETag.\n",
																"key": "If-Match",
																"value": "<string>"
															},
															{
																"description": "Validator for conditional requests; based on Last Modified header.\n",
																"key": "If-Unmodified-Since",
																"value": "<string>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/throttling/policies/advanced/:policyId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"throttling",
																"policies",
																"advanced",
																":policyId"
															],
															"variable": [
																{
																	"key": "policyId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Update an Advanced level throttle policy",
											"request": {
												"method": "PUT",
												"header": [
													{
														"description": "(Required) Media type of the entity in the body. Default is JSON.\n",
														"key": "Content-Type",
														"value": "JSON"
													},
													{
														"description": "Validator for conditional requests; based on ETag.\n",
														"key": "If-Match",
														"value": "<string>"
													},
													{
														"description": "Validator for conditional requests; based on Last Modified header.\n",
														"key": "If-Unmodified-Since",
														"value": "<string>"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"policyId\": \"sunt voluptate \",\n    \"policyName\": \"incididunt quis velit sit\",\n    \"displayName\": \"et Excepteur\",\n    \"description\": \"non veniam\",\n    \"isDeployed\": false,\n    \"defaultLimit\": {\n        \"type\": \"BandwidthLimit\",\n        \"timeUnit\": \"dolor tempor ex Lorem\",\n        \"unitTime\": 0\n    },\n    \"conditionalGroups\": [\n        {\n            \"limit\": {\n                \"type\": \"RequestCountLimit\",\n                \"timeUnit\": \"fugiat reprehenderit\",\n                \"unitTime\": 0\n            },\n            \"conditions\": [\n                {\n                    \"type\": \"<string>\",\n                    \"invertCondition\": false\n                },\n                {\n                    \"type\": \"<string>\",\n                    \"invertCondition\": false\n                }\n            ],\n            \"description\": \"<string>\"\n        },\n        {\n            \"limit\": {\n                \"type\": \"BandwidthLimit\",\n                \"timeUnit\": \"non commodo\",\n                \"unitTime\": 0\n            },\n            \"conditions\": [\n                {\n                    \"type\": \"<string>\",\n                    \"invertCondition\": false\n                },\n                {\n                    \"type\": \"<string>\",\n                    \"invertCondition\": false\n                }\n            ],\n            \"description\": \"<string>\"\n        }\n    ]\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/throttling/policies/advanced/:policyId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"throttling",
														"policies",
														"advanced",
														":policyId"
													],
													"variable": [
														{
															"id": "9df10378-b9ae-40e0-b31e-c891295f99d0",
															"key": "policyId",
															"value": "<string>",
															"type": "string",
															"description": "(Required) Thorttle policy UUID\n"
														}
													]
												},
												"description": "Update an Advanced level throttle policy\n"
											},
											"response": [
												{
													"name": "Bad Request.\nInvalid request or validation error.\n",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "(Required) Media type of the entity in the body. Default is JSON.\n",
																"key": "Content-Type",
																"value": "JSON"
															},
															{
																"description": "Validator for conditional requests; based on ETag.\n",
																"key": "If-Match",
																"value": "<string>"
															},
															{
																"description": "Validator for conditional requests; based on Last Modified header.\n",
																"key": "If-Unmodified-Since",
																"value": "<string>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"policyId\": \"cillum in eiusmod\",\n    \"policyName\": \"dolor qui enim aliqua\",\n    \"displayName\": \"officia laboris\",\n    \"description\": \"reprehenderit quis magna consectetur dolor\",\n    \"isDeployed\": false,\n    \"defaultLimit\": {\n        \"type\": \"RequestCountLimit\",\n        \"timeUnit\": \"veniam culpa est ad\",\n        \"unitTime\": 0\n    },\n    \"conditionalGroups\": [\n        {\n            \"limit\": {\n                \"type\": \"BandwidthLimit\",\n                \"timeUnit\": \"laborum aliquip in\",\n                \"unitTime\": 0\n            },\n            \"conditions\": [\n                {\n                    \"type\": \"<string>\",\n                    \"invertCondition\": false\n                },\n                {\n                    \"type\": \"<string>\",\n                    \"invertCondition\": false\n                }\n            ],\n            \"description\": \"<string>\"\n        },\n        {\n            \"limit\": {\n                \"type\": \"RequestCountLimit\",\n                \"timeUnit\": \"ipsum laborum dolor aute\",\n                \"unitTime\": 0\n            },\n            \"conditions\": [\n                {\n                    \"type\": \"<string>\",\n                    \"invertCondition\": false\n                },\n                {\n                    \"type\": \"<string>\",\n                    \"invertCondition\": false\n                }\n            ],\n            \"description\": \"<string>\"\n        }\n    ]\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/throttling/policies/advanced/:policyId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"throttling",
																"policies",
																"advanced",
																":policyId"
															],
															"variable": [
																{
																	"key": "policyId"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 34643070,\n \"message\": \"dolore qui ipsum exercitation ad\",\n \"description\": \"dolor consequat enim occaecat\",\n \"moreInfo\": \"in culpa anim Duis velit\",\n \"error\": [\n  {\n   \"code\": \"in Lorem cillum pariatur\",\n   \"message\": \"ea\"\n  },\n  {\n   \"code\": \"esse aliqua\",\n   \"message\": \"labore sunt\"\n  }\n ]\n}"
												},
												{
													"name": "OK.\nPolicy updated.\n",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "(Required) Media type of the entity in the body. Default is JSON.\n",
																"key": "Content-Type",
																"value": "JSON"
															},
															{
																"description": "Validator for conditional requests; based on ETag.\n",
																"key": "If-Match",
																"value": "<string>"
															},
															{
																"description": "Validator for conditional requests; based on Last Modified header.\n",
																"key": "If-Unmodified-Since",
																"value": "<string>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"policyId\": \"cillum in eiusmod\",\n    \"policyName\": \"dolor qui enim aliqua\",\n    \"displayName\": \"officia laboris\",\n    \"description\": \"reprehenderit quis magna consectetur dolor\",\n    \"isDeployed\": false,\n    \"defaultLimit\": {\n        \"type\": \"RequestCountLimit\",\n        \"timeUnit\": \"veniam culpa est ad\",\n        \"unitTime\": 0\n    },\n    \"conditionalGroups\": [\n        {\n            \"limit\": {\n                \"type\": \"BandwidthLimit\",\n                \"timeUnit\": \"laborum aliquip in\",\n                \"unitTime\": 0\n            },\n            \"conditions\": [\n                {\n                    \"type\": \"<string>\",\n                    \"invertCondition\": false\n                },\n                {\n                    \"type\": \"<string>\",\n                    \"invertCondition\": false\n                }\n            ],\n            \"description\": \"<string>\"\n        },\n        {\n            \"limit\": {\n                \"type\": \"RequestCountLimit\",\n                \"timeUnit\": \"ipsum laborum dolor aute\",\n                \"unitTime\": 0\n            },\n            \"conditions\": [\n                {\n                    \"type\": \"<string>\",\n                    \"invertCondition\": false\n                },\n                {\n                    \"type\": \"<string>\",\n                    \"invertCondition\": false\n                }\n            ],\n            \"description\": \"<string>\"\n        }\n    ]\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/throttling/policies/advanced/:policyId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"throttling",
																"policies",
																"advanced",
																":policyId"
															],
															"variable": [
																{
																	"key": "policyId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Location",
															"value": "in nostrud proident deser",
															"description": "The URL of the newly created resource.\n"
														},
														{
															"key": "ETag",
															"value": "in nostrud proident deser",
															"description": "Entity Tag of the response resource.\nUsed by caches, or in conditional request.\n"
														},
														{
															"key": "Last-Modified",
															"value": "in nostrud proident deser",
															"description": "Date and time the resource has been modifed the last time.\nUsed by caches, or in conditional reuquests.\n"
														},
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"policyId\": \"cillum in eiusmod\",\n \"policyName\": \"dolor qui enim aliqua\",\n \"displayName\": \"officia laboris\",\n \"description\": \"reprehenderit quis magna consectetur dolor\",\n \"isDeployed\": false,\n \"defaultLimit\": {\n  \"type\": \"RequestCountLimit\",\n  \"timeUnit\": \"veniam culpa est ad\",\n  \"unitTime\": 0\n },\n \"conditionalGroups\": [\n  {\n   \"limit\": {\n    \"type\": \"BandwidthLimit\",\n    \"timeUnit\": \"laborum aliquip in\",\n    \"unitTime\": 0\n   },\n   \"conditions\": [\n    {\n     \"type\": \"<string>\",\n     \"invertCondition\": false\n    },\n    {\n     \"type\": \"<string>\",\n     \"invertCondition\": false\n    }\n   ],\n   \"description\": \"<string>\"\n  },\n  {\n   \"limit\": {\n    \"type\": \"RequestCountLimit\",\n    \"timeUnit\": \"ipsum laborum dolor aute\",\n    \"unitTime\": 0\n   },\n   \"conditions\": [\n    {\n     \"type\": \"<string>\",\n     \"invertCondition\": false\n    },\n    {\n     \"type\": \"<string>\",\n     \"invertCondition\": false\n    }\n   ],\n   \"description\": \"<string>\"\n  }\n ]\n}"
												},
												{
													"name": "Not Found.\nThe resource to be updated does not exist.\n",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "(Required) Media type of the entity in the body. Default is JSON.\n",
																"key": "Content-Type",
																"value": "JSON"
															},
															{
																"description": "Validator for conditional requests; based on ETag.\n",
																"key": "If-Match",
																"value": "<string>"
															},
															{
																"description": "Validator for conditional requests; based on Last Modified header.\n",
																"key": "If-Unmodified-Since",
																"value": "<string>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"policyId\": \"cillum in eiusmod\",\n    \"policyName\": \"dolor qui enim aliqua\",\n    \"displayName\": \"officia laboris\",\n    \"description\": \"reprehenderit quis magna consectetur dolor\",\n    \"isDeployed\": false,\n    \"defaultLimit\": {\n        \"type\": \"RequestCountLimit\",\n        \"timeUnit\": \"veniam culpa est ad\",\n        \"unitTime\": 0\n    },\n    \"conditionalGroups\": [\n        {\n            \"limit\": {\n                \"type\": \"BandwidthLimit\",\n                \"timeUnit\": \"laborum aliquip in\",\n                \"unitTime\": 0\n            },\n            \"conditions\": [\n                {\n                    \"type\": \"<string>\",\n                    \"invertCondition\": false\n                },\n                {\n                    \"type\": \"<string>\",\n                    \"invertCondition\": false\n                }\n            ],\n            \"description\": \"<string>\"\n        },\n        {\n            \"limit\": {\n                \"type\": \"RequestCountLimit\",\n                \"timeUnit\": \"ipsum laborum dolor aute\",\n                \"unitTime\": 0\n            },\n            \"conditions\": [\n                {\n                    \"type\": \"<string>\",\n                    \"invertCondition\": false\n                },\n                {\n                    \"type\": \"<string>\",\n                    \"invertCondition\": false\n                }\n            ],\n            \"description\": \"<string>\"\n        }\n    ]\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/throttling/policies/advanced/:policyId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"throttling",
																"policies",
																"advanced",
																":policyId"
															],
															"variable": [
																{
																	"key": "policyId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 34643070,\n \"message\": \"dolore qui ipsum exercitation ad\",\n \"description\": \"dolor consequat enim occaecat\",\n \"moreInfo\": \"in culpa anim Duis velit\",\n \"error\": [\n  {\n   \"code\": \"in Lorem cillum pariatur\",\n   \"message\": \"ea\"\n  },\n  {\n   \"code\": \"esse aliqua\",\n   \"message\": \"labore sunt\"\n  }\n ]\n}"
												},
												{
													"name": "Precondition Failed.\nThe request has not been performed because one of the preconditions is not met.\n",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "(Required) Media type of the entity in the body. Default is JSON.\n",
																"key": "Content-Type",
																"value": "JSON"
															},
															{
																"description": "Validator for conditional requests; based on ETag.\n",
																"key": "If-Match",
																"value": "<string>"
															},
															{
																"description": "Validator for conditional requests; based on Last Modified header.\n",
																"key": "If-Unmodified-Since",
																"value": "<string>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"policyId\": \"cillum in eiusmod\",\n    \"policyName\": \"dolor qui enim aliqua\",\n    \"displayName\": \"officia laboris\",\n    \"description\": \"reprehenderit quis magna consectetur dolor\",\n    \"isDeployed\": false,\n    \"defaultLimit\": {\n        \"type\": \"RequestCountLimit\",\n        \"timeUnit\": \"veniam culpa est ad\",\n        \"unitTime\": 0\n    },\n    \"conditionalGroups\": [\n        {\n            \"limit\": {\n                \"type\": \"BandwidthLimit\",\n                \"timeUnit\": \"laborum aliquip in\",\n                \"unitTime\": 0\n            },\n            \"conditions\": [\n                {\n                    \"type\": \"<string>\",\n                    \"invertCondition\": false\n                },\n                {\n                    \"type\": \"<string>\",\n                    \"invertCondition\": false\n                }\n            ],\n            \"description\": \"<string>\"\n        },\n        {\n            \"limit\": {\n                \"type\": \"RequestCountLimit\",\n                \"timeUnit\": \"ipsum laborum dolor aute\",\n                \"unitTime\": 0\n            },\n            \"conditions\": [\n                {\n                    \"type\": \"<string>\",\n                    \"invertCondition\": false\n                },\n                {\n                    \"type\": \"<string>\",\n                    \"invertCondition\": false\n                }\n            ],\n            \"description\": \"<string>\"\n        }\n    ]\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/throttling/policies/advanced/:policyId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"throttling",
																"policies",
																"advanced",
																":policyId"
															],
															"variable": [
																{
																	"key": "policyId"
																}
															]
														}
													},
													"status": "Precondition Failed",
													"code": 412,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"code\": 34643070,\n \"message\": \"dolore qui ipsum exercitation ad\",\n \"description\": \"dolor consequat enim occaecat\",\n \"moreInfo\": \"in culpa anim Duis velit\",\n \"error\": [\n  {\n   \"code\": \"in Lorem cillum pariatur\",\n   \"message\": \"ea\"\n  },\n  {\n   \"code\": \"esse aliqua\",\n   \"message\": \"labore sunt\"\n  }\n ]\n}"
												}
											]
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Get all Advanced level throttle policies",
									"request": {
										"method": "GET",
										"header": [
											{
												"description": "Media types acceptable for the response. Default is JSON.\n",
												"key": "Accept",
												"value": "JSON"
											},
											{
												"description": "Validator for conditional requests; based on the ETag of the formerly retrieved\nvariant of the resourec.\n",
												"key": "If-None-Match",
												"value": "<string>"
											},
											{
												"description": "Validator for conditional requests; based on Last Modified header of the\nformerly retrieved variant of the resource.\n",
												"key": "If-Modified-Since",
												"value": "<string>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/throttling/policies/advanced",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"throttling",
												"policies",
												"advanced"
											]
										},
										"description": "Get all Advanced level throttle policies\n"
									},
									"response": [
										{
											"name": "Not Modified.\nEmpty body because the client has already the latest version of the requested resource.\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Media types acceptable for the response. Default is JSON.\n",
														"key": "Accept",
														"value": "JSON"
													},
													{
														"description": "Validator for conditional requests; based on the ETag of the formerly retrieved\nvariant of the resourec.\n",
														"key": "If-None-Match",
														"value": "<string>"
													},
													{
														"description": "Validator for conditional requests; based on Last Modified header of the\nformerly retrieved variant of the resource.\n",
														"key": "If-Modified-Since",
														"value": "<string>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/throttling/policies/advanced",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"throttling",
														"policies",
														"advanced"
													]
												}
											},
											"status": "Not Modified",
											"code": 304,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "OK.\nPolicies returned\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Media types acceptable for the response. Default is JSON.\n",
														"key": "Accept",
														"value": "JSON"
													},
													{
														"description": "Validator for conditional requests; based on the ETag of the formerly retrieved\nvariant of the resourec.\n",
														"key": "If-None-Match",
														"value": "<string>"
													},
													{
														"description": "Validator for conditional requests; based on Last Modified header of the\nformerly retrieved variant of the resource.\n",
														"key": "If-Modified-Since",
														"value": "<string>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/throttling/policies/advanced",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"throttling",
														"policies",
														"advanced"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "ETag",
													"value": "in nostrud proident deser",
													"description": "Entity Tag of the response resource.\nUsed by caches, or in conditional requests.\n"
												},
												{
													"key": "Last-Modified",
													"value": "in nostrud proident deser",
													"description": "Date and time the resource has been modifed the last time.\nUsed by caches, or in conditional reuquests.\n"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"count\": 1,\n \"list\": [\n  {\n   \"policyId\": \"exercitation nostrud Ut\",\n   \"policyName\": \"est cillum\",\n   \"displayName\": \"tempor ex\",\n   \"description\": \"esse eu\",\n   \"isDeployed\": false,\n   \"defaultLimit\": {\n    \"type\": \"RequestCountLimit\",\n    \"timeUnit\": \"in in velit officia do\",\n    \"unitTime\": 0\n   }\n  },\n  {\n   \"policyId\": \"dolore Duis\",\n   \"policyName\": \"quis esse Ut sunt proident\",\n   \"displayName\": \"reprehenderit et\",\n   \"description\": \"proident\",\n   \"isDeployed\": false,\n   \"defaultLimit\": {\n    \"type\": \"RequestCountLimit\",\n    \"timeUnit\": \"tempor irure voluptate\",\n    \"unitTime\": 0\n   }\n  }\n ]\n}"
										},
										{
											"name": "Not Acceptable.\nThe requested media type is not supported.\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Media types acceptable for the response. Default is JSON.\n",
														"key": "Accept",
														"value": "JSON"
													},
													{
														"description": "Validator for conditional requests; based on the ETag of the formerly retrieved\nvariant of the resourec.\n",
														"key": "If-None-Match",
														"value": "<string>"
													},
													{
														"description": "Validator for conditional requests; based on Last Modified header of the\nformerly retrieved variant of the resource.\n",
														"key": "If-Modified-Since",
														"value": "<string>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/throttling/policies/advanced",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"throttling",
														"policies",
														"advanced"
													]
												}
											},
											"status": "Not Acceptable",
											"code": 406,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 34643070,\n \"message\": \"dolore qui ipsum exercitation ad\",\n \"description\": \"dolor consequat enim occaecat\",\n \"moreInfo\": \"in culpa anim Duis velit\",\n \"error\": [\n  {\n   \"code\": \"in Lorem cillum pariatur\",\n   \"message\": \"ea\"\n  },\n  {\n   \"code\": \"esse aliqua\",\n   \"message\": \"labore sunt\"\n  }\n ]\n}"
										}
									]
								},
								{
									"name": "Add an Advanced level throttle policy",
									"request": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) Media type of the entity in the body. Default is JSON.\n",
												"key": "Content-Type",
												"value": "JSON"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"policyId\": \"Lorem do\",\n    \"policyName\": \"d\",\n    \"displayName\": \"deserunt sit occaecat aliqua\",\n    \"description\": \"culpa esse veniam aute\",\n    \"isDeployed\": false,\n    \"defaultLimit\": {\n        \"type\": \"BandwidthLimit\",\n        \"timeUnit\": \"Lorem enim dolor\",\n        \"unitTime\": 0\n    },\n    \"conditionalGroups\": [\n        {\n            \"limit\": {\n                \"type\": \"RequestCountLimit\",\n                \"timeUnit\": \"et exercitation eni\",\n                \"unitTime\": 0\n            },\n            \"conditions\": [\n                {\n                    \"type\": \"<string>\",\n                    \"invertCondition\": false\n                },\n                {\n                    \"type\": \"<string>\",\n                    \"invertCondition\": false\n                }\n            ],\n            \"description\": \"<string>\"\n        },\n        {\n            \"limit\": {\n                \"type\": \"RequestCountLimit\",\n                \"timeUnit\": \"occaecat\",\n                \"unitTime\": 0\n            },\n            \"conditions\": [\n                {\n                    \"type\": \"<string>\",\n                    \"invertCondition\": false\n                },\n                {\n                    \"type\": \"<string>\",\n                    \"invertCondition\": false\n                }\n            ],\n            \"description\": \"<string>\"\n        }\n    ]\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/throttling/policies/advanced",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"throttling",
												"policies",
												"advanced"
											]
										},
										"description": "Add an Advanced level throttle policy\n"
									},
									"response": [
										{
											"name": "Created.\nSuccessful response with the newly created object as entity in the body.\nLocation header contains URL of newly created entity.\n",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "(Required) Media type of the entity in the body. Default is JSON.\n",
														"key": "Content-Type",
														"value": "JSON"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"policyId\": \"cillum in eiusmod\",\n    \"policyName\": \"dolor qui enim aliqua\",\n    \"displayName\": \"officia laboris\",\n    \"description\": \"reprehenderit quis magna consectetur dolor\",\n    \"isDeployed\": false,\n    \"defaultLimit\": {\n        \"type\": \"RequestCountLimit\",\n        \"timeUnit\": \"veniam culpa est ad\",\n        \"unitTime\": 0\n    },\n    \"conditionalGroups\": [\n        {\n            \"limit\": {\n                \"type\": \"BandwidthLimit\",\n                \"timeUnit\": \"laborum aliquip in\",\n                \"unitTime\": 0\n            },\n            \"conditions\": [\n                {\n                    \"type\": \"<string>\",\n                    \"invertCondition\": false\n                },\n                {\n                    \"type\": \"<string>\",\n                    \"invertCondition\": false\n                }\n            ],\n            \"description\": \"<string>\"\n        },\n        {\n            \"limit\": {\n                \"type\": \"RequestCountLimit\",\n                \"timeUnit\": \"ipsum laborum dolor aute\",\n                \"unitTime\": 0\n            },\n            \"conditions\": [\n                {\n                    \"type\": \"<string>\",\n                    \"invertCondition\": false\n                },\n                {\n                    \"type\": \"<string>\",\n                    \"invertCondition\": false\n                }\n            ],\n            \"description\": \"<string>\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/throttling/policies/advanced",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"throttling",
														"policies",
														"advanced"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Location",
													"value": "in nostrud proident deser",
													"description": "Location of the newly created Advanced Throttle policy.\n"
												},
												{
													"key": "ETag",
													"value": "in nostrud proident deser",
													"description": "Entity Tag of the response resource.\nUsed by caches, or in conditional request'\n"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"policyId\": \"cillum in eiusmod\",\n \"policyName\": \"dolor qui enim aliqua\",\n \"displayName\": \"officia laboris\",\n \"description\": \"reprehenderit quis magna consectetur dolor\",\n \"isDeployed\": false,\n \"defaultLimit\": {\n  \"type\": \"RequestCountLimit\",\n  \"timeUnit\": \"veniam culpa est ad\",\n  \"unitTime\": 0\n },\n \"conditionalGroups\": [\n  {\n   \"limit\": {\n    \"type\": \"BandwidthLimit\",\n    \"timeUnit\": \"laborum aliquip in\",\n    \"unitTime\": 0\n   },\n   \"conditions\": [\n    {\n     \"type\": \"<string>\",\n     \"invertCondition\": false\n    },\n    {\n     \"type\": \"<string>\",\n     \"invertCondition\": false\n    }\n   ],\n   \"description\": \"<string>\"\n  },\n  {\n   \"limit\": {\n    \"type\": \"RequestCountLimit\",\n    \"timeUnit\": \"ipsum laborum dolor aute\",\n    \"unitTime\": 0\n   },\n   \"conditions\": [\n    {\n     \"type\": \"<string>\",\n     \"invertCondition\": false\n    },\n    {\n     \"type\": \"<string>\",\n     \"invertCondition\": false\n    }\n   ],\n   \"description\": \"<string>\"\n  }\n ]\n}"
										},
										{
											"name": "Bad Request.\nInvalid request or validation error\n",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "(Required) Media type of the entity in the body. Default is JSON.\n",
														"key": "Content-Type",
														"value": "JSON"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"policyId\": \"cillum in eiusmod\",\n    \"policyName\": \"dolor qui enim aliqua\",\n    \"displayName\": \"officia laboris\",\n    \"description\": \"reprehenderit quis magna consectetur dolor\",\n    \"isDeployed\": false,\n    \"defaultLimit\": {\n        \"type\": \"RequestCountLimit\",\n        \"timeUnit\": \"veniam culpa est ad\",\n        \"unitTime\": 0\n    },\n    \"conditionalGroups\": [\n        {\n            \"limit\": {\n                \"type\": \"BandwidthLimit\",\n                \"timeUnit\": \"laborum aliquip in\",\n                \"unitTime\": 0\n            },\n            \"conditions\": [\n                {\n                    \"type\": \"<string>\",\n                    \"invertCondition\": false\n                },\n                {\n                    \"type\": \"<string>\",\n                    \"invertCondition\": false\n                }\n            ],\n            \"description\": \"<string>\"\n        },\n        {\n            \"limit\": {\n                \"type\": \"RequestCountLimit\",\n                \"timeUnit\": \"ipsum laborum dolor aute\",\n                \"unitTime\": 0\n            },\n            \"conditions\": [\n                {\n                    \"type\": \"<string>\",\n                    \"invertCondition\": false\n                },\n                {\n                    \"type\": \"<string>\",\n                    \"invertCondition\": false\n                }\n            ],\n            \"description\": \"<string>\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/throttling/policies/advanced",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"throttling",
														"policies",
														"advanced"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 34643070,\n \"message\": \"dolore qui ipsum exercitation ad\",\n \"description\": \"dolor consequat enim occaecat\",\n \"moreInfo\": \"in culpa anim Duis velit\",\n \"error\": [\n  {\n   \"code\": \"in Lorem cillum pariatur\",\n   \"message\": \"ea\"\n  },\n  {\n   \"code\": \"esse aliqua\",\n   \"message\": \"labore sunt\"\n  }\n ]\n}"
										},
										{
											"name": "Unsupported media type.\nThe entity of the request was in a not supported format.\n",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "(Required) Media type of the entity in the body. Default is JSON.\n",
														"key": "Content-Type",
														"value": "JSON"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"policyId\": \"cillum in eiusmod\",\n    \"policyName\": \"dolor qui enim aliqua\",\n    \"displayName\": \"officia laboris\",\n    \"description\": \"reprehenderit quis magna consectetur dolor\",\n    \"isDeployed\": false,\n    \"defaultLimit\": {\n        \"type\": \"RequestCountLimit\",\n        \"timeUnit\": \"veniam culpa est ad\",\n        \"unitTime\": 0\n    },\n    \"conditionalGroups\": [\n        {\n            \"limit\": {\n                \"type\": \"BandwidthLimit\",\n                \"timeUnit\": \"laborum aliquip in\",\n                \"unitTime\": 0\n            },\n            \"conditions\": [\n                {\n                    \"type\": \"<string>\",\n                    \"invertCondition\": false\n                },\n                {\n                    \"type\": \"<string>\",\n                    \"invertCondition\": false\n                }\n            ],\n            \"description\": \"<string>\"\n        },\n        {\n            \"limit\": {\n                \"type\": \"RequestCountLimit\",\n                \"timeUnit\": \"ipsum laborum dolor aute\",\n                \"unitTime\": 0\n            },\n            \"conditions\": [\n                {\n                    \"type\": \"<string>\",\n                    \"invertCondition\": false\n                },\n                {\n                    \"type\": \"<string>\",\n                    \"invertCondition\": false\n                }\n            ],\n            \"description\": \"<string>\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/throttling/policies/advanced",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"throttling",
														"policies",
														"advanced"
													]
												}
											},
											"status": "Unsupported Media Type",
											"code": 415,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "blacklist",
					"item": [
						{
							"name": "{condition Id}",
							"item": [
								{
									"name": "Retrieve a Blocking Condition",
									"request": {
										"method": "GET",
										"header": [
											{
												"description": "Validator for conditional requests; based on the ETag of the formerly retrieved\nvariant of the resourec.\n",
												"key": "If-None-Match",
												"value": "<string>"
											},
											{
												"description": "Validator for conditional requests; based on Last Modified header of the\nformerly retrieved variant of the resource.\n",
												"key": "If-Modified-Since",
												"value": "<string>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/throttling/blacklist/:conditionId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"throttling",
												"blacklist",
												":conditionId"
											],
											"variable": [
												{
													"id": "ac5a1270-5b11-446b-a50f-cda610167f83",
													"key": "conditionId",
													"value": "<string>",
													"type": "string",
													"description": "(Required) Blocking condition identifier \n"
												}
											]
										},
										"description": "Retrieve a Blocking Condition providing the condition Id\n"
									},
									"response": [
										{
											"name": "Not Modified.\nEmpty body because the client has already the latest version of the requested resource.\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Validator for conditional requests; based on the ETag of the formerly retrieved\nvariant of the resourec.\n",
														"key": "If-None-Match",
														"value": "<string>"
													},
													{
														"description": "Validator for conditional requests; based on Last Modified header of the\nformerly retrieved variant of the resource.\n",
														"key": "If-Modified-Since",
														"value": "<string>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/throttling/blacklist/:conditionId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"throttling",
														"blacklist",
														":conditionId"
													],
													"variable": [
														{
															"key": "conditionId"
														}
													]
												}
											},
											"status": "Not Modified",
											"code": 304,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Not Acceptable.\nThe requested media type is not supported.\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Validator for conditional requests; based on the ETag of the formerly retrieved\nvariant of the resourec.\n",
														"key": "If-None-Match",
														"value": "<string>"
													},
													{
														"description": "Validator for conditional requests; based on Last Modified header of the\nformerly retrieved variant of the resource.\n",
														"key": "If-Modified-Since",
														"value": "<string>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/throttling/blacklist/:conditionId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"throttling",
														"blacklist",
														":conditionId"
													],
													"variable": [
														{
															"key": "conditionId"
														}
													]
												}
											},
											"status": "Not Acceptable",
											"code": 406,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 34643070,\n \"message\": \"dolore qui ipsum exercitation ad\",\n \"description\": \"dolor consequat enim occaecat\",\n \"moreInfo\": \"in culpa anim Duis velit\",\n \"error\": [\n  {\n   \"code\": \"in Lorem cillum pariatur\",\n   \"message\": \"ea\"\n  },\n  {\n   \"code\": \"esse aliqua\",\n   \"message\": \"labore sunt\"\n  }\n ]\n}"
										},
										{
											"name": "Not Found.\nRequested Condition does not exist.\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Validator for conditional requests; based on the ETag of the formerly retrieved\nvariant of the resourec.\n",
														"key": "If-None-Match",
														"value": "<string>"
													},
													{
														"description": "Validator for conditional requests; based on Last Modified header of the\nformerly retrieved variant of the resource.\n",
														"key": "If-Modified-Since",
														"value": "<string>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/throttling/blacklist/:conditionId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"throttling",
														"blacklist",
														":conditionId"
													],
													"variable": [
														{
															"key": "conditionId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 34643070,\n \"message\": \"dolore qui ipsum exercitation ad\",\n \"description\": \"dolor consequat enim occaecat\",\n \"moreInfo\": \"in culpa anim Duis velit\",\n \"error\": [\n  {\n   \"code\": \"in Lorem cillum pariatur\",\n   \"message\": \"ea\"\n  },\n  {\n   \"code\": \"esse aliqua\",\n   \"message\": \"labore sunt\"\n  }\n ]\n}"
										},
										{
											"name": "OK.\nCondition returned\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Validator for conditional requests; based on the ETag of the formerly retrieved\nvariant of the resourec.\n",
														"key": "If-None-Match",
														"value": "<string>"
													},
													{
														"description": "Validator for conditional requests; based on Last Modified header of the\nformerly retrieved variant of the resource.\n",
														"key": "If-Modified-Since",
														"value": "<string>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/throttling/blacklist/:conditionId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"throttling",
														"blacklist",
														":conditionId"
													],
													"variable": [
														{
															"key": "conditionId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "ETag",
													"value": "in nostrud proident deser",
													"description": "Entity Tag of the response resource.\nUsed by caches, or in conditional requests.\n"
												},
												{
													"key": "Last-Modified",
													"value": "in nostrud proident deser",
													"description": "Date and time the resource has been modifed the last time.\nUsed by caches, or in conditional reuquests.\n"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"conditionType\": \"<string>\",\n \"conditionValue\": \"<string>\",\n \"conditionId\": \"<string>\"\n}"
										}
									]
								},
								{
									"name": "Delete a Blocking condition",
									"request": {
										"method": "DELETE",
										"header": [
											{
												"description": "Validator for conditional requests; based on ETag.\n",
												"key": "If-Match",
												"value": "<string>"
											},
											{
												"description": "Validator for conditional requests; based on Last Modified header.\n",
												"key": "If-Unmodified-Since",
												"value": "<string>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/throttling/blacklist/:conditionId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"throttling",
												"blacklist",
												":conditionId"
											],
											"variable": [
												{
													"id": "51dc4a7d-81b5-4170-93f2-39a224c3fde5",
													"key": "conditionId",
													"value": "<string>",
													"type": "string",
													"description": "(Required) Blocking condition identifier \n"
												}
											]
										},
										"description": "Delete a Blocking condition\n"
									},
									"response": [
										{
											"name": "OK.\nResource successfully deleted.\n",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Validator for conditional requests; based on ETag.\n",
														"key": "If-Match",
														"value": "<string>"
													},
													{
														"description": "Validator for conditional requests; based on Last Modified header.\n",
														"key": "If-Unmodified-Since",
														"value": "<string>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/throttling/blacklist/:conditionId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"throttling",
														"blacklist",
														":conditionId"
													],
													"variable": [
														{
															"key": "conditionId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Not Found.\nResource to be deleted does not exist.\n",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Validator for conditional requests; based on ETag.\n",
														"key": "If-Match",
														"value": "<string>"
													},
													{
														"description": "Validator for conditional requests; based on Last Modified header.\n",
														"key": "If-Unmodified-Since",
														"value": "<string>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/throttling/blacklist/:conditionId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"throttling",
														"blacklist",
														":conditionId"
													],
													"variable": [
														{
															"key": "conditionId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 34643070,\n \"message\": \"dolore qui ipsum exercitation ad\",\n \"description\": \"dolor consequat enim occaecat\",\n \"moreInfo\": \"in culpa anim Duis velit\",\n \"error\": [\n  {\n   \"code\": \"in Lorem cillum pariatur\",\n   \"message\": \"ea\"\n  },\n  {\n   \"code\": \"esse aliqua\",\n   \"message\": \"labore sunt\"\n  }\n ]\n}"
										},
										{
											"name": "Precondition Failed.\nThe request has not been performed because one of the preconditions is not met.\n",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Validator for conditional requests; based on ETag.\n",
														"key": "If-Match",
														"value": "<string>"
													},
													{
														"description": "Validator for conditional requests; based on Last Modified header.\n",
														"key": "If-Unmodified-Since",
														"value": "<string>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/throttling/blacklist/:conditionId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"throttling",
														"blacklist",
														":conditionId"
													],
													"variable": [
														{
															"key": "conditionId"
														}
													]
												}
											},
											"status": "Precondition Failed",
											"code": 412,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"code\": 34643070,\n \"message\": \"dolore qui ipsum exercitation ad\",\n \"description\": \"dolor consequat enim occaecat\",\n \"moreInfo\": \"in culpa anim Duis velit\",\n \"error\": [\n  {\n   \"code\": \"in Lorem cillum pariatur\",\n   \"message\": \"ea\"\n  },\n  {\n   \"code\": \"esse aliqua\",\n   \"message\": \"labore sunt\"\n  }\n ]\n}"
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Get all blocking condtions",
							"request": {
								"method": "GET",
								"header": [
									{
										"description": "Media types acceptable for the response. Default is JSON.\n",
										"key": "Accept",
										"value": "JSON"
									},
									{
										"description": "Validator for conditional requests; based on the ETag of the formerly retrieved\nvariant of the resourec.\n",
										"key": "If-None-Match",
										"value": "<string>"
									},
									{
										"description": "Validator for conditional requests; based on Last Modified header of the\nformerly retrieved variant of the resource.\n",
										"key": "If-Modified-Since",
										"value": "<string>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/throttling/blacklist",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"throttling",
										"blacklist"
									]
								},
								"description": "Get all blocking condtions\n"
							},
							"response": [
								{
									"name": "Not Modified.\nEmpty body because the client has already the latest version of the requested resource.\n",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Media types acceptable for the response. Default is JSON.\n",
												"key": "Accept",
												"value": "JSON"
											},
											{
												"description": "Validator for conditional requests; based on the ETag of the formerly retrieved\nvariant of the resourec.\n",
												"key": "If-None-Match",
												"value": "<string>"
											},
											{
												"description": "Validator for conditional requests; based on Last Modified header of the\nformerly retrieved variant of the resource.\n",
												"key": "If-Modified-Since",
												"value": "<string>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/throttling/blacklist",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"throttling",
												"blacklist"
											]
										}
									},
									"status": "Not Modified",
									"code": 304,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "OK.\nBlocking conditions returned\n",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Media types acceptable for the response. Default is JSON.\n",
												"key": "Accept",
												"value": "JSON"
											},
											{
												"description": "Validator for conditional requests; based on the ETag of the formerly retrieved\nvariant of the resourec.\n",
												"key": "If-None-Match",
												"value": "<string>"
											},
											{
												"description": "Validator for conditional requests; based on Last Modified header of the\nformerly retrieved variant of the resource.\n",
												"key": "If-Modified-Since",
												"value": "<string>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/throttling/blacklist",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"throttling",
												"blacklist"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "ETag",
											"value": "in nostrud proident deser",
											"description": "Entity Tag of the response resource.\nUsed by caches, or in conditional requests.\n"
										},
										{
											"key": "Last-Modified",
											"value": "in nostrud proident deser",
											"description": "Date and time the resource has been modifed the last time.\nUsed by caches, or in conditional reuquests.\n"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"count\": 1,\n \"list\": [\n  {\n   \"conditionType\": \"laboris sed sit voluptate\",\n   \"conditionValue\": \"exercitation laborum cillum irure occaecat\",\n   \"conditionId\": \"velit ullamco s\"\n  },\n  {\n   \"conditionType\": \"mollit aliqua occaecat fugiat amet\",\n   \"conditionValue\": \"nulla velit pariatur Lorem\",\n   \"conditionId\": \"deserunt voluptate\"\n  }\n ]\n}"
								},
								{
									"name": "Not Acceptable.\nThe requested media type is not supported.\n",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Media types acceptable for the response. Default is JSON.\n",
												"key": "Accept",
												"value": "JSON"
											},
											{
												"description": "Validator for conditional requests; based on the ETag of the formerly retrieved\nvariant of the resourec.\n",
												"key": "If-None-Match",
												"value": "<string>"
											},
											{
												"description": "Validator for conditional requests; based on Last Modified header of the\nformerly retrieved variant of the resource.\n",
												"key": "If-Modified-Since",
												"value": "<string>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/throttling/blacklist",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"throttling",
												"blacklist"
											]
										}
									},
									"status": "Not Acceptable",
									"code": 406,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 34643070,\n \"message\": \"dolore qui ipsum exercitation ad\",\n \"description\": \"dolor consequat enim occaecat\",\n \"moreInfo\": \"in culpa anim Duis velit\",\n \"error\": [\n  {\n   \"code\": \"in Lorem cillum pariatur\",\n   \"message\": \"ea\"\n  },\n  {\n   \"code\": \"esse aliqua\",\n   \"message\": \"labore sunt\"\n  }\n ]\n}"
								}
							]
						},
						{
							"name": "Add a Blocking condition",
							"request": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) Media type of the entity in the body. Default is JSON.\n",
										"key": "Content-Type",
										"value": "JSON"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"conditionType\": \"<string>\",\n    \"conditionValue\": \"<string>\",\n    \"conditionId\": \"<string>\"\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/throttling/blacklist",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"throttling",
										"blacklist"
									]
								},
								"description": "Add a Blocking condition\n"
							},
							"response": [
								{
									"name": "Created.\nSuccessful response with the newly created object as entity in the body.\nLocation header contains URL of newly created entity.\n",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) Media type of the entity in the body. Default is JSON.\n",
												"key": "Content-Type",
												"value": "JSON"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"conditionType\": \"<string>\",\n    \"conditionValue\": \"<string>\",\n    \"conditionId\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/throttling/blacklist",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"throttling",
												"blacklist"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Location",
											"value": "in nostrud proident deser",
											"description": "Location of the newly created resource.\n"
										},
										{
											"key": "ETag",
											"value": "in nostrud proident deser",
											"description": "Entity Tag of the response resource.\nUsed by caches, or in conditional request'\n"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"conditionType\": \"<string>\",\n \"conditionValue\": \"<string>\",\n \"conditionId\": \"<string>\"\n}"
								},
								{
									"name": "Unsupported media type.\nThe entity of the request was in a not supported format.\n",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) Media type of the entity in the body. Default is JSON.\n",
												"key": "Content-Type",
												"value": "JSON"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"conditionType\": \"<string>\",\n    \"conditionValue\": \"<string>\",\n    \"conditionId\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/throttling/blacklist",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"throttling",
												"blacklist"
											]
										}
									},
									"status": "Unsupported Media Type",
									"code": 415,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Bad Request.\nInvalid request or validation error\n",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) Media type of the entity in the body. Default is JSON.\n",
												"key": "Content-Type",
												"value": "JSON"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"conditionType\": \"<string>\",\n    \"conditionValue\": \"<string>\",\n    \"conditionId\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/throttling/blacklist",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"throttling",
												"blacklist"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 34643070,\n \"message\": \"dolore qui ipsum exercitation ad\",\n \"description\": \"dolor consequat enim occaecat\",\n \"moreInfo\": \"in culpa anim Duis velit\",\n \"error\": [\n  {\n   \"code\": \"in Lorem cillum pariatur\",\n   \"message\": \"ea\"\n  },\n  {\n   \"code\": \"esse aliqua\",\n   \"message\": \"labore sunt\"\n  }\n ]\n}"
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "policies/mediation",
			"item": [
				{
					"name": "{mediation Policy Id}",
					"item": [
						{
							"name": "Get a global mediation squence",
							"request": {
								"method": "GET",
								"header": [
									{
										"description": "Media types acceptable for the response. Default is JSON.\n",
										"key": "Accept",
										"value": "JSON"
									},
									{
										"description": "Validator for conditional requests; based on the ETag of the formerly retrieved\nvariant of the resourec.\n",
										"key": "If-None-Match",
										"value": "<string>"
									},
									{
										"description": "Validator for conditional requests; based on Last Modified header of the\nformerly retrieved variant of the resource.\n",
										"key": "If-Modified-Since",
										"value": "<string>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/policies/mediation/:mediationPolicyId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"policies",
										"mediation",
										":mediationPolicyId"
									],
									"variable": [
										{
											"id": "19780976-cbba-4844-a80f-81d1de812b7e",
											"key": "mediationPolicyId",
											"value": "<string>",
											"type": "string",
											"description": "(Required) Mediation policy Id\n"
										}
									]
								},
								"description": "This operation can be used to retrieve a particular global mediation policy.\n"
							},
							"response": [
								{
									"name": "Not Acceptable.\nThe requested media type is not supported\n",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Media types acceptable for the response. Default is JSON.\n",
												"key": "Accept",
												"value": "JSON"
											},
											{
												"description": "Validator for conditional requests; based on the ETag of the formerly retrieved\nvariant of the resourec.\n",
												"key": "If-None-Match",
												"value": "<string>"
											},
											{
												"description": "Validator for conditional requests; based on Last Modified header of the\nformerly retrieved variant of the resource.\n",
												"key": "If-Modified-Since",
												"value": "<string>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/policies/mediation/:mediationPolicyId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"policies",
												"mediation",
												":mediationPolicyId"
											],
											"variable": [
												{
													"key": "mediationPolicyId"
												}
											]
										}
									},
									"status": "Not Acceptable",
									"code": 406,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 34643070,\n \"message\": \"dolore qui ipsum exercitation ad\",\n \"description\": \"dolor consequat enim occaecat\",\n \"moreInfo\": \"in culpa anim Duis velit\",\n \"error\": [\n  {\n   \"code\": \"in Lorem cillum pariatur\",\n   \"message\": \"ea\"\n  },\n  {\n   \"code\": \"esse aliqua\",\n   \"message\": \"labore sunt\"\n  }\n ]\n}"
								},
								{
									"name": "Not Found.\nRequested Document does not exist.\n",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Media types acceptable for the response. Default is JSON.\n",
												"key": "Accept",
												"value": "JSON"
											},
											{
												"description": "Validator for conditional requests; based on the ETag of the formerly retrieved\nvariant of the resourec.\n",
												"key": "If-None-Match",
												"value": "<string>"
											},
											{
												"description": "Validator for conditional requests; based on Last Modified header of the\nformerly retrieved variant of the resource.\n",
												"key": "If-Modified-Since",
												"value": "<string>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/policies/mediation/:mediationPolicyId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"policies",
												"mediation",
												":mediationPolicyId"
											],
											"variable": [
												{
													"key": "mediationPolicyId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 34643070,\n \"message\": \"dolore qui ipsum exercitation ad\",\n \"description\": \"dolor consequat enim occaecat\",\n \"moreInfo\": \"in culpa anim Duis velit\",\n \"error\": [\n  {\n   \"code\": \"in Lorem cillum pariatur\",\n   \"message\": \"ea\"\n  },\n  {\n   \"code\": \"esse aliqua\",\n   \"message\": \"labore sunt\"\n  }\n ]\n}"
								},
								{
									"name": "OK.\nMediation Sequence returned.\n",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Media types acceptable for the response. Default is JSON.\n",
												"key": "Accept",
												"value": "JSON"
											},
											{
												"description": "Validator for conditional requests; based on the ETag of the formerly retrieved\nvariant of the resourec.\n",
												"key": "If-None-Match",
												"value": "<string>"
											},
											{
												"description": "Validator for conditional requests; based on Last Modified header of the\nformerly retrieved variant of the resource.\n",
												"key": "If-Modified-Since",
												"value": "<string>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/policies/mediation/:mediationPolicyId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"policies",
												"mediation",
												":mediationPolicyId"
											],
											"variable": [
												{
													"key": "mediationPolicyId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "ETag",
											"value": "in nostrud proident deser",
											"description": "Entity Tag of the response resource.\nUsed by caches, or in conditional requests (Will be supported in future).\n"
										},
										{
											"key": "Last-Modified",
											"value": "in nostrud proident deser",
											"description": "Date and time the resource has been modifed the last time.\nUsed by caches, or in conditional requests (Will be supported in future).\n"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"name\": \"json_fault.xml\",\n \"type\": \"in\",\n \"config\": \"<sequence xmlns=\\\"http://ws.apache.org/ns/synapse\\\" name=\\\"log_in_message\\\"> <log level=\\\"full\\\"> <property name=\\\"IN_MESSAGE\\\" value=\\\"IN_MESSAGE_21133232\\\"/> </log> </sequence>\",\n \"id\": \"01234567-0123-0123-0123-012345678901\"\n}"
								},
								{
									"name": "Not Modified.\nEmpty body because the client has already the latest version of the requested resource (Will be supported in future).\n",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Media types acceptable for the response. Default is JSON.\n",
												"key": "Accept",
												"value": "JSON"
											},
											{
												"description": "Validator for conditional requests; based on the ETag of the formerly retrieved\nvariant of the resourec.\n",
												"key": "If-None-Match",
												"value": "<string>"
											},
											{
												"description": "Validator for conditional requests; based on Last Modified header of the\nformerly retrieved variant of the resource.\n",
												"key": "If-Modified-Since",
												"value": "<string>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/policies/mediation/:mediationPolicyId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"policies",
												"mediation",
												":mediationPolicyId"
											],
											"variable": [
												{
													"key": "mediationPolicyId"
												}
											]
										}
									},
									"status": "Not Modified",
									"code": 304,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Delete an API",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"description": "Validator for conditional requests; based on ETag.\n",
										"key": "If-Match",
										"value": "<string>"
									},
									{
										"description": "Validator for conditional requests; based on Last Modified header.\n",
										"key": "If-Unmodified-Since",
										"value": "<string>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/policies/mediation/:mediationPolicyId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"policies",
										"mediation",
										":mediationPolicyId"
									],
									"variable": [
										{
											"id": "4bd910be-d60c-4f12-b496-34218e2f067c",
											"key": "mediationPolicyId",
											"value": "<string>",
											"type": "string",
											"description": "(Required) Mediation policy Id\n"
										}
									]
								},
								"description": "This operation can be used to delete an existing API proving the Id of the API.\n"
							},
							"response": [
								{
									"name": "Precondition Failed.\nThe request has not been performed because one of the preconditions is not met.\n",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Validator for conditional requests; based on ETag.\n",
												"key": "If-Match",
												"value": "<string>"
											},
											{
												"description": "Validator for conditional requests; based on Last Modified header.\n",
												"key": "If-Unmodified-Since",
												"value": "<string>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/policies/mediation/:mediationPolicyId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"policies",
												"mediation",
												":mediationPolicyId"
											],
											"variable": [
												{
													"key": "mediationPolicyId"
												}
											]
										}
									},
									"status": "Precondition Failed",
									"code": 412,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 34643070,\n \"message\": \"dolore qui ipsum exercitation ad\",\n \"description\": \"dolor consequat enim occaecat\",\n \"moreInfo\": \"in culpa anim Duis velit\",\n \"error\": [\n  {\n   \"code\": \"in Lorem cillum pariatur\",\n   \"message\": \"ea\"\n  },\n  {\n   \"code\": \"esse aliqua\",\n   \"message\": \"labore sunt\"\n  }\n ]\n}"
								},
								{
									"name": "OK.\nResource successfully deleted.\n",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Validator for conditional requests; based on ETag.\n",
												"key": "If-Match",
												"value": "<string>"
											},
											{
												"description": "Validator for conditional requests; based on Last Modified header.\n",
												"key": "If-Unmodified-Since",
												"value": "<string>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/policies/mediation/:mediationPolicyId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"policies",
												"mediation",
												":mediationPolicyId"
											],
											"variable": [
												{
													"key": "mediationPolicyId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Forbidden.\nThe request must be conditional but no condition has been specified.\n",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Validator for conditional requests; based on ETag.\n",
												"key": "If-Match",
												"value": "<string>"
											},
											{
												"description": "Validator for conditional requests; based on Last Modified header.\n",
												"key": "If-Unmodified-Since",
												"value": "<string>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/policies/mediation/:mediationPolicyId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"policies",
												"mediation",
												":mediationPolicyId"
											],
											"variable": [
												{
													"key": "mediationPolicyId"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 34643070,\n \"message\": \"dolore qui ipsum exercitation ad\",\n \"description\": \"dolor consequat enim occaecat\",\n \"moreInfo\": \"in culpa anim Duis velit\",\n \"error\": [\n  {\n   \"code\": \"in Lorem cillum pariatur\",\n   \"message\": \"ea\"\n  },\n  {\n   \"code\": \"esse aliqua\",\n   \"message\": \"labore sunt\"\n  }\n ]\n}"
								},
								{
									"name": "Not Found.\nResource to be deleted does not exist.\n",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Validator for conditional requests; based on ETag.\n",
												"key": "If-Match",
												"value": "<string>"
											},
											{
												"description": "Validator for conditional requests; based on Last Modified header.\n",
												"key": "If-Unmodified-Since",
												"value": "<string>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/policies/mediation/:mediationPolicyId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"policies",
												"mediation",
												":mediationPolicyId"
											],
											"variable": [
												{
													"key": "mediationPolicyId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 34643070,\n \"message\": \"dolore qui ipsum exercitation ad\",\n \"description\": \"dolor consequat enim occaecat\",\n \"moreInfo\": \"in culpa anim Duis velit\",\n \"error\": [\n  {\n   \"code\": \"in Lorem cillum pariatur\",\n   \"message\": \"ea\"\n  },\n  {\n   \"code\": \"esse aliqua\",\n   \"message\": \"labore sunt\"\n  }\n ]\n}"
								}
							]
						},
						{
							"name": "Update an mediation policy",
							"request": {
								"method": "PUT",
								"header": [
									{
										"description": "(Required) Media type of the entity in the body. Default is JSON.\n",
										"key": "Content-Type",
										"value": "JSON"
									},
									{
										"description": "Validator for conditional requests; based on ETag.\n",
										"key": "If-Match",
										"value": "<string>"
									},
									{
										"description": "Validator for conditional requests; based on Last Modified header.\n",
										"key": "If-Unmodified-Since",
										"value": "<string>"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<string>\",\n    \"type\": \"<string>\",\n    \"config\": \"<string>\",\n    \"id\": \"<string>\"\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/policies/mediation/:mediationPolicyId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"policies",
										"mediation",
										":mediationPolicyId"
									],
									"variable": [
										{
											"id": "1860eaac-c8b3-4c76-9e7f-258f863a46df",
											"key": "mediationPolicyId",
											"value": "<string>",
											"type": "string",
											"description": "(Required) Mediation policy Id\n"
										}
									]
								},
								"description": "This operation can be used to update an existing API.\nBut the properties `name`, `version`, `context`, `provider`, `state` will not be changed by this operation.\n"
							},
							"response": [
								{
									"name": "Forbidden.\nThe request must be conditional but no condition has been specified.\n",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "(Required) Media type of the entity in the body. Default is JSON.\n",
												"key": "Content-Type",
												"value": "JSON"
											},
											{
												"description": "Validator for conditional requests; based on ETag.\n",
												"key": "If-Match",
												"value": "<string>"
											},
											{
												"description": "Validator for conditional requests; based on Last Modified header.\n",
												"key": "If-Unmodified-Since",
												"value": "<string>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"json_fault.xml\",\n    \"type\": \"in\",\n    \"config\": \"<sequence xmlns=\\\"http://ws.apache.org/ns/synapse\\\" name=\\\"log_in_message\\\"> <log level=\\\"full\\\"> <property name=\\\"IN_MESSAGE\\\" value=\\\"IN_MESSAGE_21133232\\\"/> </log> </sequence>\",\n    \"id\": \"01234567-0123-0123-0123-012345678901\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/policies/mediation/:mediationPolicyId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"policies",
												"mediation",
												":mediationPolicyId"
											],
											"variable": [
												{
													"key": "mediationPolicyId"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 34643070,\n \"message\": \"dolore qui ipsum exercitation ad\",\n \"description\": \"dolor consequat enim occaecat\",\n \"moreInfo\": \"in culpa anim Duis velit\",\n \"error\": [\n  {\n   \"code\": \"in Lorem cillum pariatur\",\n   \"message\": \"ea\"\n  },\n  {\n   \"code\": \"esse aliqua\",\n   \"message\": \"labore sunt\"\n  }\n ]\n}"
								},
								{
									"name": "OK.\nSuccessful response with updated API object\n",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "(Required) Media type of the entity in the body. Default is JSON.\n",
												"key": "Content-Type",
												"value": "JSON"
											},
											{
												"description": "Validator for conditional requests; based on ETag.\n",
												"key": "If-Match",
												"value": "<string>"
											},
											{
												"description": "Validator for conditional requests; based on Last Modified header.\n",
												"key": "If-Unmodified-Since",
												"value": "<string>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"json_fault.xml\",\n    \"type\": \"in\",\n    \"config\": \"<sequence xmlns=\\\"http://ws.apache.org/ns/synapse\\\" name=\\\"log_in_message\\\"> <log level=\\\"full\\\"> <property name=\\\"IN_MESSAGE\\\" value=\\\"IN_MESSAGE_21133232\\\"/> </log> </sequence>\",\n    \"id\": \"01234567-0123-0123-0123-012345678901\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/policies/mediation/:mediationPolicyId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"policies",
												"mediation",
												":mediationPolicyId"
											],
											"variable": [
												{
													"key": "mediationPolicyId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Location",
											"value": "in nostrud proident deser",
											"description": "The URL of the newly created resource.\n"
										},
										{
											"key": "ETag",
											"value": "in nostrud proident deser",
											"description": "Entity Tag of the response resource. Used by caches, or in conditional requests (Will be supported in future).\n"
										},
										{
											"key": "Last-Modified",
											"value": "in nostrud proident deser",
											"description": "Date and time the resource has been modifed the last time.\nUsed by caches, or in conditional requests (Will be supported in future).\n"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"name\": \"json_fault.xml\",\n \"type\": \"in\",\n \"config\": \"<sequence xmlns=\\\"http://ws.apache.org/ns/synapse\\\" name=\\\"log_in_message\\\"> <log level=\\\"full\\\"> <property name=\\\"IN_MESSAGE\\\" value=\\\"IN_MESSAGE_21133232\\\"/> </log> </sequence>\",\n \"id\": \"01234567-0123-0123-0123-012345678901\"\n}"
								},
								{
									"name": "Bad Request.\nInvalid request or validation error\n",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "(Required) Media type of the entity in the body. Default is JSON.\n",
												"key": "Content-Type",
												"value": "JSON"
											},
											{
												"description": "Validator for conditional requests; based on ETag.\n",
												"key": "If-Match",
												"value": "<string>"
											},
											{
												"description": "Validator for conditional requests; based on Last Modified header.\n",
												"key": "If-Unmodified-Since",
												"value": "<string>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"json_fault.xml\",\n    \"type\": \"in\",\n    \"config\": \"<sequence xmlns=\\\"http://ws.apache.org/ns/synapse\\\" name=\\\"log_in_message\\\"> <log level=\\\"full\\\"> <property name=\\\"IN_MESSAGE\\\" value=\\\"IN_MESSAGE_21133232\\\"/> </log> </sequence>\",\n    \"id\": \"01234567-0123-0123-0123-012345678901\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/policies/mediation/:mediationPolicyId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"policies",
												"mediation",
												":mediationPolicyId"
											],
											"variable": [
												{
													"key": "mediationPolicyId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 34643070,\n \"message\": \"dolore qui ipsum exercitation ad\",\n \"description\": \"dolor consequat enim occaecat\",\n \"moreInfo\": \"in culpa anim Duis velit\",\n \"error\": [\n  {\n   \"code\": \"in Lorem cillum pariatur\",\n   \"message\": \"ea\"\n  },\n  {\n   \"code\": \"esse aliqua\",\n   \"message\": \"labore sunt\"\n  }\n ]\n}"
								},
								{
									"name": "Precondition Failed.\nThe request has not been performed because one of the preconditions is not met.\n",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "(Required) Media type of the entity in the body. Default is JSON.\n",
												"key": "Content-Type",
												"value": "JSON"
											},
											{
												"description": "Validator for conditional requests; based on ETag.\n",
												"key": "If-Match",
												"value": "<string>"
											},
											{
												"description": "Validator for conditional requests; based on Last Modified header.\n",
												"key": "If-Unmodified-Since",
												"value": "<string>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"json_fault.xml\",\n    \"type\": \"in\",\n    \"config\": \"<sequence xmlns=\\\"http://ws.apache.org/ns/synapse\\\" name=\\\"log_in_message\\\"> <log level=\\\"full\\\"> <property name=\\\"IN_MESSAGE\\\" value=\\\"IN_MESSAGE_21133232\\\"/> </log> </sequence>\",\n    \"id\": \"01234567-0123-0123-0123-012345678901\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/policies/mediation/:mediationPolicyId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"policies",
												"mediation",
												":mediationPolicyId"
											],
											"variable": [
												{
													"key": "mediationPolicyId"
												}
											]
										}
									},
									"status": "Precondition Failed",
									"code": 412,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 34643070,\n \"message\": \"dolore qui ipsum exercitation ad\",\n \"description\": \"dolor consequat enim occaecat\",\n \"moreInfo\": \"in culpa anim Duis velit\",\n \"error\": [\n  {\n   \"code\": \"in Lorem cillum pariatur\",\n   \"message\": \"ea\"\n  },\n  {\n   \"code\": \"esse aliqua\",\n   \"message\": \"labore sunt\"\n  }\n ]\n}"
								},
								{
									"name": "Not Found.\nThe resource to be updated does not exist.\n",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "(Required) Media type of the entity in the body. Default is JSON.\n",
												"key": "Content-Type",
												"value": "JSON"
											},
											{
												"description": "Validator for conditional requests; based on ETag.\n",
												"key": "If-Match",
												"value": "<string>"
											},
											{
												"description": "Validator for conditional requests; based on Last Modified header.\n",
												"key": "If-Unmodified-Since",
												"value": "<string>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"json_fault.xml\",\n    \"type\": \"in\",\n    \"config\": \"<sequence xmlns=\\\"http://ws.apache.org/ns/synapse\\\" name=\\\"log_in_message\\\"> <log level=\\\"full\\\"> <property name=\\\"IN_MESSAGE\\\" value=\\\"IN_MESSAGE_21133232\\\"/> </log> </sequence>\",\n    \"id\": \"01234567-0123-0123-0123-012345678901\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/policies/mediation/:mediationPolicyId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"policies",
												"mediation",
												":mediationPolicyId"
											],
											"variable": [
												{
													"key": "mediationPolicyId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"code\": 34643070,\n \"message\": \"dolore qui ipsum exercitation ad\",\n \"description\": \"dolor consequat enim occaecat\",\n \"moreInfo\": \"in culpa anim Duis velit\",\n \"error\": [\n  {\n   \"code\": \"in Lorem cillum pariatur\",\n   \"message\": \"ea\"\n  },\n  {\n   \"code\": \"esse aliqua\",\n   \"message\": \"labore sunt\"\n  }\n ]\n}"
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Retrieve/Search APIs\n",
					"request": {
						"method": "GET",
						"header": [
							{
								"description": "Media types acceptable for the response. Default is JSON.\n",
								"key": "Accept",
								"value": "JSON"
							},
							{
								"description": "Validator for conditional requests; based on the ETag of the formerly retrieved\nvariant of the resourec.\n",
								"key": "If-None-Match",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/policies/mediation?limit=25&offset=0&query=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"policies",
								"mediation"
							],
							"query": [
								{
									"key": "limit",
									"value": "25",
									"description": "Maximum size of resource array to return.\n"
								},
								{
									"key": "offset",
									"value": "0",
									"description": "Starting point within the complete list of items qualified.\n"
								},
								{
									"key": "query",
									"value": "<string>",
									"description": "**Search condition**.\n\nYou can search in attributes by using an **\"<attribute>:\"** modifier.\n\nEg.\n\"provider:wso2\" will match an API if the provider of the API is exactly \"wso2\".\n\nAdditionally you can use wildcards.\n\nEg.\n\"provider:wso2*\" will match an API if the provider of the API starts with \"wso2\".\n\nSupported attribute modifiers are [**version, context, status,\ndescription, subcontext, doc, provider**]\n\nIf no advanced attribute modifier has been specified, search will match the\ngiven query string against API Name.\n"
								}
							]
						},
						"description": "This operation provides you a list of available APIs qualifying under a given search condition.\n\nEach retrieved API is represented with a minimal amount of attributes. If you want to get complete details of an API, you need to use **Get details of an API** operation.\n"
					},
					"response": [
						{
							"name": "Not Acceptable.\nThe requested media type is not supported\n",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Media types acceptable for the response. Default is JSON.\n",
										"key": "Accept",
										"value": "JSON"
									},
									{
										"description": "Validator for conditional requests; based on the ETag of the formerly retrieved\nvariant of the resourec.\n",
										"key": "If-None-Match",
										"value": "<string>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/policies/mediation?limit=25&offset=0&query=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"policies",
										"mediation"
									],
									"query": [
										{
											"key": "limit",
											"value": "25"
										},
										{
											"key": "offset",
											"value": "0"
										},
										{
											"key": "query",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Not Acceptable",
							"code": 406,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 34643070,\n \"message\": \"dolore qui ipsum exercitation ad\",\n \"description\": \"dolor consequat enim occaecat\",\n \"moreInfo\": \"in culpa anim Duis velit\",\n \"error\": [\n  {\n   \"code\": \"in Lorem cillum pariatur\",\n   \"message\": \"ea\"\n  },\n  {\n   \"code\": \"esse aliqua\",\n   \"message\": \"labore sunt\"\n  }\n ]\n}"
						},
						{
							"name": "OK.\nList of qualifying APIs is returned.\n",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Media types acceptable for the response. Default is JSON.\n",
										"key": "Accept",
										"value": "JSON"
									},
									{
										"description": "Validator for conditional requests; based on the ETag of the formerly retrieved\nvariant of the resourec.\n",
										"key": "If-None-Match",
										"value": "<string>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/policies/mediation?limit=25&offset=0&query=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"policies",
										"mediation"
									],
									"query": [
										{
											"key": "limit",
											"value": "25"
										},
										{
											"key": "offset",
											"value": "0"
										},
										{
											"key": "query",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "ETag",
									"value": "in nostrud proident deser",
									"description": "Entity Tag of the response resource. Used by caches, or in conditional requests (Will be supported in future).\n"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"count\": 1,\n \"next\": \"\",\n \"previous\": \"\",\n \"list\": [\n  {\n   \"name\": \"json_fault.xml\",\n   \"type\": \"in\",\n   \"id\": \"01234567-0123-0123-0123-012345678901\"\n  },\n  {\n   \"name\": \"json_fault.xml\",\n   \"type\": \"in\",\n   \"id\": \"01234567-0123-0123-0123-012345678901\"\n  }\n ]\n}"
						},
						{
							"name": "Not Modified.\nEmpty body because the client has already the latest version of the requested resource (Will be supported in future).\n",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Media types acceptable for the response. Default is JSON.\n",
										"key": "Accept",
										"value": "JSON"
									},
									{
										"description": "Validator for conditional requests; based on the ETag of the formerly retrieved\nvariant of the resourec.\n",
										"key": "If-None-Match",
										"value": "<string>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/policies/mediation?limit=25&offset=0&query=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"policies",
										"mediation"
									],
									"query": [
										{
											"key": "limit",
											"value": "25"
										},
										{
											"key": "offset",
											"value": "0"
										},
										{
											"key": "query",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Not Modified",
							"code": 304,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Upload a global mediation policy",
					"request": {
						"method": "POST",
						"header": [
							{
								"description": "(Required) Media type of the entity in the body. Default is JSON.\n",
								"key": "Content-Type",
								"value": "JSON"
							},
							{
								"description": "Validator for conditional requests; based on ETag.\n",
								"key": "If-Match",
								"value": "<string>"
							},
							{
								"description": "Validator for conditional requests; based on Last Modified header.\n",
								"key": "If-Unmodified-Since",
								"value": "<string>"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"<string>\",\n    \"type\": \"<string>\",\n    \"config\": \"<string>\",\n    \"id\": \"<string>\"\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/policies/mediation",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"policies",
								"mediation"
							]
						},
						"description": "This operation can be used to upload a global mediatoin policy to the registry. The file to be uploaded should be given as a form data parameter `file`.\n"
					},
					"response": [
						{
							"name": "Precondition Failed.\nThe request has not been performed because one of the preconditions is not met.\n",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) Media type of the entity in the body. Default is JSON.\n",
										"key": "Content-Type",
										"value": "JSON"
									},
									{
										"description": "Validator for conditional requests; based on ETag.\n",
										"key": "If-Match",
										"value": "<string>"
									},
									{
										"description": "Validator for conditional requests; based on Last Modified header.\n",
										"key": "If-Unmodified-Since",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"json_fault.xml\",\n    \"type\": \"in\",\n    \"config\": \"<sequence xmlns=\\\"http://ws.apache.org/ns/synapse\\\" name=\\\"log_in_message\\\"> <log level=\\\"full\\\"> <property name=\\\"IN_MESSAGE\\\" value=\\\"IN_MESSAGE_21133232\\\"/> </log> </sequence>\",\n    \"id\": \"01234567-0123-0123-0123-012345678901\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/policies/mediation",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"policies",
										"mediation"
									]
								}
							},
							"status": "Precondition Failed",
							"code": 412,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 34643070,\n \"message\": \"dolore qui ipsum exercitation ad\",\n \"description\": \"dolor consequat enim occaecat\",\n \"moreInfo\": \"in culpa anim Duis velit\",\n \"error\": [\n  {\n   \"code\": \"in Lorem cillum pariatur\",\n   \"message\": \"ea\"\n  },\n  {\n   \"code\": \"esse aliqua\",\n   \"message\": \"labore sunt\"\n  }\n ]\n}"
						},
						{
							"name": "Not Found.\nThe resource to be updated does not exist.\n",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) Media type of the entity in the body. Default is JSON.\n",
										"key": "Content-Type",
										"value": "JSON"
									},
									{
										"description": "Validator for conditional requests; based on ETag.\n",
										"key": "If-Match",
										"value": "<string>"
									},
									{
										"description": "Validator for conditional requests; based on Last Modified header.\n",
										"key": "If-Unmodified-Since",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"json_fault.xml\",\n    \"type\": \"in\",\n    \"config\": \"<sequence xmlns=\\\"http://ws.apache.org/ns/synapse\\\" name=\\\"log_in_message\\\"> <log level=\\\"full\\\"> <property name=\\\"IN_MESSAGE\\\" value=\\\"IN_MESSAGE_21133232\\\"/> </log> </sequence>\",\n    \"id\": \"01234567-0123-0123-0123-012345678901\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/policies/mediation",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"policies",
										"mediation"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 34643070,\n \"message\": \"dolore qui ipsum exercitation ad\",\n \"description\": \"dolor consequat enim occaecat\",\n \"moreInfo\": \"in culpa anim Duis velit\",\n \"error\": [\n  {\n   \"code\": \"in Lorem cillum pariatur\",\n   \"message\": \"ea\"\n  },\n  {\n   \"code\": \"esse aliqua\",\n   \"message\": \"labore sunt\"\n  }\n ]\n}"
						},
						{
							"name": "Bad Request.\nInvalid request or validation error.\n",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) Media type of the entity in the body. Default is JSON.\n",
										"key": "Content-Type",
										"value": "JSON"
									},
									{
										"description": "Validator for conditional requests; based on ETag.\n",
										"key": "If-Match",
										"value": "<string>"
									},
									{
										"description": "Validator for conditional requests; based on Last Modified header.\n",
										"key": "If-Unmodified-Since",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"json_fault.xml\",\n    \"type\": \"in\",\n    \"config\": \"<sequence xmlns=\\\"http://ws.apache.org/ns/synapse\\\" name=\\\"log_in_message\\\"> <log level=\\\"full\\\"> <property name=\\\"IN_MESSAGE\\\" value=\\\"IN_MESSAGE_21133232\\\"/> </log> </sequence>\",\n    \"id\": \"01234567-0123-0123-0123-012345678901\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/policies/mediation",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"policies",
										"mediation"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 34643070,\n \"message\": \"dolore qui ipsum exercitation ad\",\n \"description\": \"dolor consequat enim occaecat\",\n \"moreInfo\": \"in culpa anim Duis velit\",\n \"error\": [\n  {\n   \"code\": \"in Lorem cillum pariatur\",\n   \"message\": \"ea\"\n  },\n  {\n   \"code\": \"esse aliqua\",\n   \"message\": \"labore sunt\"\n  }\n ]\n}"
						},
						{
							"name": "OK.\nmediation policy uploaded\n",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) Media type of the entity in the body. Default is JSON.\n",
										"key": "Content-Type",
										"value": "JSON"
									},
									{
										"description": "Validator for conditional requests; based on ETag.\n",
										"key": "If-Match",
										"value": "<string>"
									},
									{
										"description": "Validator for conditional requests; based on Last Modified header.\n",
										"key": "If-Unmodified-Since",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"json_fault.xml\",\n    \"type\": \"in\",\n    \"config\": \"<sequence xmlns=\\\"http://ws.apache.org/ns/synapse\\\" name=\\\"log_in_message\\\"> <log level=\\\"full\\\"> <property name=\\\"IN_MESSAGE\\\" value=\\\"IN_MESSAGE_21133232\\\"/> </log> </sequence>\",\n    \"id\": \"01234567-0123-0123-0123-012345678901\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/policies/mediation",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"policies",
										"mediation"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Location",
									"value": "in nostrud proident deser",
									"description": "The URL of the uploaded thumbnail image of the API.\n"
								},
								{
									"key": "ETag",
									"value": "in nostrud proident deser",
									"description": "Entity Tag of the response resource.\nUsed by caches, or in conditional requests (Will be supported in future).\n"
								},
								{
									"key": "Last-Modified",
									"value": "in nostrud proident deser",
									"description": "Date and time the resource has been modifed the last time.\nUsed by caches, or in conditional requests (Will be supported in future).\n"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"name\": \"json_fault.xml\",\n \"type\": \"in\",\n \"config\": \"<sequence xmlns=\\\"http://ws.apache.org/ns/synapse\\\" name=\\\"log_in_message\\\"> <log level=\\\"full\\\"> <property name=\\\"IN_MESSAGE\\\" value=\\\"IN_MESSAGE_21133232\\\"/> </log> </sequence>\",\n \"id\": \"01234567-0123-0123-0123-012345678901\"\n}"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"variable": [
		{
			"id": "baseUrl",
			"key": "baseUrl",
			"value": "https://apis.wso2.com/api/am/admin/v0.11",
			"type": "string"
		}
	],
	"protocolProfileBehavior": {}
}